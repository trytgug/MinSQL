[
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "distinct": true,
        "field": "singer_id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "singer_id"
      ],
      "input": {
        "type": "table",
        "name": "singer"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "singer_id",
        "alias": "TotalSingers"
      }
    ],
    "input": {
      "type": "table",
      "name": "singer"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "country",
      "age"
    ],
    "input": {
      "operation": "extension",
      "order_by": {
        "attributes": [
          "age"
        ],
        "order": "desc"
      },
      "input": {
        "type": "table",
        "name": "singer"
      }
    }
  },
  {
    "operation": "extension",
    "order_by": {
      "attributes": [
        "age"
      ],
      "order": "desc"
    },
    "input": {
      "operation": "projection",
      "attributes": [
        "name",
        "country",
        "age"
      ],
      "input": {
        "type": "table",
        "name": "singer"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "avg",
        "field": "age"
      },
      {
        "type": "min",
        "field": "age"
      },
      {
        "type": "max",
        "field": "age"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "age"
      ],
      "input": {
        "operation": "selection",
        "condition": {
          "attribute": "country",
          "value": "France"
        },
        "input": {
          "type": "table",
          "name": "singer"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "avg",
        "field": "age"
      },
      {
        "type": "min",
        "field": "age"
      },
      {
        "type": "max",
        "field": "age"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "age"
      ],
      "input": {
        "operation": "selection",
        "condition": "country='France'",
        "input": {
          "type": "table",
          "name": "singer"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "song_release_year"
    ],
    "input": {
      "operation": "join",
      "condition": "singer.singer_id = MaxYear.singer_id",
      "left": {
        "operation": "selection",
        "condition": "singer.singer_id = singer_in_concert.singer_id",
        "input": {
          "operation": "join",
          "condition": "singer_in_concert.concert_id = concert.concert_id",
          "left": {
            "type": "table",
            "name": "singer"
          },
          "right": {
            "operation": "join",
            "condition": "singer_in_concert.concert_id = concert.concert_id",
            "left": {
              "type": "table",
              "name": "singer_in_concert"
            },
            "right": {
              "type": "table",
              "name": "concert"
            }
          }
        }
      },
      "right": {
        "operation": "rename",
        "new_name": "maxYear",
        "input": {
          "operation": "projection",
          "attributes": [
            "singer_id",
            "MAX(year) AS max_year"
          ],
          "input": {
            "operation": "aggregation",
            "group_by": [
              "singer_id"
            ],
            "aggregates": [
              {
                "type": "max",
                "field": "year"
              }
            ],
            "input": {
              "operation": "projection",
              "attributes": [
                "singer_id",
                "year"
              ],
              "input": {
                "operation": "join",
                "condition": "singer.singer_id = singer_in_concert.singer_id AND singer_in_concert.concert_id = concert.concert_id",
                "left": {
                  "operation": "join",
                  "condition": "singer_in_concert.concert_id = concert.concert_id",
                  "left": {
                    "type": "table",
                    "name": "singer"
                  },
                  "right": {
                    "type": "table",
                    "name": "singer_in_concert"
                  }
                },
                "right": {
                  "type": "table",
                  "name": "concert"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "song_release_year"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "left": "age",
        "operator": "=",
        "right": {
          "operation": "aggregation",
          "group_by": [],
          "aggregates": [
            {
              "type": "min",
              "field": "age"
            }
          ],
          "input": {
            "operation": "rename",
            "attributes": [
              "age"
            ],
            "input": {
              "operation": "selection",
              "condition": "true",
              "input": {
                "type": "table",
                "name": "singer"
              }
            }
          }
        }
      },
      "input": {
        "type": "table",
        "name": "singer"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "country"
    ],
    "input": {
      "operation": "selection",
      "condition": "age > 20",
      "input": {
        "operation": "distinct",
        "input": {
          "type": "table",
          "name": "singer"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "country"
    ],
    "input": {
      "operation": "selection",
      "condition": "age > 20",
      "input": {
        "type": "table",
        "name": "singer"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "country"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "singer_id",
        "alias": "num_singers"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "country",
        "singer_id"
      ],
      "input": {
        "type": "table",
        "name": "singer"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "country"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "singer_id",
        "alias": "num_singers"
      }
    ],
    "input": {
      "type": "table",
      "name": "singer"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "song_name"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "type": "greater_than",
        "field": "age",
        "value": {
          "operation": "aggregation",
          "group_by": [],
          "aggregates": [
            {
              "type": "avg",
              "field": "age"
            }
          ],
          "input": {
            "type": "table",
            "name": "singer"
          }
        }
      },
      "input": {
        "type": "table",
        "name": "singer"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "song_name"
    ],
    "input": {
      "operation": "selection",
      "conditions": {
        "operation": "greater_than",
        "left": "age",
        "right": {
          "operation": "aggregation",
          "group_by": [],
          "aggregates": [
            {
              "type": "avg",
              "field": "age"
            }
          ],
          "input": {
            "type": "table",
            "name": "singer"
          }
        }
      },
      "input": {
        "operation": "table",
        "name": "singer"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "location",
      "name"
    ],
    "input": {
      "operation": "selection",
      "conditions": [
        {
          "field": "capacity",
          "operator": ">=",
          "value": 5000
        },
        {
          "field": "capacity",
          "operator": "<=",
          "value": 10000
        }
      ],
      "input": {
        "type": "table",
        "name": "stadium"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "location",
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "5000 <= capacity <= 10000",
      "input": {
        "type": "table",
        "name": "stadium"
      }
    }
  },
  [
    {
      "operation": "aggregation",
      "aggregates": [
        {
          "type": "max",
          "field": "capacity"
        }
      ],
      "input": {
        "operation": "project",
        "attributes": [
          "capacity"
        ],
        "input": {
          "operation": "selection",
          "condition": "true",
          "input": {
            "type": "table",
            "name": "stadium"
          }
        }
      }
    },
    {
      "operation": "aggregation",
      "aggregates": [
        {
          "type": "sum",
          "field": "capacity",
          "as": "Total_Capacity"
        }
      ],
      "input": {
        "operation": "project",
        "attributes": [
          "capacity"
        ],
        "input": {
          "operation": "selection",
          "condition": "true",
          "input": {
            "type": "table",
            "name": "stadium"
          }
        }
      }
    },
    {
      "operation": "aggregation",
      "aggregates": [
        {
          "type": "count",
          "field": "*",
          "as": "Stadium_Count"
        }
      ],
      "input": {
        "operation": "selection",
        "condition": "true",
        "input": {
          "type": "table",
          "name": "stadium"
        }
      }
    },
    {
      "operation": "projection",
      "attributes": [
        "Total_Capacity / Stadium_Count AS Avg_Capacity"
      ],
      "input": {
        "operation": "cartesian_product",
        "left": {
          "operation": "aggregation",
          "aggregates": [
            {
              "type": "sum",
              "field": "capacity",
              "as": "Total_Capacity"
            }
          ],
          "input": {
            "operation": "project",
            "attributes": [
              "capacity"
            ],
            "input": {
              "operation": "selection",
              "condition": "true",
              "input": {
                "type": "table",
                "name": "stadium"
              }
            }
          }
        },
        "right": {
          "operation": "aggregation",
          "aggregates": [
            {
              "type": "count",
              "field": "*",
              "as": "Stadium_Count"
            }
          ],
          "input": {
            "operation": "selection",
            "condition": "true",
            "input": {
              "type": "table",
              "name": "stadium"
            }
          }
        }
      }
    }
  ],
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "AVG",
        "field": "capacity"
      },
      {
        "type": "MAX",
        "field": "capacity"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "capacity"
      ],
      "input": {
        "type": "table",
        "name": "Stadium"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "capacity"
    ],
    "input": {
      "operation": "join",
      "left": {
        "operation": "selection",
        "condition": "concert_count = max(concert_count)",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "stadium_id"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "concert_id",
              "alias": "concert_count"
            }
          ],
          "input": {
            "operation": "projection",
            "attributes": [
              "stadium_id"
            ],
            "input": {
              "operation": "join",
              "left": {
                "type": "table",
                "name": "concert"
              },
              "right": {
                "type": "table",
                "name": "stadium"
              }
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "stadium"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "capacity"
    ],
    "input": {
      "operation": "join",
      "condition": "stadium_id = stadium_id",
      "left": {
        "operation": "selection",
        "condition": "avg_att = max(avg_att)",
        "input": {
          "operation": "extension",
          "attributes": [
            "stadium_id",
            "(total_attendance / num_concerts) AS avg_att"
          ],
          "input": {
            "operation": "join",
            "condition": "stadium_id = stadium_id",
            "left": {
              "operation": "aggregation",
              "group_by": [
                "stadium_id"
              ],
              "aggregates": [
                {
                  "type": "sum",
                  "field": "attendance",
                  "alias": "total_attendance"
                }
              ],
              "input": {
                "type": "table",
                "name": "concert"
              }
            },
            "right": {
              "operation": "aggregation",
              "group_by": [
                "stadium_id"
              ],
              "aggregates": [
                {
                  "type": "count",
                  "field": "concert_id",
                  "alias": "num_concerts"
                }
              ],
              "input": {
                "type": "table",
                "name": "concert"
              }
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "stadium"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "concert_id"
      }
    ],
    "input": {
      "operation": "selection",
      "condition": "year = 2014 OR year = 2015",
      "input": {
        "type": "table",
        "name": "concert"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "*"
      }
    ],
    "input": {
      "operation": "selection",
      "condition": "year = 2014 OR year = 2015",
      "input": {
        "type": "table",
        "name": "concert"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "num_concerts"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "name",
        "stadium_id"
      ],
      "aggregates": [
        {
          "type": "count",
          "field": "concert_id",
          "alias": "num_concerts"
        }
      ],
      "input": {
        "operation": "join",
        "condition": "stadium.stadium_id = concert.stadium_id",
        "left": {
          "operation": "projection",
          "attributes": [
            "stadium_id",
            "name"
          ],
          "input": {
            "type": "table",
            "name": "stadium"
          }
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "stadium_id",
            "concert_id"
          ],
          "input": {
            "type": "table",
            "name": "concert"
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "stadium_id"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "concert_id",
        "as": "concert_count"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "stadium_id"
      ],
      "input": {
        "operation": "join",
        "condition": "concert.stadium_id = stadium.stadium_id",
        "left": {
          "type": "table",
          "name": "concert"
        },
        "right": {
          "type": "table",
          "name": "stadium"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "capacity"
    ],
    "input": {
      "operation": "join",
      "condition": "stadium.stadium_id = max_stadium.stadium_id",
      "left": {
        "type": "table",
        "name": "stadium"
      },
      "right": {
        "operation": "projection",
        "attributes": [
          "stadium_id"
        ],
        "input": {
          "operation": "extension",
          "order_by": {
            "attributes": [
              "num_concerts"
            ],
            "order": "desc"
          },
          "input": {
            "operation": "aggregation",
            "group_by": [
              "stadium_id"
            ],
            "aggregates": [
              {
                "type": "calculate_max",
                "field": "num_concerts"
              }
            ],
            "input": {
              "operation": "aggregation",
              "group_by": [
                "stadium_id"
              ],
              "aggregates": [
                {
                  "type": "count",
                  "field": "concert_id",
                  "as": "num_concerts"
                }
              ],
              "input": {
                "operation": "selection",
                "condition": "year >= 2014",
                "input": {
                  "type": "table",
                  "name": "concert"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "capacity"
    ],
    "input": {
      "operation": "join",
      "condition": "stadium.stadium_id = MaxStadium.stadium_id",
      "left": {
        "type": "table",
        "name": "stadium"
      },
      "right": {
        "operation": "selection",
        "condition": "concert_count = (SELECT MAX(concert_count) FROM (aggregation}",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "stadium_id"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "concert_id",
              "alias": "concert_count"
            }
          ],
          "input": {
            "operation": "selection",
            "condition": "year > 2013",
            "input": {
              "type": "table",
              "name": "concert"
            }
          }
        }
      }
    }
  },
  {
    "operation": "selection",
    "condition": {
      "operation": "forall",
      "variable": "z",
      "relation": {
        "operation": "aggregation",
        "group_by": [
          "year"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "concert_id",
            "alias": "count"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "year",
            "concert_id"
          ],
          "input": {
            "type": "table",
            "name": "concert"
          }
        }
      },
      "predicate": {
        "left_operand": {
          "operation": "in",
          "variable": "y",
          "relation": {
            "operation": "aggregation",
            "group_by": [
              "year"
            ],
            "aggregates": [
              {
                "type": "count",
                "field": "concert_id",
                "alias": "count"
              }
            ],
            "input": {
              "operation": "projection",
              "attributes": [
                "year",
                "concert_id"
              ],
              "input": {
                "type": "table",
                "name": "concert"
              }
            }
          }
        },
        "right_operand": {
          "operation": "in",
          "variable": "z",
          "relation": {
            "operation": "aggregation",
            "group_by": [
              "year"
            ],
            "aggregates": [
              {
                "type": "count",
                "field": "concert_id",
                "alias": "count"
              }
            ],
            "input": {
              "operation": "projection",
              "attributes": [
                "year",
                "concert_id"
              ],
              "input": {
                "type": "table",
                "name": "concert"
              }
            }
          }
        },
        "comparison": {
          "left": "y.count",
          "operator": ">=",
          "right": "z.count"
        }
      }
    },
    "input": {
      "operation": "aggregation",
      "group_by": [
        "year"
      ],
      "aggregates": [
        {
          "type": "count",
          "field": "concert_id",
          "alias": "count"
        }
      ],
      "input": {
        "operation": "projection",
        "attributes": [
          "year",
          "concert_id"
        ],
        "input": {
          "type": "table",
          "name": "concert"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "year"
    ],
    "input": {
      "operation": "selection",
      "condition": "concert_count = max_count",
      "input": {
        "operation": "cartesian_product",
        "left": {
          "operation": "aggregation",
          "group_by": [
            "year"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "concert_id",
              "as": "concert_count"
            }
          ],
          "input": {
            "type": "table",
            "name": "concert"
          }
        },
        "right": {
          "operation": "extension",
          "order_by": {
            "order": "undefined"
          },
          "input": {
            "operation": "aggregation",
            "group_by": [],
            "aggregates": [
              {
                "type": "max",
                "field": "concert_count",
                "as": "max_count"
              }
            ],
            "input": {
              "type": "variable",
              "name": "rho"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "difference",
      "left": {
        "operation": "projection",
        "attributes": [
          "stadium_id",
          "name"
        ],
        "input": {
          "operation": "table",
          "name": "stadium"
        }
      },
      "right": {
        "operation": "projection",
        "attributes": [
          "stadium_id",
          "name"
        ],
        "input": {
          "operation": "selection",
          "condition": "stadium_id IN (\u03c0_{stadium_id}(concert))",
          "input": {
            "operation": "table",
            "name": "stadium"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "stadium_id IN (SELECT stadium_id FROM stadium EXCEPT SELECT stadium_id FROM concert)",
      "input": {
        "type": "table",
        "name": "stadium"
      }
    }
  },
  {
    "operation": "intersection",
    "inputs": [
      {
        "operation": "projection",
        "attributes": [
          "country"
        ],
        "input": {
          "operation": "selection",
          "condition": "age > 40",
          "input": {
            "type": "table",
            "name": "singer"
          }
        }
      },
      {
        "operation": "projection",
        "attributes": [
          "country"
        ],
        "input": {
          "operation": "selection",
          "condition": "age < 30",
          "input": {
            "type": "table",
            "name": "singer"
          }
        }
      }
    ]
  },
  {
    "operation": "difference",
    "input1": {
      "operation": "projection",
      "attributes": [
        "name"
      ],
      "input": {
        "operation": "projection",
        "attributes": [
          "name",
          "stadium_id"
        ],
        "input": {
          "type": "table",
          "name": "stadium"
        }
      }
    },
    "input2": {
      "operation": "projection",
      "attributes": [
        "name"
      ],
      "input": {
        "operation": "selection",
        "condition": "stadium_id IN (SELECT stadium_id FROM concert WHERE year = 2014)",
        "input": {
          "operation": "projection",
          "attributes": [
            "name",
            "stadium_id"
          ],
          "input": {
            "type": "table",
            "name": "stadium"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "difference",
      "left": {
        "operation": "projection",
        "attributes": [
          "stadium_id",
          "name"
        ],
        "input": {
          "type": "table",
          "name": "stadium"
        }
      },
      "right": {
        "operation": "projection",
        "attributes": [
          "stadium_id"
        ],
        "input": {
          "operation": "selection",
          "conditions": [
            {
              "attribute": "date",
              "operator": ">=",
              "value": "01-Jan-2014"
            },
            {
              "attribute": "date",
              "operator": "<=",
              "value": "31-Dec-2014"
            }
          ],
          "input": {
            "type": "table",
            "name": "concert"
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "concert_name",
      "theme"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "singer_id",
        "alias": "number_of_singers"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "concert_name",
        "theme",
        "concert_id"
      ],
      "input": {
        "operation": "join",
        "condition": "singer_in_concert.singer_id = singer.singer_id",
        "left": {
          "operation": "join",
          "condition": "concert.concert_id = singer_in_concert.concert_id",
          "left": {
            "type": "table",
            "name": "concert"
          },
          "right": {
            "type": "table",
            "name": "singer_in_concert"
          }
        },
        "right": {
          "type": "table",
          "name": "singer"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "concert_name",
      "theme"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "singer_id",
        "alias": "number_of_singers"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "concert_name",
        "theme",
        "singer_id"
      ],
      "input": {
        "operation": "join",
        "condition": "singer_in_concert.singer_id = singer.singer_id",
        "left": {
          "operation": "join",
          "condition": "concert.concert_id = singer_in_concert.concert_id",
          "left": {
            "type": "table",
            "name": "concert"
          },
          "right": {
            "type": "table",
            "name": "singer_in_concert"
          }
        },
        "right": {
          "type": "table",
          "name": "singer"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "name"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "concert_id",
        "alias": "number_of_concerts"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "name",
        "concert_id"
      ],
      "input": {
        "operation": "selection",
        "condition": "singer.singer_id = singer_in_concert.singer_id",
        "input": {
          "operation": "cartesian_product",
          "left": {
            "type": "table",
            "name": "singer"
          },
          "right": {
            "type": "table",
            "name": "singer_in_concert"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "num_concerts"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "singer_id",
        "name"
      ],
      "aggregates": [
        {
          "type": "count",
          "field": "concert_id",
          "alias": "num_concerts"
        }
      ],
      "input": {
        "operation": "projection",
        "attributes": [
          "singer.singer_id",
          "singer.name",
          "singer_in_concert.concert_id"
        ],
        "input": {
          "operation": "selection",
          "condition": "singer.singer_id = singer_in_concert.singer_id",
          "input": {
            "operation": "cartesian_product",
            "left": {
              "type": "table",
              "name": "singer"
            },
            "right": {
              "type": "table",
              "name": "singer_in_concert"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "singer_in_concert.singer_id = singer.singer_id",
      "left": {
        "operation": "join",
        "condition": "concert.concert_id = singer_in_concert.concert_id",
        "left": {
          "operation": "selection",
          "condition": "year = 2014",
          "input": {
            "type": "table",
            "name": "concert"
          }
        },
        "right": {
          "type": "table",
          "name": "singer_in_concert"
        }
      },
      "right": {
        "type": "table",
        "name": "singer"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "in": {
          "attributes": [
            "singer_id"
          ],
          "subquery": {
            "operation": "projection",
            "attributes": [
              "singer_id"
            ],
            "input": {
              "operation": "selection",
              "condition": {
                "in": {
                  "attributes": [
                    "concert_id"
                  ],
                  "subquery": {
                    "operation": "projection",
                    "attributes": [
                      "concert_id"
                    ],
                    "input": {
                      "operation": "selection",
                      "condition": {
                        "attribute": "year",
                        "value": 2014,
                        "operator": "="
                      },
                      "input": {
                        "operation": "table",
                        "name": "concert"
                      }
                    }
                  }
                }
              },
              "input": {
                "operation": "table",
                "name": "singer_in_concert"
              }
            }
          }
        }
      },
      "input": {
        "operation": "table",
        "name": "singer"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "country"
    ],
    "input": {
      "operation": "selection",
      "condition": "song_name LIKE '%Hey%'",
      "input": {
        "type": "table",
        "name": "singer"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "country"
    ],
    "input": {
      "operation": "selection",
      "condition": "song_name LIKE '%Hey%'",
      "input": {
        "type": "table",
        "name": "singer"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "location"
    ],
    "input": {
      "operation": "join",
      "condition": "S_both.stadium_id = stadium.stadium_id",
      "left": {
        "operation": "intersection",
        "left": {
          "operation": "projection",
          "attributes": [
            "stadium_id"
          ],
          "input": {
            "operation": "selection",
            "condition": "year=2014",
            "input": {
              "type": "table",
              "name": "concert"
            }
          }
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "stadium_id"
          ],
          "input": {
            "operation": "selection",
            "condition": "year=2015",
            "input": {
              "type": "table",
              "name": "concert"
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "stadium"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "location"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "operation": "in",
        "field": "stadium_id",
        "values": {
          "operation": "intersection",
          "left": {
            "operation": "projection",
            "attributes": [
              "stadium_id"
            ],
            "input": {
              "operation": "selection",
              "condition": {
                "year": 2014
              },
              "input": {
                "type": "table",
                "name": "concert"
              }
            }
          },
          "right": {
            "operation": "projection",
            "attributes": [
              "stadium_id"
            ],
            "input": {
              "operation": "selection",
              "condition": {
                "year": 2015
              },
              "input": {
                "type": "table",
                "name": "concert"
              }
            }
          }
        }
      },
      "input": {
        "type": "table",
        "name": "stadium"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "concert_id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "concert_id"
      ],
      "input": {
        "operation": "rename",
        "new_name": "ConcertsInMaxCapacityStadium",
        "input": {
          "operation": "join",
          "condition": "concert.stadium_id = MaxCapacityStadium.stadium_id",
          "left": {
            "type": "table",
            "name": "concert"
          },
          "right": {
            "type": "rename",
            "new_name": "MaxCapacityStadium",
            "input": {
              "operation": "selection",
              "condition": "capacity = (select max(capacity) from stadium)",
              "input": {
                "type": "table",
                "name": "stadium"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "concert_id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "concert_id"
      ],
      "input": {
        "operation": "selection",
        "condition": "stadium_id = MaxCapacityStadium.stadium_id",
        "input": {
          "operation": "join",
          "condition": "concert.stadium_id = MaxCapacityStadium.stadium_id",
          "left": {
            "type": "table",
            "name": "concert"
          },
          "right": {
            "operation": "selection",
            "condition": "capacity = MaxCapacity",
            "input": {
              "operation": "projection",
              "attributes": [
                "stadium_id",
                "capacity"
              ],
              "input": {
                "operation": "selection",
                "condition": "capacity = max(capacity)",
                "input": {
                  "type": "table",
                  "name": "stadium"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "petid"
      }
    ],
    "input": {
      "operation": "selection",
      "condition": "weight > 10",
      "input": {
        "type": "table",
        "name": "pets"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "petid"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "petid"
      ],
      "input": {
        "operation": "selection",
        "condition": "weight > 10",
        "input": {
          "type": "table",
          "name": "pets"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "weight"
    ],
    "input": {
      "operation": "selection",
      "condition": "pet_age = (SELECT min(pet_age) FROM (pi_pet_age))",
      "input": {
        "operation": "selection",
        "condition": "pettype = 'dog'",
        "input": {
          "operation": "table",
          "name": "pets"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "weight"
    ],
    "input": {
      "operation": "selection",
      "conditions": {
        "pet_age": {
          "operation": "equals",
          "value": {
            "operation": "aggregation",
            "group_by": [
              "dummy"
            ],
            "aggregates": [
              {
                "type": "min",
                "field": "pet_age"
              }
            ],
            "input": {
              "operation": "selection",
              "conditions": {
                "pettype": {
                  "operation": "equals",
                  "value": "dog"
                }
              },
              "input": {
                "type": "table",
                "name": "pets"
              }
            }
          }
        }
      },
      "input": {
        "operation": "selection",
        "conditions": {
          "pettype": {
            "operation": "equals",
            "value": "dog"
          }
        },
        "input": {
          "type": "table",
          "name": "pets"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "pettype",
      "max_weight"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "pettype"
      ],
      "aggregates": [
        {
          "type": "max",
          "field": "weight",
          "alias": "max_weight"
        }
      ],
      "input": {
        "operation": "rename",
        "new_name": "PETS",
        "input": {
          "type": "table",
          "name": "pets"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "pettype",
      "max_weight"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "pettype"
      ],
      "aggregates": [
        {
          "type": "max",
          "field": "weight",
          "alias": "max_weight"
        }
      ],
      "input": {
        "type": "table",
        "name": "pets"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "petid"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "petid"
      ],
      "input": {
        "operation": "join",
        "condition": "stuid = has_pet.stuid",
        "left": {
          "operation": "projection",
          "attributes": [
            "stuid"
          ],
          "input": {
            "operation": "selection",
            "condition": "age > 20",
            "input": {
              "type": "table",
              "name": "student"
            }
          }
        },
        "right": {
          "type": "table",
          "name": "has_pet"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "petid"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "petid"
      ],
      "input": {
        "operation": "join",
        "condition": "student.stuid = has_pet.stuid",
        "left": {
          "operation": "selection",
          "condition": "age > 20",
          "input": {
            "type": "table",
            "name": "student"
          }
        },
        "right": {
          "type": "table",
          "name": "has_pet"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "petid"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "petid"
      ],
      "input": {
        "operation": "selection",
        "condition": "pets.pettype = 'dog'",
        "input": {
          "operation": "join",
          "condition": "result1.petid = pets.petid",
          "left": {
            "operation": "join",
            "condition": "result2.stuid = has_pet.stuid",
            "left": {
              "operation": "selection",
              "condition": "student.sex = 'F'",
              "input": {
                "type": "table",
                "name": "student"
              }
            },
            "right": {
              "type": "table",
              "name": "has_pet"
            }
          },
          "right": {
            "type": "table",
            "name": "pets"
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "petid"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "petid"
      ],
      "input": {
        "operation": "selection",
        "condition": "pettype = 'dog'",
        "input": {
          "operation": "join",
          "condition": "has_pet.petid = pets.petid",
          "left": {
            "operation": "join",
            "condition": "student.stuid = has_pet.stuid",
            "left": {
              "operation": "selection",
              "condition": "sex = 'female'",
              "input": {
                "type": "table",
                "name": "student"
              }
            },
            "right": {
              "type": "table",
              "name": "has_pet"
            }
          },
          "right": {
            "type": "table",
            "name": "pets"
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "pettype"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "pettype"
      ],
      "input": {
        "type": "table",
        "name": "pets"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "pettype"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "pettype"
      ],
      "input": {
        "operation": "distinct",
        "input": {
          "type": "table",
          "name": "pets"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "fname"
    ],
    "input": {
      "operation": "join",
      "condition": "result.stuid = student.stuid",
      "left": {
        "operation": "join",
        "condition": "pets.petid = has_pet.petid",
        "left": {
          "operation": "selection",
          "condition": "pettype = 'cat' OR pettype = 'dog'",
          "input": {
            "type": "table",
            "name": "pets"
          }
        },
        "right": {
          "type": "table",
          "name": "has_pet"
        }
      },
      "right": {
        "type": "table",
        "name": "student"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "fname"
    ],
    "input": {
      "operation": "join",
      "condition": "student.stuid = has_pet.stuid",
      "left": {
        "operation": "join",
        "condition": "pets.petid = has_pet.petid",
        "left": {
          "operation": "selection",
          "condition": "pettype = 'cat' OR pettype = 'dog'",
          "input": {
            "type": "table",
            "name": "pets"
          }
        },
        "right": {
          "type": "table",
          "name": "has_pet"
        }
      },
      "right": {
        "type": "table",
        "name": "student"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "fname"
    ],
    "input": {
      "operation": "join",
      "condition": "student.stuid = A.stuid",
      "left": {
        "type": "table",
        "name": "student"
      },
      "right": {
        "operation": "intersection",
        "inputs": [
          {
            "operation": "projection",
            "attributes": [
              "stuid"
            ],
            "input": {
              "operation": "join",
              "condition": "has_pet.petid = pets.petid",
              "left": {
                "type": "table",
                "name": "has_pet"
              },
              "right": {
                "operation": "selection",
                "condition": "pettype = 'cat'",
                "input": {
                  "type": "table",
                  "name": "pets"
                }
              }
            }
          },
          {
            "operation": "projection",
            "attributes": [
              "stuid"
            ],
            "input": {
              "operation": "join",
              "condition": "has_pet.petid = pets.petid",
              "left": {
                "type": "table",
                "name": "has_pet"
              },
              "right": {
                "operation": "selection",
                "condition": "pettype = 'dog'",
                "input": {
                  "type": "table",
                  "name": "pets"
                }
              }
            }
          }
        ]
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "fname"
    ],
    "input": {
      "operation": "join",
      "condition": "student.stuid = CatAndDogOwners.stuid",
      "left": {
        "type": "table",
        "name": "student"
      },
      "right": {
        "operation": "intersection",
        "left": {
          "operation": "projection",
          "attributes": [
            "stuid"
          ],
          "input": {
            "operation": "join",
            "condition": "has_pet.petid = Cats.petid",
            "left": {
              "type": "table",
              "name": "has_pet"
            },
            "right": {
              "operation": "selection",
              "condition": "pettype = 'cat'",
              "input": {
                "type": "table",
                "name": "pets"
              }
            }
          }
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "stuid"
          ],
          "input": {
            "operation": "join",
            "condition": "has_pet.petid = Dogs.petid",
            "left": {
              "type": "table",
              "name": "has_pet"
            },
            "right": {
              "operation": "selection",
              "condition": "pettype = 'dog'",
              "input": {
                "type": "table",
                "name": "pets"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "major",
      "age"
    ],
    "input": {
      "operation": "join",
      "condition": "StudentsWithoutCats.stuid = student.stuid",
      "left": {
        "operation": "difference",
        "left": {
          "operation": "projection",
          "attributes": [
            "stuid"
          ],
          "input": {
            "type": "table",
            "name": "student"
          }
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "stuid"
          ],
          "input": {
            "operation": "join",
            "condition": "pets.petid = has_pet.petid",
            "left": {
              "operation": "selection",
              "condition": "pettype = 'cat'",
              "input": {
                "type": "table",
                "name": "pets"
              }
            },
            "right": {
              "type": "table",
              "name": "has_pet"
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "student"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "major",
      "age"
    ],
    "input": {
      "operation": "join",
      "condition": "StudentsWithoutCats.stuid = student.stuid",
      "left": {
        "operation": "difference",
        "left": {
          "operation": "projection",
          "attributes": [
            "stuid"
          ],
          "input": {
            "operation": "table",
            "name": "student"
          }
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "stuid"
          ],
          "input": {
            "operation": "join",
            "condition": "has_pet.petid = Cats.petid",
            "left": {
              "operation": "table",
              "name": "has_pet"
            },
            "right": {
              "operation": "selection",
              "condition": "pettype = 'cat'",
              "input": {
                "operation": "table",
                "name": "pets"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "stuid"
    ],
    "input": {
      "operation": "difference",
      "left": {
        "operation": "projection",
        "attributes": [
          "stuid"
        ],
        "input": {
          "type": "table",
          "name": "student"
        }
      },
      "right": {
        "operation": "projection",
        "attributes": [
          "stuid"
        ],
        "input": {
          "operation": "join",
          "condition": "cat_pets.petid = has_pet.petid",
          "left": {
            "operation": "selection",
            "condition": "pettype = 'cat'",
            "input": {
              "type": "table",
              "name": "pets"
            }
          },
          "right": {
            "type": "table",
            "name": "has_pet"
          }
        }
      }
    }
  },
  {
    "operation": "difference",
    "left": {
      "operation": "projection",
      "attributes": [
        "stuid"
      ],
      "input": {
        "type": "table",
        "name": "student"
      }
    },
    "right": {
      "operation": "projection",
      "attributes": [
        "stuid"
      ],
      "input": {
        "operation": "join",
        "condition": "has_pet.petid = cat_pets.petid",
        "left": {
          "type": "table",
          "name": "has_pet"
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "petid"
          ],
          "input": {
            "operation": "selection",
            "condition": "pettype = 'cat'",
            "input": {
              "type": "table",
              "name": "pets"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "fname",
      "age"
    ],
    "input": {
      "operation": "join",
      "condition": "SDNSC.stuid = student.stuid",
      "left": {
        "operation": "difference",
        "left": {
          "operation": "projection",
          "attributes": [
            "stuid"
          ],
          "input": {
            "operation": "selection",
            "condition": "pettype = 'dog'",
            "input": {
              "operation": "join",
              "condition": "has_pet.petid = pets.petid",
              "left": {
                "type": "table",
                "name": "has_pet"
              },
              "right": {
                "type": "table",
                "name": "pets"
              }
            }
          }
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "stuid"
          ],
          "input": {
            "operation": "selection",
            "condition": "pettype = 'cat'",
            "input": {
              "operation": "join",
              "condition": "has_pet.petid = pets.petid",
              "left": {
                "type": "table",
                "name": "has_pet"
              },
              "right": {
                "type": "table",
                "name": "pets"
              }
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "student"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "fname"
    ],
    "input": {
      "operation": "join",
      "condition": "S_3.stuid = student.stuid",
      "left": {
        "operation": "difference",
        "left": {
          "operation": "projection",
          "attributes": [
            "stuid"
          ],
          "input": {
            "operation": "selection",
            "condition": "pettype='dog'",
            "input": {
              "operation": "join",
              "condition": "has_pet.petid = pets.petid",
              "left": {
                "type": "table",
                "name": "has_pet"
              },
              "right": {
                "type": "table",
                "name": "pets"
              }
            }
          }
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "stuid"
          ],
          "input": {
            "operation": "selection",
            "condition": "pettype='cat'",
            "input": {
              "operation": "join",
              "condition": "has_pet.petid = pets.petid",
              "left": {
                "type": "table",
                "name": "has_pet"
              },
              "right": {
                "type": "table",
                "name": "pets"
              }
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "student"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "pettype",
      "weight"
    ],
    "input": {
      "operation": "selection",
      "condition": "pet_age = min_age",
      "input": {
        "operation": "aggregation",
        "group_by": [],
        "aggregates": [
          {
            "type": "min",
            "field": "pet_age",
            "alias": "min_age"
          }
        ],
        "input": {
          "type": "table",
          "name": "pets"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "pettype",
      "weight"
    ],
    "input": {
      "operation": "selection",
      "condition": "pet_age = MIN(pet_age)",
      "input": {
        "type": "table",
        "name": "pets"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "petid",
      "weight"
    ],
    "input": {
      "operation": "selection",
      "condition": "pet_age > 1",
      "input": {
        "type": "table",
        "name": "pets"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "petid",
      "weight"
    ],
    "input": {
      "operation": "selection",
      "condition": "pet_age > 1",
      "input": {
        "type": "table",
        "name": "pets"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "pettype"
    ],
    "aggregates": [
      {
        "type": "avg",
        "field": "pet_age",
        "alias": "average_age"
      },
      {
        "type": "max",
        "field": "pet_age",
        "alias": "maximum_age"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "pettype",
        "pet_age"
      ],
      "input": {
        "operation": "join",
        "condition": "pets.petid = has_pet.petid",
        "left": {
          "type": "table",
          "name": "pets"
        },
        "right": {
          "type": "table",
          "name": "has_pet"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "pettype"
    ],
    "aggregates": [
      {
        "type": "avg",
        "field": "pet_age",
        "alias": "average_pet_age"
      },
      {
        "type": "max",
        "field": "pet_age",
        "alias": "max_pet_age"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "pettype",
        "pet_age"
      ],
      "input": {
        "type": "table",
        "name": "pets"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "pettype"
    ],
    "aggregates": [
      {
        "type": "avg",
        "field": "weight",
        "alias": "avg_weight"
      }
    ],
    "input": {
      "type": "table",
      "name": "pets"
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "pettype"
    ],
    "aggregates": [
      {
        "type": "avg",
        "field": "weight",
        "alias": "avg_weight"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "pettype",
        "weight"
      ],
      "input": {
        "type": "table",
        "name": "pets"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "fname",
      "age"
    ],
    "input": {
      "operation": "join",
      "condition": "student.stuid = has_pet.stuid",
      "left": {
        "type": "table",
        "name": "student"
      },
      "right": {
        "type": "table",
        "name": "has_pet"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "fname",
      "age"
    ],
    "input": {
      "operation": "selection",
      "condition": "student.stuid = has_pet.stuid",
      "input": {
        "operation": "cartesian_product",
        "left": {
          "type": "table",
          "name": "student"
        },
        "right": {
          "type": "table",
          "name": "has_pet"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "petid"
    ],
    "input": {
      "operation": "join",
      "condition": null,
      "left": {
        "operation": "selection",
        "condition": "lname = 'Smith'",
        "input": {
          "type": "table",
          "name": "student"
        }
      },
      "right": {
        "type": "table",
        "name": "has_pet"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "petid"
    ],
    "input": {
      "operation": "join",
      "condition": "student.stuid = has_pet.stuid",
      "left": {
        "operation": "selection",
        "condition": "lname = 'Smith'",
        "input": {
          "type": "table",
          "name": "student"
        }
      },
      "right": {
        "type": "table",
        "name": "has_pet"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "stuid"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "petid",
        "alias": "num_pets"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "stuid",
        "petid"
      ],
      "input": {
        "type": "table",
        "name": "has_pet"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "stuid"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "petid",
        "alias": "num_pets"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "stuid",
        "petid"
      ],
      "input": {
        "operation": "join",
        "condition": "student.stuid = has_pet.stuid",
        "left": {
          "type": "table",
          "name": "student"
        },
        "right": {
          "type": "table",
          "name": "has_pet"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "fname",
      "sex"
    ],
    "input": {
      "operation": "join",
      "condition": "multi_pet_students.stuid = student.stuid",
      "left": {
        "operation": "projection",
        "attributes": [
          "stuid"
        ],
        "input": {
          "operation": "selection",
          "condition": "h1.stuid = h2.stuid AND h1.petid != h2.petid",
          "input": {
            "operation": "cartesian_product",
            "left": {
              "operation": "rename",
              "as": "h1",
              "input": {
                "type": "table",
                "name": "has_pet"
              }
            },
            "right": {
              "operation": "rename",
              "as": "h2",
              "input": {
                "type": "table",
                "name": "has_pet"
              }
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "student"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "fname",
      "sex"
    ],
    "input": {
      "operation": "join",
      "condition": "StudentsWithMultiplePets.stuid = student.stuid",
      "left": {
        "operation": "selection",
        "condition": "pet_count > 1",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "stuid"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "petid",
              "alias": "pet_count"
            }
          ],
          "input": {
            "operation": "projection",
            "attributes": [
              "fname",
              "sex",
              "has_pet.stuid",
              "petid"
            ],
            "input": {
              "operation": "join",
              "condition": "student.stuid = has_pet.stuid",
              "left": {
                "type": "table",
                "name": "student"
              },
              "right": {
                "type": "table",
                "name": "has_pet"
              }
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "student"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "lname"
    ],
    "input": {
      "operation": "join",
      "condition": "student.stuid = has_pet.stuid",
      "left": {
        "operation": "projection",
        "attributes": [
          "stuid"
        ],
        "input": {
          "operation": "join",
          "condition": "has_pet.petid = pets.petid",
          "left": {
            "operation": "projection",
            "attributes": [
              "petid"
            ],
            "input": {
              "operation": "selection",
              "condition": "pettype = 'cat' AND pet_age = 3",
              "input": {
                "type": "table",
                "name": "pets"
              }
            }
          },
          "right": {
            "type": "table",
            "name": "has_pet"
          }
        }
      },
      "right": {
        "type": "table",
        "name": "student"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "lname"
    ],
    "input": {
      "operation": "join",
      "condition": "$left.stuid = $right.stuid",
      "left": {
        "operation": "join",
        "condition": "$left.petid = $right.petid",
        "left": {
          "operation": "selection",
          "condition": "pettype = 'cat' AND pet_age = 3",
          "input": {
            "type": "table",
            "name": "pets"
          }
        },
        "right": {
          "type": "table",
          "name": "has_pet"
        }
      },
      "right": {
        "type": "table",
        "name": "student"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "avg",
        "field": "age"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "age"
      ],
      "input": {
        "operation": "join",
        "condition": "student.stuid = stuid",
        "input": {
          "operation": "difference",
          "left": {
            "operation": "projection",
            "attributes": [
              "stuid"
            ],
            "input": {
              "type": "table",
              "name": "student"
            }
          },
          "right": {
            "operation": "projection",
            "attributes": [
              "stuid"
            ],
            "input": {
              "type": "table",
              "name": "has_pet"
            }
          }
        },
        "right": {
          "type": "table",
          "name": "student"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "avg",
        "field": "age"
      }
    ],
    "input": {
      "operation": "difference",
      "left": {
        "operation": "projection",
        "attributes": [
          "age"
        ],
        "input": {
          "operation": "table",
          "name": "student"
        }
      },
      "right": {
        "operation": "projection",
        "attributes": [
          "age"
        ],
        "input": {
          "operation": "join",
          "condition": "student.stuid = has_pet.stuid",
          "left": {
            "operation": "table",
            "name": "student"
          },
          "right": {
            "operation": "table",
            "name": "has_pet"
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "continent"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "continent"
      ],
      "input": {
        "type": "table",
        "name": "continents"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "continent"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "continent"
      ],
      "input": {
        "operation": "table",
        "name": "continents"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "continent.contid",
      "continent.contname",
      "CountryCount.country_count"
    ],
    "input": {
      "operation": "join",
      "condition": "continent.contid = CountryCount.continent",
      "left": {
        "type": "table",
        "name": "continents"
      },
      "right": {
        "operation": "aggregation",
        "group_by": [
          "continent"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "countryid",
            "alias": "country_count"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "countries.continent",
            "countries.countryid"
          ],
          "input": {
            "operation": "selection",
            "condition": "countries.continent = continents.contid",
            "input": {
              "operation": "cartesian_product",
              "left": {
                "type": "table",
                "name": "countries"
              },
              "right": {
                "type": "table",
                "name": "continents"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "continent",
      "contid"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "continent",
        "alias": "num_countries"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "continent",
        "contid"
      ],
      "input": {
        "operation": "join",
        "condition": "contid = continent",
        "left": {
          "type": "table",
          "name": "continents"
        },
        "right": {
          "type": "table",
          "name": "countries"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "countryid"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "countryid"
      ],
      "input": {
        "operation": "table",
        "name": "countries"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "countryid"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "countryid"
      ],
      "input": {
        "operation": "table",
        "name": "countries"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "car_makers.id",
      "car_makers.fullname",
      "num_of_models"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "car_makers.id",
        "car_makers.fullname"
      ],
      "aggregates": [
        {
          "type": "count",
          "field": "model_list.modelid",
          "alias": "num_of_models"
        }
      ],
      "input": {
        "operation": "projection",
        "attributes": [
          "car_makers.id",
          "car_makers.fullname",
          "model_list.modelid"
        ],
        "input": {
          "operation": "join",
          "condition": "model_list.maker = car_makers.id",
          "left": {
            "type": "table",
            "name": "model_list"
          },
          "right": {
            "type": "table",
            "name": "car_makers"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "id",
      "fullname",
      "num_models"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "id",
        "fullname"
      ],
      "aggregates": [
        {
          "type": "count",
          "field": "model",
          "alias": "num_models"
        }
      ],
      "input": {
        "operation": "selection",
        "condition": "model != NULL",
        "input": {
          "operation": "projection",
          "attributes": [
            "id",
            "fullname",
            "model"
          ],
          "input": {
            "operation": "join",
            "condition": "car_makers.id = model_list.maker",
            "left": {
              "type": "table",
              "name": "car_makers"
            },
            "right": {
              "type": "table",
              "name": "model_list"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "model"
    ],
    "input": {
      "operation": "join",
      "condition": "MinHPCars.modelid = model_list.modelid",
      "left": {
        "operation": "selection",
        "condition": "horsepower = MinHP",
        "input": {
          "operation": "aggregation",
          "group_by": [],
          "aggregates": [
            {
              "type": "min",
              "field": "horsepower"
            }
          ],
          "input": {
            "type": "table",
            "name": "cars_data"
          }
        }
      },
      "right": {
        "type": "table",
        "name": "model_list"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "model"
    ],
    "input": {
      "operation": "join",
      "condition": "car_names.model = model_list.model",
      "left": {
        "operation": "join",
        "condition": "cars_data.id = car_names.makeid",
        "left": {
          "operation": "selection",
          "condition": "horsepower = min(horsepower)",
          "input": {
            "type": "table",
            "name": "cars_data"
          }
        },
        "right": {
          "type": "table",
          "name": "car_names"
        }
      },
      "right": {
        "type": "table",
        "name": "model_list"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "model"
    ],
    "input": {
      "operation": "join",
      "condition": "car_names.model = model_list.model",
      "left": {
        "operation": "join",
        "condition": "cars_data.id = car_names.makeid",
        "left": {
          "operation": "selection",
          "condition": "weight < AverageWeight.avg_weight",
          "input": {
            "operation": "cartesian_product",
            "left": {
              "type": "table",
              "name": "cars_data"
            },
            "right": {
              "operation": "projection",
              "attributes": [
                "avg_weight"
              ],
              "input": {
                "operation": "aggregation",
                "group_by": [],
                "aggregates": [
                  {
                    "type": "avg",
                    "field": "weight",
                    "alias": "avg_weight"
                  }
                ],
                "input": {
                  "type": "table",
                  "name": "cars_data"
                }
              }
            }
          }
        },
        "right": {
          "type": "table",
          "name": "car_names"
        }
      },
      "right": {
        "type": "table",
        "name": "model_list"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "model"
    ],
    "input": {
      "operation": "join",
      "condition": "Light_Cars_Names.model = model_list.model",
      "left": {
        "operation": "join",
        "condition": "Light_Cars.id = car_names.makeid",
        "left": {
          "operation": "selection",
          "condition": "cars_data.weight < AVG_Weight.avg_weight",
          "input": {
            "operation": "cartesian_product",
            "left": {
              "type": "table",
              "name": "cars_data"
            },
            "right": {
              "operation": "projection",
              "attributes": [
                "avg_weight"
              ],
              "input": {
                "operation": "aggregation",
                "group_by": [],
                "aggregates": [
                  {
                    "type": "avg",
                    "field": "weight",
                    "alias": "avg_weight"
                  }
                ],
                "input": {
                  "type": "table",
                  "name": "cars_data"
                }
              }
            }
          }
        },
        "right": {
          "type": "table",
          "name": "car_names"
        }
      },
      "right": {
        "type": "table",
        "name": "model_list"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "fullname"
    ],
    "input": {
      "operation": "join",
      "condition": "R3.maker = car_makers.id",
      "left": {
        "operation": "projection",
        "attributes": [
          "maker",
          "makeid"
        ],
        "input": {
          "operation": "join",
          "condition": "R1.makeid = cars_data.id",
          "left": {
            "operation": "selection",
            "condition": "model_list.model = car_names.model",
            "input": {
              "operation": "cartesian_product",
              "left": {
                "type": "table",
                "name": "model_list"
              },
              "right": {
                "type": "table",
                "name": "car_names"
              }
            }
          },
          "right": {
            "type": "table",
            "name": "cars_data"
          }
        }
      },
      "right": {
        "type": "table",
        "name": "car_makers"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "car_makers.maker"
    ],
    "input": {
      "operation": "join",
      "condition": "car_makers.id = model_list.maker",
      "left": {
        "type": "table",
        "name": "car_makers"
      },
      "right": {
        "operation": "projection",
        "attributes": [
          "model_list.maker"
        ],
        "input": {
          "operation": "join",
          "condition": "model_list.modelid = cars1970id.modelid",
          "left": {
            "type": "table",
            "name": "model_list"
          },
          "right": {
            "operation": "rename",
            "new_name": "cars1970id",
            "attributes": {
              "id": "modelid"
            },
            "input": {
              "operation": "projection",
              "attributes": [
                "id"
              ],
              "input": {
                "operation": "selection",
                "condition": "year = 1970",
                "input": {
                  "type": "table",
                  "name": "cars_data"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "make",
      "year"
    ],
    "input": {
      "operation": "join",
      "condition": "cars_data.id = car_names.makeid",
      "left": {
        "operation": "selection",
        "condition": "year = MIN(\u03c0_year(cars_data))",
        "input": {
          "type": "table",
          "name": "cars_data"
        }
      },
      "right": {
        "type": "table",
        "name": "car_names"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "maker",
      "year"
    ],
    "input": {
      "operation": "join",
      "condition": "M.car_id = C.car_id",
      "left": {
        "type": "table",
        "name": "M"
      },
      "right": {
        "operation": "projection",
        "attributes": [
          "year"
        ],
        "input": {
          "operation": "join",
          "condition": "C.year = EarliestYear.year",
          "left": {
            "type": "table",
            "name": "C"
          },
          "right": {
            "operation": "selection",
            "condition": "year = MIN(year)",
            "input": {
              "type": "table",
              "name": "C"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "model"
    ],
    "input": {
      "operation": "selection",
      "condition": "year > 1980",
      "input": {
        "operation": "join",
        "condition": "cars_data.makeid = car_names.makeid",
        "left": {
          "type": "table",
          "name": "cars_data"
        },
        "right": {
          "type": "table",
          "name": "car_names"
        }
      }
    },
    "distinct": true
  },
  {
    "operation": "projection",
    "attributes": [
      "model"
    ],
    "input": {
      "operation": "aggregation",
      "distinct": true,
      "input": {
        "operation": "join",
        "condition": "car_names.model = model_list.model",
        "left": {
          "operation": "join",
          "condition": "cars_data.id = car_names.makeid",
          "left": {
            "operation": "selection",
            "condition": "year > 1980",
            "input": {
              "type": "table",
              "name": "cars_data"
            }
          },
          "right": {
            "type": "table",
            "name": "car_names"
          }
        },
        "right": {
          "type": "table",
          "name": "model_list"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "continents.continent"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "car_makers.id",
        "alias": "car_maker_count"
      }
    ],
    "input": {
      "operation": "join",
      "condition": "result1.continent = continents.contid",
      "left": {
        "operation": "join",
        "condition": "car_makers.country = countries.countryid",
        "left": {
          "type": "table",
          "name": "car_makers"
        },
        "right": {
          "type": "table",
          "name": "countries"
        }
      },
      "right": {
        "type": "table",
        "name": "continents"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "continent_name"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "car_maker_id",
        "alias": "num_car_makers"
      }
    ],
    "input": {
      "operation": "rename",
      "attributes": {
        "continent_name": "continent",
        "car_maker_id": "id"
      },
      "input": {
        "operation": "projection",
        "attributes": [
          "continent_name",
          "car_maker_id"
        ],
        "input": {
          "operation": "join",
          "condition": "car_maker_with_continent.country_continent = continents.contid",
          "left": {
            "operation": "projection",
            "attributes": [
              "car_maker_with_continent.id",
              "continent_name"
            ],
            "input": {
              "operation": "join",
              "condition": "car_makers.country = countries.countryid",
              "left": {
                "operation": "projection",
                "attributes": [
                  "car_makers.id",
                  "car_makers.country",
                  "country_continent"
                ],
                "input": {
                  "operation": "rename",
                  "attributes": {
                    "country_continent": "continent"
                  },
                  "input": {
                    "operation": "projection",
                    "attributes": [
                      "countryid",
                      "country",
                      "continent"
                    ],
                    "input": {
                      "type": "table",
                      "name": "countries"
                    }
                  }
                }
              },
              "right": {
                "type": "table",
                "name": "car_makers"
              }
            }
          },
          "right": {
            "operation": "projection",
            "attributes": [
              "continents.contid",
              "continents.continent"
            ],
            "input": {
              "operation": "rename",
              "attributes": {
                "continent": "continent_name"
              },
              "input": {
                "operation": "projection",
                "attributes": [
                  "continents.contid",
                  "continents.continent"
                ],
                "input": {
                  "type": "table",
                  "name": "continents"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "countryname"
    ],
    "input": {
      "operation": "selection",
      "condition": "car_maker_count = max(car_maker_count)",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "countryname"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "id",
            "alias": "car_maker_count"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "countryname",
            "id"
          ],
          "input": {
            "operation": "join",
            "condition": "car_makers.country = countries.countryid",
            "left": {
              "type": "table",
              "name": "car_makers"
            },
            "right": {
              "type": "table",
              "name": "countries"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "countryname"
    ],
    "input": {
      "operation": "selection",
      "condition": "maker_count = max(maker_count)",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "countryname"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "id",
            "alias": "maker_count"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "countryname",
            "id"
          ],
          "input": {
            "operation": "selection",
            "condition": "car_makers.country = countries.countryid",
            "input": {
              "operation": "cartesian_product",
              "left": {
                "type": "table",
                "name": "car_makers"
              },
              "right": {
                "type": "table",
                "name": "countries"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "fullname"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "modelid",
        "alias": "ModelCount"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "fullname",
        "modelid"
      ],
      "input": {
        "operation": "join",
        "condition": "car_makers.id = model_list.maker",
        "left": {
          "type": "table",
          "name": "car_makers"
        },
        "right": {
          "type": "table",
          "name": "model_list"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "id",
      "fullname"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "modelid",
        "alias": "num_models"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "maker",
        "id",
        "fullname",
        "modelid"
      ],
      "input": {
        "operation": "selection",
        "condition": "car_makers.id = model_list.maker",
        "input": {
          "operation": "join",
          "left": {
            "type": "table",
            "name": "car_makers"
          },
          "right": {
            "type": "table",
            "name": "model_list"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "accelerate"
    ],
    "input": {
      "operation": "join",
      "condition": "car_names.makeid = cars_data.id",
      "left": {
        "operation": "projection",
        "attributes": [
          "makeid"
        ],
        "input": {
          "operation": "selection",
          "condition": "make = \"amc hornet sportabout (sw)\"",
          "input": {
            "type": "table",
            "name": "car_names"
          }
        }
      },
      "right": {
        "type": "table",
        "name": "cars_data"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "edispl"
    ],
    "input": {
      "operation": "join",
      "condition": "makeid=id",
      "left": {
        "operation": "selection",
        "condition": "model = 'amc hornet sportabout (sw)'",
        "input": {
          "type": "table",
          "name": "car_names"
        }
      },
      "right": {
        "type": "table",
        "name": "cars_data"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "maker"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "maker"
      ],
      "input": {
        "operation": "selection",
        "condition": "country = france_id",
        "input": {
          "operation": "rename",
          "new_name": "france_id",
          "input": {
            "operation": "projection",
            "attributes": [
              "countryid"
            ],
            "input": {
              "operation": "selection",
              "condition": "countryname = 'france'",
              "input": {
                "type": "table",
                "name": "countries"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "maker"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "maker"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "maker"
      ],
      "input": {
        "operation": "selection",
        "condition": "country = countryid",
        "input": {
          "operation": "join",
          "condition": "True",
          "left": {
            "operation": "table",
            "name": "car_makers"
          },
          "right": {
            "operation": "selection",
            "condition": "countryname = 'france'",
            "input": {
              "operation": "table",
              "name": "countries"
            }
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "model",
        "as": "num_models"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "model"
      ],
      "input": {
        "operation": "join",
        "condition": "CN.model = ML.model",
        "left": {
          "operation": "join",
          "condition": "CM.id = ML.maker",
          "left": {
            "operation": "join",
            "condition": "C.countryid = CM.country",
            "left": {
              "operation": "selection",
              "condition": "countryname = 'usa'",
              "input": {
                "type": "table",
                "name": "C"
              }
            },
            "right": {
              "type": "table",
              "name": "CM"
            }
          },
          "right": {
            "type": "table",
            "name": "ML"
          }
        },
        "right": {
          "type": "table",
          "name": "CN"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "model"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "model"
      ],
      "input": {
        "operation": "join",
        "condition": "model_list.maker = car_makers.id",
        "left": {
          "operation": "table",
          "name": "model_list"
        },
        "right": {
          "operation": "selection",
          "condition": "country IN (SELECT countryid FROM (SELECT * FROM countries WHERE countryname = 'United States'))",
          "input": {
            "operation": "projection",
            "attributes": [
              "id"
            ],
            "input": {
              "operation": "table",
              "name": "car_makers"
            }
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "avg",
        "field": "mpg"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "mpg"
      ],
      "input": {
        "operation": "selection",
        "condition": "cylinders = 4",
        "input": {
          "type": "table",
          "name": "cars_data"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "avg",
        "field": "mpg"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "mpg"
      ],
      "input": {
        "operation": "selection",
        "condition": "cylinders = 4",
        "input": {
          "type": "table",
          "name": "cars_data"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "min",
        "field": "weight"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "weight"
      ],
      "input": {
        "operation": "selection",
        "condition": "cylinders = 8 AND year = 1974",
        "input": {
          "type": "table",
          "name": "cars_data"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "min",
        "field": "weight"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "weight"
      ],
      "input": {
        "operation": "selection",
        "condition": "cylinders = 8 AND year = 1974",
        "input": {
          "type": "table",
          "name": "cars_data"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "car_makers.maker",
      "model_list.model"
    ],
    "input": {
      "operation": "selection",
      "condition": "car_makers.id = model_list.maker",
      "input": {
        "operation": "join",
        "left": {
          "type": "table",
          "name": "car_makers"
        },
        "right": {
          "type": "table",
          "name": "model_list"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "car_makers.maker",
      "model_list.model"
    ],
    "input": {
      "operation": "selection",
      "condition": "car_makers.id = model_list.maker",
      "input": {
        "operation": "cartesian_product",
        "left": {
          "type": "table",
          "name": "car_makers"
        },
        "right": {
          "type": "table",
          "name": "model_list"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "countryid",
      "countryname"
    ],
    "input": {
      "operation": "selection",
      "condition": "car_makers.country = countries.countryid",
      "input": {
        "operation": "cartesian_product",
        "left": {
          "type": "table",
          "name": "car_makers"
        },
        "right": {
          "type": "table",
          "name": "countries"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "countryid",
      "countryname"
    ],
    "input": {
      "operation": "join",
      "condition": "car_makers.country = countries.countryid",
      "left": {
        "operation": "cartesian_product",
        "left": {
          "type": "table",
          "name": "car_makers"
        },
        "right": {
          "type": "table",
          "name": "countries"
        }
      },
      "right": {
        "type": "table",
        "name": "countries"
      }
    },
    "distinct": true
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "COUNT",
        "field": "*"
      }
    ],
    "input": {
      "operation": "selection",
      "condition": "horsepower > 150",
      "input": {
        "type": "table",
        "name": "cars_data"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "id"
      }
    ],
    "input": {
      "operation": "join",
      "condition": "C.id = N.makeid",
      "left": {
        "operation": "selection",
        "condition": "horsepower > 150",
        "input": {
          "type": "table",
          "name": "C"
        }
      },
      "right": {
        "type": "table",
        "name": "N"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "year",
      "AVG(weight)"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "year"
      ],
      "aggregates": [
        {
          "type": "avg",
          "field": "weight"
        }
      ],
      "input": {
        "operation": "table",
        "name": "cars_data"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "year"
    ],
    "aggregates": [
      {
        "type": "avg",
        "field": "weight",
        "alias": "avg_weight"
      },
      {
        "type": "avg",
        "field": "year",
        "alias": "avg_year"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "weight",
        "year"
      ],
      "input": {
        "type": "table",
        "name": "cars_data"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "countryname"
    ],
    "input": {
      "operation": "selection",
      "condition": "car_count >= 3",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "countryname"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "maker",
            "alias": "car_count"
          }
        ],
        "input": {
          "operation": "join",
          "condition": "european_countries.countryid = car_makers.countryid",
          "left": {
            "operation": "projection",
            "attributes": [
              "countryid",
              "countryname"
            ],
            "input": {
              "operation": "selection",
              "condition": "continent = contid",
              "input": {
                "operation": "join",
                "condition": "countries.continent = continents.contid",
                "left": {
                  "type": "table",
                  "name": "countries"
                },
                "right": {
                  "operation": "selection",
                  "condition": "continent = 'europe'",
                  "input": {
                    "type": "table",
                    "name": "continents"
                  }
                }
              }
            }
          },
          "right": {
            "type": "table",
            "name": "car_makers"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "countryname"
    ],
    "input": {
      "operation": "selection",
      "condition": "num_makers >= 3",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "country",
          "countryname"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "maker",
            "alias": "num_makers"
          }
        ],
        "input": {
          "operation": "join",
          "condition": "car_makers.country = countries.countryid",
          "left": {
            "operation": "table",
            "name": "car_makers"
          },
          "right": {
            "operation": "join",
            "condition": "countries.continent = continents.contid",
            "left": {
              "operation": "table",
              "name": "countries"
            },
            "right": {
              "operation": "selection",
              "condition": "continent = 'europe'",
              "input": {
                "operation": "table",
                "name": "continents"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "make",
      "max_horsepower"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "make"
      ],
      "aggregates": [
        {
          "type": "max",
          "field": "edispl",
          "output": "max_horsepower"
        }
      ],
      "input": {
        "operation": "selection",
        "condition": "cylinders = 3",
        "input": {
          "operation": "join",
          "condition": "cars_data.id = J2.makeid",
          "left": {
            "operation": "join",
            "condition": "car_names.model = J1.model",
            "left": {
              "operation": "projection",
              "attributes": [
                "id",
                "maker",
                "model",
                "fullname",
                "country"
              ],
              "input": {
                "operation": "join",
                "condition": "model_list.maker = car_makers.id",
                "left": {
                  "type": "table",
                  "name": "model_list"
                },
                "right": {
                  "type": "table",
                  "name": "car_makers"
                }
              }
            },
            "right": {
              "type": "table",
              "name": "car_names"
            }
          },
          "right": {
            "type": "table",
            "name": "cars_data"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "maker"
    ],
    "input": {
      "operation": "join",
      "condition": null,
      "left": {
        "operation": "join",
        "condition": null,
        "left": {
          "operation": "projection",
          "attributes": [
            "modelid"
          ],
          "input": {
            "operation": "selection",
            "condition": "horsepower = max(horsepower)",
            "input": {
              "operation": "aggregation",
              "group_by": [],
              "aggregates": [
                {
                  "type": "max",
                  "field": "horsepower"
                }
              ],
              "input": {
                "operation": "projection",
                "attributes": [
                  "modelid",
                  "horsepower"
                ],
                "input": {
                  "operation": "selection",
                  "condition": "cylinders = 3",
                  "input": {
                    "operation": "join",
                    "condition": null,
                    "left": {
                      "type": "table",
                      "name": "car_names"
                    },
                    "right": {
                      "operation": "join",
                      "condition": null,
                      "left": {
                        "type": "table",
                        "name": "model_list"
                      },
                      "right": {
                        "type": "table",
                        "name": "cars_data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "right": {
          "type": "table",
          "name": "model_list"
        }
      },
      "right": {
        "type": "table",
        "name": "car_makers"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "model",
      "maker",
      "fullname",
      "country"
    ],
    "input": {
      "operation": "join",
      "condition": "model_list.maker = car_makers.id",
      "left": {
        "operation": "join",
        "condition": "car_names.model = model_list.model",
        "left": {
          "operation": "join",
          "condition": "max_mpg_car.id = car_names.makeid",
          "left": {
            "operation": "selection",
            "condition": "mpg = max_mpg",
            "input": {
              "operation": "table",
              "name": "cars_data"
            }
          },
          "right": {
            "operation": "table",
            "name": "car_names"
          }
        },
        "right": {
          "operation": "table",
          "name": "model_list"
        }
      },
      "right": {
        "operation": "table",
        "name": "car_makers"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "model"
    ],
    "input": {
      "operation": "join",
      "condition": "model_list.maker = car_makers.id",
      "left": {
        "operation": "join",
        "condition": "car_names.model = model_list.model",
        "left": {
          "operation": "join",
          "condition": "HighMPGCars.id = car_names.makeid",
          "left": {
            "operation": "selection",
            "condition": "mpg = (max(mpg))",
            "input": {
              "type": "table",
              "name": "cars_data"
            }
          },
          "right": {
            "type": "table",
            "name": "car_names"
          }
        },
        "right": {
          "type": "table",
          "name": "model_list"
        }
      },
      "right": {
        "type": "table",
        "name": "car_makers"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "avg",
        "field": "horsepower"
      }
    ],
    "input": {
      "operation": "selection",
      "condition": "year < 1980",
      "input": {
        "operation": "join",
        "condition": "cars_data.makeid = car_names.makeid",
        "left": {
          "operation": "table",
          "name": "cars_data"
        },
        "right": {
          "operation": "join",
          "condition": "model_list.model = car_names.model",
          "left": {
            "operation": "table",
            "name": "car_names"
          },
          "right": {
            "operation": "join",
            "condition": "car_makers.id = model_list.maker",
            "left": {
              "operation": "table",
              "name": "model_list"
            },
            "right": {
              "operation": "table",
              "name": "car_makers"
            }
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "avg",
        "field": "horsepower"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "horsepower"
      ],
      "input": {
        "operation": "selection",
        "condition": "year < 1980",
        "input": {
          "type": "table",
          "name": "cars_data"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "avg",
        "field": "edispl"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "edispl"
      ],
      "input": {
        "operation": "join",
        "condition": "car_names.makeid = cars_data.id",
        "left": {
          "operation": "join",
          "condition": "model_list.model = car_names.model",
          "left": {
            "operation": "join",
            "condition": "model_list.maker = car_makers.id",
            "left": {
              "operation": "selection",
              "condition": "model = 'volvo'",
              "input": {
                "type": "table",
                "name": "model_list"
              }
            },
            "right": {
              "type": "table",
              "name": "car_makers"
            }
          },
          "right": {
            "type": "table",
            "name": "car_names"
          }
        },
        "right": {
          "type": "table",
          "name": "cars_data"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "avg",
        "field": "edispl"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "edispl"
      ],
      "input": {
        "operation": "join",
        "condition": "VolvoCarInstances.makeid = cars_data.id",
        "left": {
          "operation": "join",
          "condition": "VolvoModels.modelid = car_names.model",
          "left": {
            "operation": "join",
            "condition": "car_makers.id = model_list.maker",
            "left": {
              "operation": "selection",
              "condition": "maker = 'volvo'",
              "input": {
                "type": "table",
                "name": "car_makers"
              }
            },
            "right": {
              "type": "table",
              "name": "model_list"
            }
          },
          "right": {
            "type": "table",
            "name": "car_names"
          }
        },
        "right": {
          "type": "table",
          "name": "cars_data"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "cylinders"
    ],
    "aggregates": [
      {
        "type": "max",
        "field": "accelerate",
        "alias": "max_accelerate"
      }
    ],
    "input": {
      "type": "table",
      "name": "cars_data"
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "cylinders"
    ],
    "aggregates": [
      {
        "type": "max",
        "field": "accelerate"
      }
    ],
    "input": {
      "type": "table",
      "name": "cars_data"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "model"
    ],
    "input": {
      "operation": "selection",
      "condition": "make_count = (max(make_count))",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "model"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "make",
            "alias": "make_count"
          }
        ],
        "input": {
          "operation": "join",
          "condition": "T2.make = cars_data.id",
          "left": {
            "operation": "join",
            "condition": "model_list.maker = car_makers.id",
            "left": {
              "operation": "join",
              "condition": "model_list.model = car_names.model",
              "left": {
                "type": "table",
                "name": "model_list"
              },
              "right": {
                "type": "table",
                "name": "car_names"
              }
            },
            "right": {
              "type": "table",
              "name": "car_makers"
            }
          },
          "right": {
            "type": "table",
            "name": "cars_data"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "model"
    ],
    "input": {
      "operation": "selection",
      "condition": "version_count = max_count",
      "input": {
        "operation": "cartesian_product",
        "input_left": {
          "operation": "aggregation",
          "group_by": [
            "model"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "id",
              "alias": "version_count"
            }
          ],
          "input": {
            "operation": "projection",
            "attributes": [
              "modelid",
              "model",
              "id"
            ],
            "input": {
              "operation": "selection",
              "condition": "model_list.maker = car_makers.id AND car_names.model = model_list.model AND cars_data.id = car_names.makeid",
              "input": {
                "operation": "cartesian_product",
                "input_left": {
                  "operation": "cartesian_product",
                  "input_left": {
                    "operation": "cartesian_product",
                    "input_left": {
                      "type": "table",
                      "name": "model_list"
                    },
                    "input_right": {
                      "type": "table",
                      "name": "car_makers"
                    }
                  },
                  "input_right": {
                    "type": "table",
                    "name": "car_names"
                  }
                },
                "input_right": {
                  "type": "table",
                  "name": "cars_data"
                }
              }
            }
          }
        },
        "input_right": {
          "operation": "aggregation",
          "group_by": [],
          "aggregates": [
            {
              "type": "max",
              "field": "version_count",
              "alias": "max_count"
            }
          ],
          "input": {
            "operation": "aggregation",
            "group_by": [
              "model"
            ],
            "aggregates": [
              {
                "type": "count",
                "field": "id",
                "alias": "version_count"
              }
            ],
            "input": {
              "operation": "projection",
              "attributes": [
                "modelid",
                "model",
                "id"
              ],
              "input": {
                "operation": "selection",
                "condition": "model_list.maker = car_makers.id AND car_names.model = model_list.model AND cars_data.id = car_names.makeid",
                "input": {
                  "operation": "cartesian_product",
                  "input_left": {
                    "operation": "cartesian_product",
                    "input_left": {
                      "operation": "cartesian_product",
                      "input_left": {
                        "type": "table",
                        "name": "model_list"
                      },
                      "input_right": {
                        "type": "table",
                        "name": "car_makers"
                      }
                    },
                    "input_right": {
                      "type": "table",
                      "name": "car_names"
                    }
                  },
                  "input_right": {
                    "type": "table",
                    "name": "cars_data"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "id"
      ],
      "input": {
        "operation": "selection",
        "condition": "cylinders > 4",
        "input": {
          "operation": "table",
          "name": "cars_data"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "id"
      ],
      "input": {
        "operation": "selection",
        "condition": "cylinders > 4",
        "input": {
          "type": "table",
          "name": "cars_data"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "*"
      }
    ],
    "input": {
      "operation": "selection",
      "condition": "year = 1980",
      "input": {
        "type": "table",
        "name": "cars_data"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "id"
      ],
      "input": {
        "operation": "selection",
        "condition": "year = 1980",
        "input": {
          "type": "table",
          "name": "cars_data"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "model"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "model"
      ],
      "input": {
        "operation": "selection",
        "condition": "model_list.maker = id",
        "input": {
          "operation": "cartesian_product",
          "left": {
            "type": "table",
            "name": "model_list"
          },
          "right": {
            "operation": "projection",
            "attributes": [
              "id"
            ],
            "input": {
              "operation": "selection",
              "condition": "fullname = 'American Motor Company'",
              "input": {
                "type": "table",
                "name": "car_makers"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "model"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "model"
      ],
      "input": {
        "operation": "join",
        "condition": "model_list.maker = car_makers.id",
        "left": {
          "operation": "selection",
          "condition": "fullname = 'American Motor Company'",
          "input": {
            "type": "table",
            "name": "car_makers"
          }
        },
        "right": {
          "type": "table",
          "name": "model_list"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "id",
      "fullname"
    ],
    "input": {
      "operation": "selection",
      "condition": "model_count > 3",
      "input": {
        "operation": "join",
        "condition": "id = maker",
        "left": {
          "operation": "aggregation",
          "group_by": [
            "maker"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "modelid",
              "alias": "model_count"
            }
          ],
          "input": {
            "type": "table",
            "name": "model_list"
          }
        },
        "right": {
          "type": "table",
          "name": "car_makers"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "id",
      "fullname"
    ],
    "input": {
      "operation": "selection",
      "condition": "model_count > 3",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "id",
          "fullname"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "modelid",
            "as": "model_count"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "maker",
            "id",
            "fullname",
            "modelid"
          ],
          "input": {
            "operation": "selection",
            "condition": "car_makers.id = model_list.maker",
            "input": {
              "operation": "cartesian_product",
              "left": {
                "type": "table",
                "name": "car_makers"
              },
              "right": {
                "type": "table",
                "name": "model_list"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "model"
    ],
    "input": {
      "operation": "join",
      "condition": "All_Relevant_CarIDs.id = car_names.makeid",
      "left": {
        "operation": "union",
        "inputs": [
          {
            "operation": "projection",
            "attributes": [
              "modelid"
            ],
            "input": {
              "operation": "join",
              "condition": "GM_Models.model = car_names.model",
              "left": {
                "operation": "projection",
                "attributes": [
                  "maker",
                  "modelid"
                ],
                "input": {
                  "operation": "join",
                  "condition": "GM_CarMakers.id = model_list.maker",
                  "left": {
                    "operation": "selection",
                    "condition": "fullname = 'General Motors'",
                    "input": {
                      "type": "table",
                      "name": "car_makers"
                    }
                  },
                  "right": {
                    "type": "table",
                    "name": "model_list"
                  }
                }
              },
              "right": {
                "type": "table",
                "name": "car_names"
              }
            }
          },
          {
            "operation": "projection",
            "attributes": [
              "id"
            ],
            "input": {
              "operation": "selection",
              "condition": "weight > 3500",
              "input": {
                "type": "table",
                "name": "cars_data"
              }
            }
          }
        ]
      },
      "right": {
        "type": "table",
        "name": "car_names"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "model"
    ],
    "input": {
      "operation": "union",
      "inputs": [
        {
          "operation": "projection",
          "attributes": [
            "modelid",
            "model"
          ],
          "input": {
            "operation": "selection",
            "condition": "maker IN (SELECT id FROM car_makers WHERE fullname = 'General Motors')",
            "input": {
              "type": "table",
              "name": "model_list"
            }
          }
        },
        {
          "operation": "projection",
          "attributes": [
            "modelid",
            "model"
          ],
          "input": {
            "operation": "selection",
            "condition": "id IN (SELECT id FROM cars_data WHERE edispl > 3500)",
            "input": {
              "type": "table",
              "name": "model_list"
            }
          }
        }
      ]
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "year"
    ],
    "input": {
      "operation": "selection",
      "condition": "3000 <= weight <= 4000",
      "input": {
        "type": "table",
        "name": "cars_data"
      }
    }
  },
  {
    "operation": "intersection",
    "input_left": {
      "operation": "projection",
      "attributes": [
        "year"
      ],
      "input": {
        "operation": "selection",
        "condition": "weight < 4000",
        "input": {
          "type": "table",
          "name": "cars_data"
        }
      }
    },
    "input_right": {
      "operation": "projection",
      "attributes": [
        "year"
      ],
      "input": {
        "operation": "selection",
        "condition": "weight > 3000",
        "input": {
          "type": "table",
          "name": "cars_data"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "horsepower"
    ],
    "input": {
      "operation": "selection",
      "condition": "accelerate = max_accelerate",
      "input": {
        "operation": "aggregation",
        "group_by": [],
        "aggregates": [
          {
            "type": "max",
            "field": "accelerate",
            "alias": "max_accelerate"
          }
        ],
        "input": {
          "type": "table",
          "name": "cars_data"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "horsepower"
    ],
    "input": {
      "operation": "selection",
      "condition": "accelerate = (\u03c0_accelerate(\u03c3_accelerate = MAX(accelerate)(cars_data)))",
      "input": {
        "operation": "selection",
        "condition": "accelerate = MAX(accelerate)",
        "input": {
          "type": "table",
          "name": "cars_data"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "cylinders"
    ],
    "input": {
      "operation": "selection",
      "condition": "accelerate = (\u03c0 accelerate (\u03c3 maker = 'volvo' (model_list) \u2a1d maker = id (car_makers) \u2a1d model = model (car_names) \u2a1d makeid = id (cars_data)))",
      "input": {
        "operation": "join",
        "condition": "makeid = id",
        "left": {
          "operation": "join",
          "condition": "model = model",
          "left": {
            "operation": "join",
            "condition": "maker = id",
            "left": {
              "operation": "selection",
              "condition": "model = 'volvo'",
              "input": {
                "type": "table",
                "name": "model_list"
              }
            },
            "right": {
              "type": "table",
              "name": "car_makers"
            }
          },
          "right": {
            "type": "table",
            "name": "car_names"
          }
        },
        "right": {
          "type": "table",
          "name": "cars_data"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "cylinders"
    ],
    "input": {
      "operation": "selection",
      "condition": "mpg = MIN(mpg)",
      "input": {
        "operation": "projection",
        "attributes": [
          "id",
          "mpg"
        ],
        "input": {
          "operation": "rename",
          "new_name": "volvo_full_data",
          "input": {
            "operation": "join",
            "condition": "car_names.makeid = cars_data.id",
            "left": {
              "operation": "rename",
              "new_name": "volvo_car_data",
              "input": {
                "operation": "join",
                "condition": "model_list.model = car_names.model",
                "left": {
                  "operation": "selection",
                  "condition": "model = 'volvo'",
                  "input": {
                    "operation": "join",
                    "condition": "model_list.maker = car_makers.id",
                    "left": {
                      "type": "table",
                      "name": "model_list"
                    },
                    "right": {
                      "type": "table",
                      "name": "car_makers"
                    }
                  }
                },
                "right": {
                  "type": "table",
                  "name": "car_names"
                }
              }
            },
            "right": {
              "type": "table",
              "name": "cars_data"
            }
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "id"
      }
    ],
    "input": {
      "operation": "selection",
      "condition": "accelerate > MaxHP_Accelerate.accelerate",
      "input": {
        "operation": "projection",
        "attributes": [
          "accelerate"
        ],
        "input": {
          "operation": "selection",
          "condition": "horsepower = MaxHP.horsepower",
          "input": {
            "operation": "extension",
            "attributes": [
              "horsepower",
              "MAX(horsepower) AS MaxHP.horsepower"
            ],
            "input": {
              "operation": "table",
              "name": "cars_data"
            }
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "*",
        "alias": "NumberOfCars"
      }
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "type": "gt",
        "left": "accelerate",
        "right": {
          "operation": "projection",
          "attributes": [
            "accelerate"
          ],
          "input": {
            "operation": "selection",
            "condition": {
              "type": "eq",
              "left": "horsepower",
              "right": {
                "operation": "aggregation",
                "group_by": [],
                "aggregates": [
                  {
                    "type": "max",
                    "field": "horsepower",
                    "alias": "MaxHP"
                  }
                ],
                "input": {
                  "type": "table",
                  "name": "cars_data"
                }
              }
            },
            "input": {
              "type": "table",
              "name": "cars_data"
            }
          }
        }
      },
      "input": {
        "type": "table",
        "name": "cars_data"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "countryid",
        "as": "num_countries"
      }
    ],
    "input": {
      "operation": "selection",
      "condition": "maker_count > 2",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "countryid"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "maker",
            "as": "maker_count"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "countryname",
            "countryid"
          ],
          "input": {
            "operation": "selection",
            "condition": "countries.countryid = car_makers.country",
            "input": {
              "operation": "cartesian_product",
              "left": {
                "type": "table",
                "name": "countries"
              },
              "right": {
                "type": "table",
                "name": "car_makers"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "country",
        "alias": "num_countries"
      }
    ],
    "input": {
      "operation": "selection",
      "condition": "count_makers > 2",
      "input": {
        "operation": "projection",
        "attributes": [
          "country",
          "count_makers"
        ],
        "input": {
          "operation": "aggregation",
          "group_by": [
            "country"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "id",
              "alias": "count_makers"
            }
          ],
          "input": {
            "operation": "table",
            "name": "car_makers"
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "id"
      ],
      "input": {
        "operation": "selection",
        "condition": "cylinders > 6",
        "input": {
          "type": "table",
          "name": "cars_data"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "id"
      ],
      "input": {
        "operation": "selection",
        "condition": "cylinders > 6",
        "input": {
          "type": "table",
          "name": "cars_data"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "model"
    ],
    "input": {
      "operation": "join",
      "condition": "cars_data.id = model_list.modelid",
      "left": {
        "operation": "selection",
        "condition": "horsepower = max_hp",
        "input": {
          "operation": "selection",
          "condition": "cylinders = 4",
          "input": {
            "type": "table",
            "name": "cars_data"
          }
        }
      },
      "right": {
        "type": "table",
        "name": "model_list"
      }
    },
    "let": {
      "max_hp": {
        "operation": "aggregation",
        "group_by": [],
        "aggregates": [
          {
            "type": "max",
            "field": "horsepower"
          }
        ],
        "input": {
          "operation": "selection",
          "condition": "cylinders = 4",
          "input": {
            "type": "table",
            "name": "cars_data"
          }
        }
      }
    }
  },
  {
    "operation": "selection",
    "condition": "cylinders = 4",
    "input": {
      "operation": "join",
      "condition": "cars_data.id = car_names.makeid",
      "left": {
        "operation": "table",
        "name": "cars_data"
      },
      "right": {
        "operation": "join",
        "condition": "car_names.model = model_list.model",
        "left": {
          "operation": "table",
          "name": "car_names"
        },
        "right": {
          "operation": "join",
          "condition": "model_list.maker = car_makers.id",
          "left": {
            "operation": "projection",
            "attributes": [
              "model",
              "edispl"
            ],
            "input": {
              "operation": "table",
              "name": "model_list"
            }
          },
          "right": {
            "operation": "table",
            "name": "car_makers"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "car_makers.id",
      "car_makers.maker"
    ],
    "input": {
      "operation": "join",
      "condition": "car_makers.id = selected_models_with_maker.maker",
      "left": {
        "operation": "projection",
        "attributes": [
          "maker"
        ],
        "input": {
          "operation": "join",
          "condition": "car_names.model = model_list.model",
          "left": {
            "type": "table",
            "name": "selected_car_names"
          },
          "right": {
            "type": "table",
            "name": "model_list"
          }
        }
      },
      "right": {
        "type": "table",
        "name": "car_makers"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "car_makers.id",
      "car_makers.maker"
    ],
    "input": {
      "operation": "join",
      "condition": "model_list.maker = car_makers.id",
      "left": {
        "operation": "join",
        "condition": "car_names.model = model_list.model",
        "left": {
          "operation": "join",
          "condition": "F.id = car_names.makeid",
          "left": {
            "operation": "selection",
            "predicate": "cylinders < 4",
            "input": {
              "operation": "selection",
              "predicate": "horsepower > min_hp",
              "input": {
                "operation": "aggregation",
                "group_by": [],
                "aggregates": [
                  {
                    "type": "min",
                    "field": "horsepower",
                    "alias": "min_hp"
                  }
                ],
                "input": {
                  "type": "table",
                  "name": "cars_data"
                }
              }
            }
          },
          "right": {
            "type": "table",
            "name": "car_names"
          }
        },
        "right": {
          "type": "table",
          "name": "model_list"
        }
      },
      "right": {
        "type": "table",
        "name": "car_makers"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "max",
        "field": "mpg"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "mpg"
      ],
      "input": {
        "operation": "selection",
        "condition": "cylinders = 8 OR year < 1980",
        "input": {
          "type": "table",
          "name": "cars_data"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "max",
        "field": "mpg"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "mpg"
      ],
      "input": {
        "operation": "selection",
        "condition": "cylinders = 8 OR year < 1980",
        "input": {
          "type": "table",
          "name": "cars_data"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "model"
    ],
    "input": {
      "operation": "selection",
      "condition": "maker != 'Ford Motor Company'",
      "input": {
        "operation": "join",
        "condition": "LightCarsNames.model = model_list.model",
        "left": {
          "operation": "join",
          "condition": "LightCars.id = car_names.makeid",
          "left": {
            "operation": "selection",
            "condition": "weight < 3500",
            "input": {
              "type": "table",
              "name": "cars_data"
            }
          },
          "right": {
            "type": "table",
            "name": "car_names"
          }
        },
        "right": {
          "type": "table",
          "name": "model_list"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "make"
    ],
    "input": {
      "operation": "selection",
      "condition": "edispl < 3500",
      "input": {
        "operation": "join",
        "condition": "car_names.makeid = cars_data.id",
        "left": {
          "operation": "join",
          "condition": "model_list.model = car_names.model",
          "left": {
            "operation": "join",
            "condition": "model_list.maker = nonFordMakers.id",
            "left": {
              "type": "table",
              "name": "model_list"
            },
            "right": {
              "operation": "projection",
              "attributes": [
                "id"
              ],
              "input": {
                "operation": "selection",
                "condition": "fullname != 'Ford Motor Company'",
                "input": {
                  "type": "table",
                  "name": "car_makers"
                }
              }
            }
          },
          "right": {
            "type": "table",
            "name": "car_names"
          }
        },
        "right": {
          "type": "table",
          "name": "cars_data"
        }
      }
    }
  },
  {
    "operation": "difference",
    "left": {
      "operation": "projection",
      "attributes": [
        "countryname"
      ],
      "input": {
        "type": "table",
        "name": "countries"
      }
    },
    "right": {
      "operation": "projection",
      "attributes": [
        "countryname"
      ],
      "input": {
        "operation": "selection",
        "condition": "countryid = car_makers.country",
        "input": {
          "operation": "cartesian_product",
          "left": {
            "type": "table",
            "name": "countries"
          },
          "right": {
            "type": "table",
            "name": "car_makers"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "countryname"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "operation": "in",
        "attribute": "countryid",
        "input": {
          "operation": "difference",
          "left": {
            "operation": "projection",
            "attributes": [
              "countryid"
            ],
            "input": {
              "type": "table",
              "name": "countries"
            }
          },
          "right": {
            "operation": "projection",
            "attributes": [
              "country"
            ],
            "input": {
              "type": "table",
              "name": "car_makers"
            }
          }
        }
      },
      "input": {
        "type": "table",
        "name": "countries"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "car_makers.id",
      "car_makers.maker"
    ],
    "input": {
      "operation": "join",
      "condition": "car_makers.id = maker",
      "left": {
        "type": "table",
        "name": "car_makers"
      },
      "right": {
        "operation": "selection",
        "condition": "count_makers > 3",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "maker"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "maker",
              "alias": "count_makers"
            }
          ],
          "input": {
            "operation": "projection",
            "attributes": [
              "maker"
            ],
            "input": {
              "operation": "selection",
              "condition": "model_count >= 2",
              "input": {
                "operation": "aggregation",
                "group_by": [
                  "maker"
                ],
                "aggregates": [
                  {
                    "type": "count",
                    "field": "model",
                    "alias": "model_count"
                  }
                ],
                "input": {
                  "type": "table",
                  "name": "model_list"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "id",
      "maker"
    ],
    "input": {
      "operation": "join",
      "condition": "id = maker",
      "left": {
        "operation": "intersection",
        "input_1": {
          "operation": "projection",
          "attributes": [
            "maker"
          ],
          "input": {
            "operation": "selection",
            "condition": "modelCount >= 2",
            "input": {
              "operation": "aggregation",
              "group_by": [
                "maker"
              ],
              "aggregates": [
                {
                  "type": "count",
                  "field": "model",
                  "alias": "modelCount"
                }
              ],
              "input": {
                "operation": "projection",
                "attributes": [
                  "maker",
                  "model"
                ],
                "input": {
                  "type": "table",
                  "name": "model_list"
                }
              }
            }
          }
        },
        "input_2": {
          "operation": "projection",
          "attributes": [
            "modelList.maker"
          ],
          "input": {
            "operation": "selection",
            "condition": "carCount > 3",
            "input": {
              "operation": "aggregation",
              "group_by": [
                "modelList.maker"
              ],
              "aggregates": [
                {
                  "type": "count",
                  "field": "cars_data.id",
                  "alias": "carCount"
                }
              ],
              "input": {
                "operation": "projection",
                "attributes": [
                  "modelList.maker",
                  "cars_data.id"
                ],
                "input": {
                  "operation": "join",
                  "condition": "car_names.makeid = cars_data.id",
                  "left": {
                    "operation": "join",
                    "condition": "maker = model_list.model",
                    "left": {
                      "type": "table",
                      "name": "model_list"
                    },
                    "right": {
                      "type": "table",
                      "name": "car_names"
                    }
                  },
                  "right": {
                    "type": "table",
                    "name": "cars_data"
                  }
                }
              }
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "car_makers"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "countryid",
      "countryname"
    ],
    "input": {
      "operation": "join",
      "condition": "C4.country = countries.countryid",
      "left": {
        "operation": "union",
        "inputs": [
          {
            "operation": "projection",
            "attributes": [
              "country"
            ],
            "input": {
              "operation": "selection",
              "condition": "maker_count > 3",
              "input": {
                "operation": "aggregation",
                "group_by": [
                  "country"
                ],
                "aggregates": [
                  {
                    "type": "count",
                    "field": "id",
                    "as": "maker_count"
                  }
                ],
                "input": {
                  "operation": "projection",
                  "attributes": [
                    "id",
                    "country"
                  ],
                  "input": {
                    "type": "table",
                    "name": "car_makers"
                  }
                }
              }
            }
          },
          {
            "operation": "projection",
            "attributes": [
              "country"
            ],
            "input": {
              "operation": "join",
              "condition": "model_list.maker = car_makers.id",
              "left": {
                "operation": "join",
                "condition": "car_names.model = model_list.model",
                "left": {
                  "operation": "selection",
                  "condition": "model = 'fiat'",
                  "input": {
                    "type": "table",
                    "name": "car_names"
                  }
                },
                "right": {
                  "type": "table",
                  "name": "model_list"
                }
              },
              "right": {
                "type": "table",
                "name": "car_makers"
              }
            }
          }
        ]
      },
      "right": {
        "type": "table",
        "name": "countries"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "countryid",
      "countryname"
    ],
    "input": {
      "operation": "join",
      "condition": "all_desired_countries.country = countries.countryid",
      "left": {
        "operation": "union",
        "left": {
          "operation": "projection",
          "attributes": [
            "country"
          ],
          "input": {
            "type": "subquery",
            "name": "C_more_than_3"
          }
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "country"
          ],
          "input": {
            "operation": "join",
            "condition": "fiat_makers.maker = car_makers.id",
            "left": {
              "operation": "projection",
              "attributes": [
                "maker"
              ],
              "input": {
                "operation": "join",
                "condition": "fiat_models.model = model_list.model",
                "left": {
                  "operation": "selection",
                  "condition": "model = 'fiat'",
                  "input": {
                    "type": "table",
                    "name": "car_names"
                  }
                },
                "right": {
                  "type": "table",
                  "name": "model_list"
                }
              }
            },
            "right": {
              "type": "table",
              "name": "car_makers"
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "countries"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "country"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "field": "airline",
        "value": "JetBlue Airways",
        "operator": "="
      },
      "input": {
        "type": "table",
        "name": "airlines"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "country"
    ],
    "input": {
      "operation": "selection",
      "condition": "airline = 'JetBlue Airways'",
      "input": {
        "type": "table",
        "name": "airlines"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "abbreviation"
    ],
    "input": {
      "operation": "selection",
      "condition": "airline = 'JetBlue Airways'",
      "input": {
        "type": "table",
        "name": "airlines"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "abbreviation"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "airline": "JetBlue Airways"
      },
      "input": {
        "type": "table",
        "name": "airlines"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "airline",
      "abbreviation"
    ],
    "input": {
      "operation": "selection",
      "condition": "country = 'USA'",
      "input": {
        "type": "table",
        "name": "airlines"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "airline",
      "abbreviation"
    ],
    "input": {
      "operation": "selection",
      "condition": "airline IN (USA_airlines)",
      "input": {
        "type": "table",
        "name": "airlines"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "airportcode",
      "airportname"
    ],
    "input": {
      "operation": "selection",
      "condition": "city='Anthony'",
      "input": {
        "type": "table",
        "name": "airports"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "airportcode",
      "airportname"
    ],
    "input": {
      "operation": "selection",
      "condition": "city='Anthony'",
      "input": {
        "type": "table",
        "name": "airports"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "airline"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "airline"
      ],
      "input": {
        "type": "table",
        "name": "airlines"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "airline"
      }
    ],
    "input": {
      "operation": "table",
      "name": "airlines"
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "airportcode",
        "alias": "num_airports"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "airportcode"
      ],
      "input": {
        "type": "table",
        "name": "airports"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "airportcode"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "airportcode"
      ],
      "input": {
        "type": "table",
        "name": "airports"
      }
    }
  },
  {
    "operation": "rename",
    "new_name": "N_flights",
    "input": {
      "operation": "aggregation",
      "group_by": [],
      "aggregates": [
        {
          "type": "count",
          "field": "flightno",
          "alias": "num_flights"
        }
      ],
      "input": {
        "operation": "table",
        "name": "flights"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "*"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "flightno"
      ],
      "input": {
        "type": "table",
        "name": "flights"
      }
    }
  },
  {
    "operation": "selection",
    "condition": {
      "field": "abbreviation",
      "value": "UAL",
      "operator": "="
    },
    "input": {
      "type": "table",
      "name": "airlines"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "abbreviation",
      "airline",
      "uid",
      "country"
    ],
    "input": {
      "operation": "selection",
      "condition": "abbreviation='UAL'",
      "input": {
        "type": "table",
        "name": "airlines"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "airline"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "airline"
      ],
      "input": {
        "operation": "selection",
        "condition": "country = 'USA'",
        "input": {
          "type": "table",
          "name": "airlines"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "uid"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "uid"
      ],
      "input": {
        "operation": "selection",
        "condition": "country = 'USA'",
        "input": {
          "type": "table",
          "name": "airlines"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "city",
      "country"
    ],
    "input": {
      "operation": "selection",
      "condition": "airportname = 'Alton'",
      "input": {
        "type": "table",
        "name": "airports"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "city",
      "country"
    ],
    "input": {
      "operation": "selection",
      "condition": "airportname = 'Alton'",
      "input": {
        "type": "table",
        "name": "airports"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "airportname"
    ],
    "input": {
      "operation": "selection",
      "condition": "airportcode = 'AKO'",
      "input": {
        "type": "table",
        "name": "airports"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "airportname"
    ],
    "input": {
      "operation": "selection",
      "condition": "airportcode='AKO'",
      "input": {
        "type": "table",
        "name": "airports"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "airportname"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "field": "city",
        "value": "Aberdeen"
      },
      "input": {
        "type": "table",
        "name": "airports"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "airportname"
    ],
    "input": {
      "operation": "selection",
      "condition": "city = 'Aberdeen'",
      "input": {
        "type": "table",
        "name": "airports"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "flightno"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "flightno"
      ],
      "input": {
        "operation": "selection",
        "condition": {
          "field": "sourceairport",
          "operator": "=",
          "value": "APG"
        },
        "input": {
          "type": "table",
          "name": "flights"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "*"
      }
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "attribute": "sourceairport",
        "value": "APG"
      },
      "input": {
        "type": "table",
        "name": "flights"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "flightno"
      }
    ],
    "input": {
      "operation": "selection",
      "condition": "destairport = 'ATO'",
      "input": {
        "type": "table",
        "name": "flights"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "*"
      }
    ],
    "input": {
      "operation": "selection",
      "condition": "destairport = 'ATO'",
      "input": {
        "type": "table",
        "name": "flights"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "*"
      }
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "attribute": "sourceairport",
        "operator": "in",
        "values": {
          "operation": "projection",
          "attributes": [
            "airportcode"
          ],
          "input": {
            "operation": "selection",
            "condition": {
              "attribute": "city",
              "operator": "=",
              "value": "Aberdeen"
            },
            "input": {
              "type": "table",
              "name": "airports"
            }
          }
        }
      },
      "input": {
        "type": "table",
        "name": "flights"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "*"
      }
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "operation": "in",
        "field": "sourceairport",
        "set": {
          "operation": "projection",
          "attributes": [
            "airportcode"
          ],
          "input": {
            "operation": "selection",
            "condition": {
              "field": "city",
              "value": "Aberdeen"
            },
            "input": {
              "type": "table",
              "name": "airports"
            }
          }
        }
      },
      "input": {
        "type": "table",
        "name": "flights"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "*"
      }
    ],
    "input": {
      "operation": "join",
      "condition": "flights.destairport = airports.airportcode",
      "left": {
        "operation": "selection",
        "condition": "city = 'Aberdeen'",
        "input": {
          "type": "table",
          "name": "airports"
        }
      },
      "right": {
        "type": "table",
        "name": "flights"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "flightno"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "airline",
        "flightno"
      ],
      "input": {
        "operation": "selection",
        "condition": "destairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen')",
        "input": {
          "type": "table",
          "name": "flights"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "flightno"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "flightno"
      ],
      "input": {
        "operation": "selection",
        "condition": "sourceairport IN (SELECT airportcode FROM airports WHERE city = \"Aberdeen\") AND destairport IN (SELECT airportcode FROM airports WHERE city = \"Ashley\")",
        "input": {
          "type": "table",
          "name": "flights"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "flightno"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "flightno"
      ],
      "input": {
        "operation": "join",
        "condition": "F1.flightno = F2.flightno",
        "left": {
          "operation": "join",
          "condition": "A1.Acode = flights.sourceairport",
          "left": {
            "operation": "rename",
            "attributes": {
              "Acode": "airportcode"
            },
            "input": {
              "operation": "selection",
              "condition": "city = 'Aberdeen'",
              "input": {
                "type": "table",
                "name": "airports"
              }
            }
          },
          "right": {
            "type": "table",
            "name": "flights"
          }
        },
        "right": {
          "operation": "join",
          "condition": "A2.Bcode = flights.destairport",
          "left": {
            "operation": "rename",
            "attributes": {
              "Bcode": "airportcode"
            },
            "input": {
              "operation": "selection",
              "condition": "city = 'Ashley'",
              "input": {
                "type": "table",
                "name": "airports"
              }
            }
          },
          "right": {
            "type": "table",
            "name": "flights"
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "flightno"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "flightno"
      ],
      "input": {
        "operation": "join",
        "condition": "JetBlueUID.uid = flights.airline",
        "left": {
          "operation": "rename",
          "new_name": "JetBlueUID",
          "input": {
            "operation": "projection",
            "attributes": [
              "uid"
            ],
            "input": {
              "operation": "selection",
              "condition": "airline = 'JetBlue Airways'",
              "input": {
                "type": "table",
                "name": "airlines"
              }
            }
          }
        },
        "right": {
          "type": "table",
          "name": "flights"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "flightno",
        "alias": "jetblue_flight_count"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "airline",
        "flightno"
      ],
      "input": {
        "operation": "join",
        "condition": "flights.airline = airlines.airline",
        "left": {
          "type": "table",
          "name": "flights"
        },
        "right": {
          "operation": "selection",
          "condition": "airline = 'JetBlue Airways'",
          "input": {
            "type": "table",
            "name": "airlines"
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": null
      }
    ],
    "input": {
      "operation": "selection",
      "condition": "destairport = 'ASY'",
      "input": {
        "operation": "selection",
        "condition": "airline = 'United Airlines'",
        "input": {
          "type": "table",
          "name": "flights"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "flightno"
      }
    ],
    "input": {
      "operation": "selection",
      "condition": "destairport = 'ASY'",
      "input": {
        "operation": "join",
        "condition": "airlines.abbreviation = flights.airline",
        "left": {
          "operation": "projection",
          "attributes": [
            "abbreviation"
          ],
          "input": {
            "operation": "selection",
            "condition": "airline = 'United Airlines'",
            "input": {
              "type": "table",
              "name": "airlines"
            }
          }
        },
        "right": {
          "type": "table",
          "name": "flights"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "*"
      }
    ],
    "input": {
      "operation": "selection",
      "condition": "sourceairport = 'AHD'",
      "input": {
        "operation": "selection",
        "condition": "airline = 'United Airlines'",
        "input": {
          "operation": "join",
          "condition": "flights.airline = airlines.airline",
          "left": {
            "type": "table",
            "name": "flights"
          },
          "right": {
            "type": "table",
            "name": "airlines"
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "COUNT(*)"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "*",
        "as": "number_of_flights"
      }
    ],
    "input": {
      "operation": "selection",
      "condition": "sourceairport = 'AHD'",
      "input": {
        "operation": "selection",
        "condition": "airline = 'United Airlines'",
        "input": {
          "type": "table",
          "name": "flights"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "flightno",
        "alias": "United_Airlines_Flights_to_Aberdeen"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "f.flightno"
      ],
      "input": {
        "operation": "selection",
        "condition": "a.city = 'Aberdeen'",
        "input": {
          "operation": "join",
          "condition": "flights.destairport = airports.airportcode",
          "left": {
            "operation": "join",
            "condition": "flights.airline = ua_airlines.uid",
            "left": {
              "operation": "selection",
              "condition": "airlines.airline = 'United Airlines'",
              "input": {
                "type": "table",
                "name": "airlines"
              }
            },
            "right": {
              "type": "table",
              "name": "flights"
            }
          },
          "right": {
            "type": "table",
            "name": "airports"
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "flightno"
      }
    ],
    "input": {
      "operation": "selection",
      "condition": "destairport = (SELECT airportcode FROM (projection (airportcode) (selection (city = 'Aberdeen') (airports))))",
      "input": {
        "operation": "selection",
        "condition": "airline = (SELECT uid FROM (projection (uid) (selection (airline = 'United Airlines') (airlines))))",
        "input": {
          "type": "table",
          "name": "flights"
        }
      }
    }
  },
  {
    "operation": "selection",
    "condition": "numArrivals = MAX(numArrivals)",
    "input": {
      "operation": "aggregation",
      "group_by": [
        "city"
      ],
      "aggregates": [
        {
          "type": "count",
          "field": "destairport",
          "as": "numArrivals"
        }
      ],
      "input": {
        "operation": "join",
        "condition": "Arrivals.destairport = airports.airportcode",
        "left": {
          "operation": "projection",
          "attributes": [
            "destairport"
          ],
          "input": {
            "type": "table",
            "name": "flights"
          }
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "airportcode",
            "city"
          ],
          "input": {
            "type": "table",
            "name": "airports"
          }
        }
      }
    }
  },
  {
    "operation": "selection",
    "condition": "totalfreq = M",
    "input": {
      "operation": "aggregation",
      "group_by": [
        "city"
      ],
      "aggregates": [
        {
          "type": "sum",
          "field": "freq",
          "as": "totalfreq"
        }
      ],
      "input": {
        "operation": "join",
        "condition": "DestFreq.destairport = airports.airportcode",
        "left": {
          "operation": "aggregation",
          "group_by": [
            "destairport"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "*",
              "as": "freq"
            }
          ],
          "input": {
            "type": "table",
            "name": "flights"
          }
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "city",
            "airportcode"
          ],
          "input": {
            "type": "table",
            "name": "airports"
          }
        }
      }
    }
  },
  {
    "operation": "selection",
    "condition": "num_departures = max(num_departures)",
    "input": {
      "operation": "aggregation",
      "group_by": [
        "airports.city"
      ],
      "aggregates": [
        {
          "type": "count",
          "field": "flights.sourceairport",
          "alias": "num_departures"
        }
      ],
      "input": {
        "operation": "projection",
        "attributes": [
          "airports.city",
          "flights.sourceairport"
        ],
        "input": {
          "operation": "join",
          "condition": "airports.airportcode = flights.sourceairport",
          "left": {
            "type": "table",
            "name": "flights"
          },
          "right": {
            "type": "table",
            "name": "airports"
          }
        }
      }
    }
  },
  {
    "operation": "selection",
    "condition": "flight_count = (max_flight_count(\u03c0_flight_count(city_flight_counts)))",
    "input": {
      "operation": "aggregation",
      "group_by": [
        "city"
      ],
      "aggregates": [
        {
          "type": "count",
          "field": "sourceairport",
          "alias": "flight_count"
        }
      ],
      "input": {
        "operation": "projection",
        "attributes": [
          "city",
          "sourceairport"
        ],
        "input": {
          "operation": "selection",
          "condition": "flights.sourceairport = airports.airportcode",
          "input": {
            "operation": "cartesian_product",
            "left": {
              "type": "table",
              "name": "flights"
            },
            "right": {
              "type": "table",
              "name": "airports"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "airportcode"
    ],
    "input": {
      "operation": "selection",
      "condition": "flight_count = MaxFlights.flight_count",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "airportcode"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "*",
            "as": "flight_count"
          }
        ],
        "input": {
          "operation": "union",
          "left": {
            "operation": "rename",
            "attributes": [
              "airportcode",
              "destairport"
            ],
            "input": {
              "operation": "projection",
              "attributes": [
                "destairport"
              ],
              "input": {
                "type": "table",
                "name": "flights"
              }
            }
          },
          "right": {
            "operation": "rename",
            "attributes": [
              "airportcode",
              "sourceairport"
            ],
            "input": {
              "operation": "projection",
              "attributes": [
                "sourceairport"
              ],
              "input": {
                "type": "table",
                "name": "flights"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "airport"
    ],
    "input": {
      "operation": "selection",
      "condition": "totalFlights = max(totalFlights)",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "airport"
        ],
        "aggregates": [
          {
            "type": "sum",
            "field": "numOfFlights",
            "alias": "totalFlights"
          }
        ],
        "input": {
          "operation": "union",
          "left": {
            "operation": "aggregation",
            "group_by": [
              "destairport"
            ],
            "aggregates": [
              {
                "type": "count",
                "field": "*",
                "alias": "numOfFlights"
              }
            ],
            "input": {
              "type": "table",
              "name": "flights"
            }
          },
          "right": {
            "operation": "rename",
            "attributes": {
              "sourceairport": "airport",
              "numOfFlights": "numOfFlights"
            },
            "input": {
              "operation": "aggregation",
              "group_by": [
                "sourceairport"
              ],
              "aggregates": [
                {
                  "type": "count",
                  "field": "*",
                  "alias": "numOfFlights"
                }
              ],
              "input": {
                "type": "table",
                "name": "flights"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "airportcode"
    ],
    "input": {
      "operation": "selection",
      "condition": "TotalFlights = MinimumTotalFlights",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "airportcode"
        ],
        "aggregates": [
          {
            "type": "sum",
            "field": "NumDepartures + NumArrivals",
            "alias": "TotalFlights"
          }
        ],
        "input": {
          "operation": "union",
          "left": {
            "operation": "aggregation",
            "group_by": [
              "sourceairport"
            ],
            "aggregates": [
              {
                "type": "count",
                "field": "*",
                "alias": "NumDepartures"
              }
            ],
            "input": {
              "operation": "projection",
              "attributes": [
                "sourceairport"
              ],
              "input": {
                "type": "table",
                "name": "flights"
              }
            }
          },
          "right": {
            "operation": "aggregation",
            "group_by": [
              "destairport"
            ],
            "aggregates": [
              {
                "type": "count",
                "field": "*",
                "alias": "NumArrivals"
              }
            ],
            "input": {
              "operation": "projection",
              "attributes": [
                "destairport"
              ],
              "input": {
                "type": "table",
                "name": "flights"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "airportcode"
    ],
    "input": {
      "operation": "selection",
      "condition": "total_flights = MIN(total_flights)",
      "input": {
        "operation": "extension",
        "attributes": [
          {
            "type": "calculate",
            "expression": "IFNULL(dep_count, 0) + IFNULL(arr_count, 0)",
            "as": "total_flights"
          }
        ],
        "input": {
          "operation": "join",
          "type": "full_outer",
          "on": "airportcode",
          "left": {
            "operation": "rename",
            "attributes": {
              "airportcode": "sourceairport",
              "dep_count": "dep_count"
            },
            "input": {
              "operation": "aggregation",
              "group_by": [
                "sourceairport"
              ],
              "aggregates": [
                {
                  "type": "count",
                  "field": "*",
                  "as": "dep_count"
                }
              ],
              "input": {
                "type": "table",
                "name": "flights"
              }
            }
          },
          "right": {
            "operation": "rename",
            "attributes": {
              "airportcode": "destairport",
              "arr_count": "arr_count"
            },
            "input": {
              "operation": "aggregation",
              "group_by": [
                "destairport"
              ],
              "aggregates": [
                {
                  "type": "count",
                  "field": "*",
                  "as": "arr_count"
                }
              ],
              "input": {
                "type": "table",
                "name": "flights"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "airline"
    ],
    "input": {
      "operation": "selection",
      "condition": "flight_count = max_flight_count",
      "input": {
        "operation": "join",
        "condition": "FlightCount.flight_count = MaxCount.max_flight_count",
        "left": {
          "operation": "aggregation",
          "group_by": [
            "airline"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "flightno",
              "alias": "flight_count"
            }
          ],
          "input": {
            "type": "table",
            "name": "flights"
          }
        },
        "right": {
          "operation": "aggregation",
          "group_by": [],
          "aggregates": [
            {
              "type": "max",
              "field": "flight_count",
              "alias": "max_flight_count"
            }
          ],
          "input": {
            "operation": "aggregation",
            "group_by": [
              "airline"
            ],
            "aggregates": [
              {
                "type": "count",
                "field": "flightno",
                "alias": "flight_count"
              }
            ],
            "input": {
              "type": "table",
              "name": "flights"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "airline"
    ],
    "input": {
      "operation": "selection",
      "condition": "flight_count = max_flight_count",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "max(flight_count)"
        ],
        "aggregates": [],
        "input": {
          "operation": "aggregation",
          "group_by": [
            "airline"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "flightno",
              "alias": "flight_count"
            }
          ],
          "input": {
            "type": "table",
            "name": "flights"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "abbreviation",
      "country"
    ],
    "input": {
      "operation": "join",
      "condition": "airlines.abbreviation = count_flights_per_airline.airline",
      "left": {
        "type": "table",
        "name": "airlines"
      },
      "right": {
        "operation": "selection",
        "condition": "count_flights = min_count",
        "input": {
          "operation": "projection",
          "attributes": [
            "airline",
            "count_flights"
          ],
          "input": {
            "operation": "rename",
            "new_name": "count_flights_per_airline",
            "input": {
              "operation": "aggregation",
              "group_by": [
                "airline"
              ],
              "aggregates": [
                {
                  "type": "count",
                  "field": "flight"
                }
              ],
              "input": {
                "operation": "rename",
                "new_name": "temp",
                "input": {
                  "type": "table",
                  "name": "flights"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "abbreviation",
      "country"
    ],
    "input": {
      "operation": "join",
      "condition": "MinCount.airline = A.airline",
      "left": {
        "operation": "selection",
        "predicate": "numberOfFlights = MIN(numberOfFlights)",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "airline"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "flightno",
              "alias": "numberOfFlights"
            }
          ],
          "input": {
            "type": "table",
            "name": "F"
          }
        }
      },
      "right": {
        "type": "table",
        "name": "A"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "airline"
    ],
    "input": {
      "operation": "selection",
      "condition": "sourceairport = 'AHD'",
      "input": {
        "type": "table",
        "name": "flights"
      }
    },
    "distinct": true
  },
  {
    "operation": "projection",
    "attributes": [
      "airline"
    ],
    "input": {
      "operation": "selection",
      "condition": "sourceairport = 'AHD'",
      "input": {
        "type": "table",
        "name": "flights"
      }
    },
    "distinct": true
  },
  {
    "operation": "projection",
    "attributes": [
      "airline"
    ],
    "input": {
      "operation": "selection",
      "condition": "destairport = 'AHD'",
      "input": {
        "type": "table",
        "name": "flights"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "airlines.airline"
    ],
    "input": {
      "operation": "join",
      "condition": "flights.airline = airlines.airline",
      "left": {
        "operation": "selection",
        "condition": "destairport = 'AHD'",
        "input": {
          "type": "table",
          "name": "flights"
        }
      },
      "right": {
        "type": "table",
        "name": "airlines"
      }
    }
  },
  {
    "operation": "intersection",
    "left": {
      "operation": "projection",
      "attributes": [
        "airline"
      ],
      "input": {
        "operation": "selection",
        "condition": {
          "attribute": "sourceairport",
          "value": "APG",
          "operator": "="
        },
        "input": {
          "type": "table",
          "name": "flights"
        }
      }
    },
    "right": {
      "operation": "projection",
      "attributes": [
        "airline"
      ],
      "input": {
        "operation": "selection",
        "condition": {
          "attribute": "sourceairport",
          "value": "CVO",
          "operator": "="
        },
        "input": {
          "type": "table",
          "name": "flights"
        }
      }
    }
  },
  {
    "operation": "intersection",
    "input": [
      {
        "operation": "projection",
        "attributes": [
          "airline"
        ],
        "input": {
          "operation": "selection",
          "condition": "sourceairport = 'APG'",
          "input": {
            "type": "table",
            "name": "flights"
          }
        }
      },
      {
        "operation": "projection",
        "attributes": [
          "airline"
        ],
        "input": {
          "operation": "selection",
          "condition": "sourceairport = 'CVO'",
          "input": {
            "type": "table",
            "name": "flights"
          }
        }
      }
    ]
  },
  {
    "operation": "intersection",
    "input_left": {
      "operation": "difference",
      "input_left": {
        "operation": "projection",
        "attributes": [
          "airline"
        ],
        "input": {
          "operation": "selection",
          "condition": "sourceairport='CVO'",
          "input": {
            "type": "table",
            "name": "flights"
          }
        }
      },
      "input_right": {
        "operation": "projection",
        "attributes": [
          "airline"
        ],
        "input": {
          "operation": "selection",
          "condition": "sourceairport='APG'",
          "input": {
            "type": "table",
            "name": "flights"
          }
        }
      }
    },
    "input_right": {
      "operation": "projection",
      "attributes": [
        "airline"
      ],
      "input": {
        "type": "table",
        "name": "airlines"
      }
    }
  },
  {
    "operation": "difference",
    "inputs": [
      {
        "operation": "projection",
        "attributes": [
          "airline"
        ],
        "input": {
          "operation": "selection",
          "condition": "sourceairport = 'CVO'",
          "input": {
            "type": "table",
            "name": "flights"
          }
        }
      },
      {
        "operation": "projection",
        "attributes": [
          "airline"
        ],
        "input": {
          "operation": "selection",
          "condition": "sourceairport = 'APG'",
          "input": {
            "type": "table",
            "name": "flights"
          }
        }
      }
    ]
  },
  {
    "operation": "projection",
    "attributes": [
      "airlines.*"
    ],
    "input": {
      "operation": "join",
      "condition": "airlines.airline = flights_counted.airline",
      "left": {
        "type": "table",
        "name": "airlines"
      },
      "right": {
        "operation": "selection",
        "condition": "flight_count >= 10",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "airline"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "flightno",
              "alias": "flight_count"
            }
          ],
          "input": {
            "type": "table",
            "name": "flights"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "airline"
    ],
    "input": {
      "operation": "selection",
      "condition": "num_flights >= 10",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "airline"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "flightno",
            "alias": "num_flights"
          }
        ],
        "input": {
          "operation": "table",
          "name": "flights"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "airline",
      "abbreviation",
      "country"
    ],
    "input": {
      "operation": "join",
      "left": {
        "operation": "selection",
        "condition": "count < 200",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "airline"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "*",
              "alias": "count"
            }
          ],
          "input": {
            "type": "table",
            "name": "flights"
          }
        }
      },
      "right": {
        "type": "table",
        "name": "airlines"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "airline"
    ],
    "input": {
      "operation": "join",
      "condition": "FewFlights.airline = airlines.airline",
      "left": {
        "operation": "selection",
        "condition": "numFlights < 200",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "airline"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "flightno",
              "alias": "numFlights"
            }
          ],
          "input": {
            "type": "table",
            "name": "flights"
          }
        }
      },
      "right": {
        "type": "table",
        "name": "airlines"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "flightno"
    ],
    "input": {
      "operation": "join",
      "condition": "airline",
      "left": {
        "operation": "projection",
        "attributes": [
          "airline"
        ],
        "input": {
          "operation": "selection",
          "condition": {
            "attribute": "airline",
            "value": "United Airlines"
          },
          "input": {
            "type": "table",
            "name": "airlines"
          }
        }
      },
      "right": {
        "type": "table",
        "name": "flights"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "flightno"
    ],
    "input": {
      "operation": "selection",
      "condition": "airline = (SELECT abbreviation FROM airlines WHERE airline = 'United Airlines')",
      "input": {
        "type": "table",
        "name": "flights"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "flightno"
    ],
    "input": {
      "operation": "selection",
      "condition": "sourceairport = 'APG'",
      "input": {
        "type": "table",
        "name": "flights"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "flightno"
    ],
    "input": {
      "operation": "selection",
      "condition": "sourceairport = 'APG'",
      "input": {
        "type": "table",
        "name": "flights"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "flightno"
    ],
    "input": {
      "operation": "selection",
      "condition": "destairport = 'APG'",
      "input": {
        "type": "table",
        "name": "flights"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "flightno"
    ],
    "input": {
      "operation": "selection",
      "condition": "destairport = 'APG'",
      "input": {
        "type": "table",
        "name": "flights"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "flightno"
    ],
    "input": {
      "operation": "join",
      "condition": "airports.airportcode = flights.sourceairport",
      "left": {
        "operation": "selection",
        "condition": "city = 'Aberdeen'",
        "input": {
          "type": "table",
          "name": "airports"
        }
      },
      "right": {
        "type": "table",
        "name": "flights"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "flightno"
    ],
    "input": {
      "operation": "selection",
      "condition": "airports.city='Aberdeen' AND flights.sourceairport = airports.airportcode",
      "input": {
        "operation": "join",
        "condition": "airports.airportcode = flights.sourceairport",
        "left": {
          "type": "table",
          "name": "airports"
        },
        "right": {
          "type": "table",
          "name": "flights"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "flightno"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "attribute": "destairport",
        "in": {
          "operation": "projection",
          "attributes": [
            "airportcode"
          ],
          "input": {
            "operation": "selection",
            "condition": {
              "attribute": "city",
              "value": "Aberdeen"
            },
            "input": {
              "type": "table",
              "name": "airports"
            }
          }
        }
      },
      "input": {
        "type": "table",
        "name": "flights"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "flightno"
    ],
    "input": {
      "operation": "join",
      "condition": "flights.destairport = airportcode",
      "left": {
        "type": "table",
        "name": "flights"
      },
      "right": {
        "operation": "projection",
        "attributes": [
          "airportcode"
        ],
        "input": {
          "operation": "selection",
          "condition": "city = 'Aberdeen'",
          "input": {
            "type": "table",
            "name": "airports"
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "*"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "flightno"
      ],
      "input": {
        "operation": "selection",
        "condition": "flights.destairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen' OR city = 'Abilene')",
        "input": {
          "operation": "table",
          "name": "flights"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "*"
      }
    ],
    "input": {
      "operation": "join",
      "condition": "flights.destairport = destairport",
      "left": {
        "type": "table",
        "name": "flights"
      },
      "right": {
        "operation": "rename",
        "attributes": {
          "airportcode": "destairport"
        },
        "input": {
          "operation": "projection",
          "attributes": [
            "airportcode"
          ],
          "input": {
            "operation": "selection",
            "condition": "city = 'Aberdeen' OR city = 'Abilene'",
            "input": {
              "type": "table",
              "name": "airports"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "airportname"
    ],
    "input": {
      "operation": "difference",
      "left": {
        "operation": "projection",
        "attributes": [
          "airportcode",
          "airportname"
        ],
        "input": {
          "type": "table",
          "name": "airports"
        }
      },
      "right": {
        "operation": "union",
        "inputs": [
          {
            "operation": "projection",
            "attributes": [
              "airportcode"
            ],
            "rename": {
              "sourceairport": "airportcode"
            },
            "input": {
              "type": "table",
              "name": "flights"
            }
          },
          {
            "operation": "projection",
            "attributes": [
              "airportcode"
            ],
            "rename": {
              "destairport": "airportcode"
            },
            "input": {
              "type": "table",
              "name": "flights"
            }
          }
        ]
      }
    }
  },
  {
    "operation": "selection",
    "condition": "airportcode IN W",
    "input": {
      "operation": "difference",
      "left": {
        "operation": "projection",
        "attributes": [
          "airportcode"
        ],
        "input": {
          "type": "table",
          "name": "airports"
        }
      },
      "right": {
        "operation": "union",
        "input": [
          {
            "operation": "projection",
            "attributes": [
              "sourceairport"
            ],
            "input": {
              "type": "table",
              "name": "flights"
            }
          },
          {
            "operation": "projection",
            "attributes": [
              "destairport"
            ],
            "input": {
              "type": "table",
              "name": "flights"
            }
          }
        ]
      }
    }
  },
  {
    "operation": "rename",
    "new_name": "count",
    "input": {
      "operation": "aggregation",
      "group_by": [],
      "aggregates": [
        {
          "type": "count",
          "field": "employee_id"
        }
      ],
      "input": {
        "type": "table",
        "name": "employee"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "employee_id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "employee_id"
      ],
      "input": {
        "type": "table",
        "name": "employee"
      }
    }
  },
  {
    "operation": "extension",
    "order_by": {
      "attributes": [
        "age"
      ],
      "order": "asc"
    },
    "input": {
      "operation": "projection",
      "attributes": [
        "name",
        "age"
      ],
      "input": {
        "type": "table",
        "name": "employee"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "extension",
      "order_by": {
        "attributes": [
          "age"
        ],
        "order": "asc"
      },
      "input": {
        "type": "table",
        "name": "employee"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "city"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "employee_id",
        "alias": "num_employees"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "city",
        "employee_id"
      ],
      "input": {
        "type": "table",
        "name": "employee"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "city"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "employee_id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "city"
      ],
      "input": {
        "type": "table",
        "name": "employee"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "city"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "attribute": "num_employees",
        "operator": ">",
        "value": 1
      },
      "input": {
        "operation": "aggregation",
        "group_by": [
          "city"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "employee_id",
            "as": "num_employees"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "city",
            "employee_id"
          ],
          "input": {
            "operation": "selection",
            "condition": {
              "attribute": "age",
              "operator": "<",
              "value": 30
            },
            "input": {
              "type": "table",
              "name": "employee"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "city"
    ],
    "input": {
      "operation": "selection",
      "condition": "num_employees > 1",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "city"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "employee_id",
            "alias": "num_employees"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "city",
            "employee_id"
          ],
          "input": {
            "operation": "selection",
            "condition": "age < 30",
            "input": {
              "type": "table",
              "name": "employee"
            }
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "location"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "shop_id",
        "alias": "number_of_shops"
      }
    ],
    "input": {
      "type": "table",
      "name": "shop"
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "location"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "shop_id",
        "as": "number_of_shops"
      }
    ],
    "input": {
      "operation": "table",
      "name": "shop"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "employee.name",
      "shop.district"
    ],
    "input": {
      "operation": "join",
      "condition": "Manager.employee_id = employee.employee_id",
      "input": {
        "operation": "join",
        "condition": "Manager.shop_id = shop.shop_id",
        "input": {
          "operation": "projection",
          "attributes": [
            "employee_id",
            "shop_id"
          ],
          "input": {
            "operation": "selection",
            "condition": "(hiring.shop_id = (SELECT shop_id FROM shop WHERE number_products = (SELECT MAX(number_products) FROM shop)) AND hiring.is_full_time = true)",
            "input": {
              "type": "table",
              "name": "hiring"
            }
          }
        },
        "right": {
          "type": "table",
          "name": "shop"
        }
      },
      "right": {
        "type": "table",
        "name": "employee"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "manager_name",
      "district"
    ],
    "input": {
      "operation": "join",
      "condition": "Max_employees_shop.shop_id = shop.shop_id",
      "left": {
        "operation": "selection",
        "condition": "employee_count = max_count",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "shop_id"
          ],
          "aggregates": [
            {
              "type": "count",
              "alias": "employee_count",
              "field": "employee_id"
            }
          ],
          "input": {
            "operation": "projection",
            "attributes": [
              "shop_id",
              "employee_id"
            ],
            "input": {
              "operation": "join",
              "condition": "hiring.employee_id = employee.employee_id",
              "left": {
                "operation": "join",
                "condition": "shop.shop_id = hiring.shop_id",
                "left": {
                  "type": "table",
                  "name": "shop"
                },
                "right": {
                  "type": "table",
                  "name": "hiring"
                }
              },
              "right": {
                "type": "table",
                "name": "employee"
              }
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "shop"
      }
    }
  },
  {
    "operation": "union",
    "inputs": [
      {
        "operation": "projection",
        "attributes": [
          "min_products"
        ],
        "input": {
          "operation": "aggregation",
          "group_by": [],
          "aggregates": [
            {
              "type": "min",
              "field": "number_products",
              "alias": "min_products"
            }
          ],
          "input": {
            "operation": "projection",
            "attributes": [
              "number_products",
              "shop_id"
            ],
            "input": {
              "type": "table",
              "name": "shop"
            }
          }
        }
      },
      {
        "operation": "projection",
        "attributes": [
          "max_products"
        ],
        "input": {
          "operation": "aggregation",
          "group_by": [],
          "aggregates": [
            {
              "type": "max",
              "field": "number_products",
              "alias": "max_products"
            }
          ],
          "input": {
            "operation": "projection",
            "attributes": [
              "number_products",
              "shop_id"
            ],
            "input": {
              "type": "table",
              "name": "shop"
            }
          }
        }
      }
    ]
  },
  {
    "min_number_products": {
      "operation": "aggregation",
      "group_by": [],
      "aggregates": [
        {
          "type": "min",
          "field": "number_products"
        }
      ],
      "input": {
        "operation": "projection",
        "attributes": [
          "number_products"
        ],
        "input": {
          "type": "table",
          "name": "shop"
        }
      }
    },
    "max_number_products": {
      "operation": "aggregation",
      "group_by": [],
      "aggregates": [
        {
          "type": "max",
          "field": "number_products"
        }
      ],
      "input": {
        "operation": "projection",
        "attributes": [
          "number_products"
        ],
        "input": {
          "type": "table",
          "name": "shop"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "location",
      "district"
    ],
    "input": {
      "operation": "extension",
      "order_by": {
        "attributes": [
          "number_products"
        ],
        "order": "desc"
      },
      "input": {
        "operation": "projection",
        "attributes": [
          "name",
          "location",
          "district",
          "number_products"
        ],
        "input": {
          "type": "table",
          "name": "shop"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "location",
      "district"
    ],
    "input": {
      "operation": "extension",
      "order_by": {
        "attributes": [
          "number_products"
        ],
        "order": "desc"
      },
      "input": {
        "operation": "projection",
        "attributes": [
          "name",
          "location",
          "district",
          "number_products"
        ],
        "input": {
          "type": "table",
          "name": "shop"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "number_products > AVG_NUM_PROD",
      "input": {
        "operation": "extension",
        "aggregates": [
          {
            "type": "sum",
            "field": "number_products",
            "as": "SUM_NUM_PROD"
          },
          {
            "type": "count",
            "field": "shop_id",
            "as": "COUNT_SHOPS"
          }
        ],
        "input": {
          "type": "table",
          "name": "shop"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "number_products > (avg_number_products)",
      "input": {
        "operation": "aggregation",
        "group_by": [],
        "aggregates": [
          {
            "type": "avg",
            "field": "number_products",
            "alias": "avg_number_products"
          }
        ],
        "input": {
          "operation": "table",
          "name": "shop"
        }
      },
      "input_table": {
        "operation": "table",
        "name": "shop"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "TopEmployee.employee_id = employee.employee_id",
      "left": {
        "operation": "selection",
        "condition": "count = MaxCount.count",
        "input": {
          "operation": "cartesian_product",
          "left": {
            "type": "table",
            "name": "AwardCount"
          },
          "right": {
            "operation": "projection",
            "attributes": [
              "max(count)"
            ],
            "input": {
              "type": "table",
              "name": "AwardCount"
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "employee"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "employee.employee_id = MAX_EMP.employee_id",
      "left": {
        "type": "table",
        "name": "employee"
      },
      "right": {
        "operation": "projection",
        "attributes": [
          "employee_id"
        ],
        "input": {
          "operation": "selection",
          "condition": "COUNT_E.award_count = MAX_COUNT.max_award_count",
          "input": {
            "operation": "join",
            "condition": "",
            "left": {
              "operation": "aggregation",
              "group_by": [
                "employee_id"
              ],
              "aggregates": [
                {
                  "type": "count",
                  "field": "year_awarded",
                  "alias": "award_count"
                }
              ],
              "input": {
                "operation": "projection",
                "attributes": [
                  "employee_id",
                  "year_awarded"
                ],
                "input": {
                  "operation": "join",
                  "condition": "evaluation.employee_id = employee.employee_id",
                  "left": {
                    "type": "table",
                    "name": "evaluation"
                  },
                  "right": {
                    "type": "table",
                    "name": "employee"
                  }
                }
              }
            },
            "right": {
              "operation": "aggregation",
              "group_by": [],
              "aggregates": [
                {
                  "type": "max",
                  "field": "award_count",
                  "alias": "max_award_count"
                }
              ],
              "input": {
                "operation": "aggregation",
                "group_by": [
                  "employee_id"
                ],
                "aggregates": [
                  {
                    "type": "count",
                    "field": "year_awarded",
                    "alias": "award_count"
                  }
                ],
                "input": {
                  "operation": "projection",
                  "attributes": [
                    "employee_id",
                    "year_awarded"
                  ],
                  "input": {
                    "operation": "join",
                    "condition": "evaluation.employee_id = employee.employee_id",
                    "left": {
                      "type": "table",
                      "name": "evaluation"
                    },
                    "right": {
                      "type": "table",
                      "name": "employee"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "evaluation.employee_id = employee.employee_id",
      "left": {
        "operation": "selection",
        "condition": "bonus = max_bonus",
        "input": {
          "operation": "cartesian_product",
          "left": {
            "type": "table",
            "name": "evaluation"
          },
          "right": {
            "operation": "rename",
            "new_name": "max_bonus",
            "input": {
              "operation": "aggregation",
              "aggregates": [
                {
                  "type": "max",
                  "field": "bonus"
                }
              ],
              "input": {
                "type": "table",
                "name": "evaluation"
              }
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "employee"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "BiggestBonusEmployees.employee_id = employee.employee_id",
      "left": {
        "operation": "selection",
        "condition": "E.bonus = MaxBonus.max_bonus",
        "input": {
          "operation": "cartesian_product",
          "left": {
            "type": "table",
            "name": "E"
          },
          "right": {
            "operation": "rename",
            "new_name": "maxBonus",
            "input": {
              "operation": "aggregation",
              "aggregates": [
                {
                  "type": "max",
                  "field": "bonus",
                  "result_name": "max_bonus"
                }
              ],
              "input": {
                "type": "table",
                "name": "E"
              }
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "employee"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "difference",
      "left": {
        "operation": "projection",
        "attributes": [
          "employee_id",
          "name"
        ],
        "input": {
          "type": "table",
          "name": "employee"
        }
      },
      "right": {
        "operation": "join",
        "condition": "E_awarded.employee_id = employee.employee_id",
        "left": {
          "operation": "projection",
          "attributes": [
            "employee_id"
          ],
          "input": {
            "type": "table",
            "name": "evaluation"
          }
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "employee_id",
            "name"
          ],
          "input": {
            "type": "table",
            "name": "employee"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "employee_id NOT IN (SELECT employee_id FROM evaluation)",
      "input": {
        "operation": "table",
        "name": "employee"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "employee_count = max_count",
      "input": {
        "operation": "extension",
        "aggregates": [
          {
            "type": "max",
            "field": "employee_count",
            "as": "max_count"
          }
        ],
        "input": {
          "operation": "aggregation",
          "group_by": [
            "shop_id",
            "name"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "employee_id",
              "as": "employee_count"
            }
          ],
          "input": {
            "operation": "join",
            "condition": "shop.shop_id = hiring.shop_id",
            "left": {
              "type": "table",
              "name": "shop"
            },
            "right": {
              "type": "table",
              "name": "hiring"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "shop.name"
    ],
    "input": {
      "operation": "join",
      "condition": "S.shop_id = shop.shop_id",
      "left": {
        "operation": "selection",
        "condition": "emp_count = max_count",
        "input": {
          "operation": "extension",
          "extensions": [
            {
              "type": "aggregation",
              "group_by": [
                "shop_id"
              ],
              "aggregates": [
                {
                  "type": "count",
                  "field": "*",
                  "as": "emp_count"
                }
              ],
              "input": {
                "type": "table",
                "name": "hiring"
              }
            },
            {
              "type": "aggregation",
              "group_by": [],
              "aggregates": [
                {
                  "type": "max",
                  "field": "emp_count",
                  "as": "max_count"
                }
              ],
              "input": {
                "operation": "aggregation",
                "group_by": [
                  "shop_id"
                ],
                "aggregates": [
                  {
                    "type": "count",
                    "field": "*",
                    "as": "emp_count"
                  }
                ],
                "input": {
                  "type": "table",
                  "name": "hiring"
                }
              }
            }
          ]
        }
      },
      "right": {
        "type": "table",
        "name": "shop"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "shop_id IN (SELECT shop_id FROM shop EXCEPT SELECT shop_id FROM hiring)",
      "input": {
        "operation": "table",
        "name": "shop"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "shop_id IN (SELECT shop_id FROM shop EXCEPT SELECT shop_id FROM hiring)",
      "input": {
        "type": "table",
        "name": "shop"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "num_employees"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "shop_id",
        "name"
      ],
      "aggregates": [
        {
          "type": "count",
          "field": "employee_id",
          "alias": "num_employees"
        }
      ],
      "input": {
        "operation": "projection",
        "attributes": [
          "shop_id",
          "name",
          "employee_id"
        ],
        "input": {
          "operation": "join",
          "condition": "shop.shop_id = hiring.shop_id",
          "left": {
            "type": "table",
            "name": "shop"
          },
          "right": {
            "type": "table",
            "name": "hiring"
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "shop_id",
      "name"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "employee_id",
        "as": "num_employees"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "name",
        "shop_id",
        "employee_id"
      ],
      "input": {
        "operation": "join",
        "condition": "shop.shop_id = hiring.shop_id",
        "left": {
          "type": "table",
          "name": "shop"
        },
        "right": {
          "type": "table",
          "name": "hiring"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "sum",
        "field": "bonus",
        "alias": "total_bonus"
      }
    ],
    "input": {
      "type": "table",
      "name": "evaluation"
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "sum",
        "field": "E_bonus"
      }
    ],
    "input": {
      "type": "table",
      "name": "Evaluation"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "h.shop_id",
      "h.employee_id",
      "h.start_from",
      "h.is_full_time",
      "e.name",
      "e.age",
      "e.city",
      "s.name",
      "s.location",
      "s.district",
      "ev.year_awarded",
      "ev.bonus"
    ],
    "input": {
      "operation": "join",
      "condition": "hiring.employee_id = evaluation.employee_id",
      "left": {
        "operation": "join",
        "condition": "hiring.shop_id = shop.shop_id",
        "left": {
          "operation": "join",
          "condition": "hiring.employee_id = employee.employee_id",
          "left": {
            "type": "table",
            "name": "hiring"
          },
          "right": {
            "type": "table",
            "name": "employee"
          }
        },
        "right": {
          "type": "table",
          "name": "shop"
        }
      },
      "right": {
        "type": "table",
        "name": "evaluation"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "hiring.shop_id",
      "hiring.employee_id",
      "hiring.start_from",
      "hiring.is_full_time",
      "shop.name as name_shop",
      "shop.location",
      "shop.district",
      "employee.name as name_employee",
      "employee.age",
      "employee.city"
    ],
    "input": {
      "operation": "selection",
      "condition": "hiring.employee_id = employee.employee_id and hiring.shop_id = shop.shop_id",
      "input": {
        "operation": "cartesian_product",
        "inputs": [
          {
            "type": "table",
            "name": "hiring"
          },
          {
            "type": "table",
            "name": "employee"
          },
          {
            "type": "table",
            "name": "shop"
          }
        ]
      }
    }
  },
  {
    "operation": "intersection",
    "left": {
      "operation": "projection",
      "attributes": [
        "district"
      ],
      "input": {
        "operation": "selection",
        "condition": "number_products < 3000",
        "input": {
          "type": "table",
          "name": "shop"
        }
      }
    },
    "right": {
      "operation": "projection",
      "attributes": [
        "district"
      ],
      "input": {
        "operation": "selection",
        "condition": "number_products > 10000",
        "input": {
          "type": "table",
          "name": "shop"
        }
      }
    }
  },
  {
    "operation": "intersection",
    "input1": {
      "operation": "projection",
      "attributes": [
        "district"
      ],
      "input": {
        "operation": "selection",
        "condition": "number_products < 3000",
        "input": {
          "type": "table",
          "name": "S"
        }
      }
    },
    "input2": {
      "operation": "projection",
      "attributes": [
        "district"
      ],
      "input": {
        "operation": "selection",
        "condition": "number_products > 10000",
        "input": {
          "type": "table",
          "name": "S"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "location"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "location"
      ],
      "input": {
        "operation": "distinct",
        "input": {
          "operation": "table",
          "name": "shop"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "location"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "location"
      ],
      "input": {
        "type": "table",
        "name": "shop"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "document_id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "document_id"
      ],
      "input": {
        "type": "table",
        "name": "documents"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "document_id",
        "alias": "count_document_id"
      }
    ],
    "input": {
      "operation": "rename",
      "alias": "temp",
      "input": {
        "operation": "selection",
        "condition": "documents.document_id IS NOT NULL",
        "input": {
          "type": "table",
          "name": "documents"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "document_id",
      "document_name",
      "document_description"
    ],
    "input": {
      "operation": "selection",
      "condition": "true",
      "input": {
        "type": "table",
        "name": "documents"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "document_id",
      "document_name",
      "document_description"
    ],
    "input": {
      "operation": "selection",
      "condition": "true",
      "input": {
        "type": "table",
        "name": "documents"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "document_name",
      "template_id"
    ],
    "input": {
      "operation": "selection",
      "condition": "document_description LIKE '%w%'",
      "input": {
        "type": "table",
        "name": "documents"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "document_name",
      "template_id"
    ],
    "input": {
      "operation": "selection",
      "condition": "document_description LIKE '%w%'",
      "input": {
        "type": "table",
        "name": "documents"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "document_id",
      "template_id",
      "document_description"
    ],
    "input": {
      "operation": "selection",
      "condition": "document_name = 'Robbin CV'",
      "input": {
        "type": "table",
        "name": "documents"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "document_id",
      "template_id",
      "document_description"
    ],
    "input": {
      "operation": "join",
      "condition": "documents.template_id = templates.template_id",
      "left": {
        "operation": "selection",
        "condition": "document_name = 'Robbin CV'",
        "input": {
          "type": "table",
          "name": "documents"
        }
      },
      "right": {
        "type": "table",
        "name": "templates"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "template_id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "template_id"
      ],
      "input": {
        "type": "table",
        "name": "documents"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "template_id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "template_id"
      ],
      "input": {
        "operation": "join",
        "condition": "templates.template_id = documents.template_id",
        "left": {
          "type": "table",
          "name": "templates"
        },
        "right": {
          "type": "table",
          "name": "documents"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "document_id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "documents.document_id"
      ],
      "input": {
        "operation": "join",
        "condition": "templates.template_id = documents.template_id",
        "left": {
          "operation": "selection",
          "condition": "templates.template_type_code = 'PPT'",
          "input": {
            "type": "table",
            "name": "templates"
          }
        },
        "right": {
          "type": "table",
          "name": "documents"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "document_id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "document_id"
      ],
      "input": {
        "operation": "join",
        "condition": "documents.template_id = templates.template_id",
        "left": {
          "type": "selection",
          "condition": "template_type_code = 'PPT'",
          "input": {
            "type": "table",
            "name": "templates"
          }
        },
        "right": {
          "type": "table",
          "name": "documents"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "template_id"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "document_id",
        "as": "document_count"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "template_id",
        "document_id"
      ],
      "input": {
        "operation": "join",
        "condition": "templates.template_id = documents.template_id",
        "left": {
          "type": "table",
          "name": "templates"
        },
        "right": {
          "type": "table",
          "name": "documents"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "template_id"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "template_id",
        "alias": "template_usage_count"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "template_id"
      ],
      "input": {
        "type": "table",
        "name": "documents"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "template_id",
      "template_type_code"
    ],
    "input": {
      "operation": "join",
      "condition": "T.template_id = templates.template_id",
      "left": {
        "operation": "selection",
        "condition": "doc_count = M",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "template_id"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "document_id",
              "as": "doc_count"
            }
          ],
          "input": {
            "operation": "join",
            "condition": "documents.template_id = templates.template_id",
            "left": {
              "type": "table",
              "name": "documents"
            },
            "right": {
              "type": "table",
              "name": "templates"
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "templates"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "template_id",
      "template_type_code"
    ],
    "input": {
      "operation": "selection",
      "condition": "doc_count = max_doc_count",
      "input": {
        "operation": "extension",
        "extend": [
          {
            "type": "max",
            "field": "doc_count",
            "alias": "max_doc_count"
          }
        ],
        "input": {
          "operation": "aggregation",
          "group_by": [
            "template_id",
            "template_type_code"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "document_id",
              "alias": "doc_count"
            }
          ],
          "input": {
            "operation": "join",
            "condition": "templates.template_id = documents.template_id",
            "left": {
              "type": "table",
              "name": "templates"
            },
            "right": {
              "type": "table",
              "name": "documents"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "template_id"
    ],
    "input": {
      "operation": "selection",
      "condition": "doc_count > 1",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "template_id"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "document_id",
            "alias": "doc_count"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "template_id",
            "document_id"
          ],
          "input": {
            "operation": "join",
            "condition": "documents.template_id = templates.template_id",
            "left": {
              "type": "table",
              "name": "documents"
            },
            "right": {
              "type": "table",
              "name": "templates"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "template_id"
    ],
    "input": {
      "operation": "selection",
      "condition": "doc_count > 1",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "template_id"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "document_id",
            "alias": "doc_count"
          }
        ],
        "input": {
          "type": "table",
          "name": "documents"
        }
      }
    }
  },
  {
    "operation": "difference",
    "left": {
      "operation": "projection",
      "attributes": [
        "template_id"
      ],
      "input": {
        "type": "table",
        "name": "templates"
      }
    },
    "right": {
      "operation": "projection",
      "attributes": [
        "template_id"
      ],
      "input": {
        "type": "table",
        "name": "documents"
      }
    }
  },
  {
    "operation": "difference",
    "left": {
      "operation": "projection",
      "attributes": [
        "template_id"
      ],
      "input": {
        "type": "table",
        "name": "templates"
      }
    },
    "right": {
      "operation": "projection",
      "attributes": [
        "template_id"
      ],
      "input": {
        "type": "table",
        "name": "documents"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "template_id",
        "alias": "num_templates"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "template_id"
      ],
      "input": {
        "type": "table",
        "name": "templates"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "template_id"
      }
    ],
    "input": {
      "operation": "elimination_of_duplicates",
      "attributes": [
        "template_id"
      ],
      "input": {
        "operation": "projection",
        "attributes": [
          "template_id"
        ],
        "input": {
          "type": "table",
          "name": "templates"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "template_id",
      "version_number",
      "template_type_code"
    ],
    "input": {
      "type": "table",
      "name": "templates"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "template_id",
      "version_number",
      "template_type_code"
    ],
    "input": {
      "type": "table",
      "name": "templates"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "template_type_code"
    ],
    "input": {
      "operation": "rename",
      "name": "templates"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "template_type_code"
    ],
    "input": {
      "type": "table",
      "name": "ref_template_types"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "template_id"
    ],
    "input": {
      "operation": "selection",
      "condition": "template_type_code = 'PP' OR template_type_code = 'PPT'",
      "input": {
        "type": "table",
        "name": "templates"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "template_id"
    ],
    "input": {
      "operation": "selection",
      "condition": "template_type_code='PP' \u2228 template_type_code='PPT'",
      "input": {
        "type": "table",
        "name": "templates"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "template_id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "template_id"
      ],
      "input": {
        "operation": "selection",
        "condition": "template_type_code = 'CV'",
        "input": {
          "type": "table",
          "name": "templates"
        }
      }
    }
  },
  {
    "operation": "rename",
    "new_name": "count",
    "input": {
      "operation": "projection",
      "attributes": [
        "template_id"
      ],
      "input": {
        "operation": "selection",
        "condition": "template_type_code = 'CV'",
        "input": {
          "operation": "join",
          "left": {
            "type": "table",
            "name": "templates"
          },
          "right": {
            "type": "table",
            "name": "ref_template_types"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "version_number",
      "template_type_code"
    ],
    "input": {
      "operation": "selection",
      "condition": "version_number > 5",
      "input": {
        "type": "table",
        "name": "templates"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "version_number",
      "template_type_code"
    ],
    "input": {
      "operation": "selection",
      "condition": "version_number > 5",
      "input": {
        "type": "table",
        "name": "templates"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "template_type_code"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "template_id",
        "alias": "num_templates"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "template_type_code",
        "template_id"
      ],
      "input": {
        "type": "table",
        "name": "templates"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "template_type_code"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "template_id",
        "as": "num_templates"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "template_type_code",
        "template_id"
      ],
      "input": {
        "type": "table",
        "name": "templates"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "template_type_code"
    ],
    "input": {
      "operation": "selection",
      "condition": "numTemplates = MAX(numTemplates)",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "template_type_code"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "template_id",
            "alias": "numTemplates"
          }
        ],
        "input": {
          "type": "table",
          "name": "templates"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "template_type_code"
    ],
    "input": {
      "operation": "selection",
      "condition": "template_count = max_template_count",
      "input": {
        "operation": "cartesian_product",
        "left": {
          "operation": "aggregation",
          "group_by": [
            "template_type_code"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "template_id",
              "as": "template_count"
            }
          ],
          "input": {
            "type": "table",
            "name": "templates"
          }
        },
        "right": {
          "operation": "aggregation",
          "aggregates": [
            {
              "type": "max",
              "field": "template_count",
              "as": "max_template_count"
            }
          ],
          "input": {
            "type": "table",
            "name": "TempCount"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "template_type_code"
    ],
    "input": {
      "operation": "selection",
      "condition": "template_count < 3",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "template_type_code"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "template_id",
            "alias": "template_count"
          }
        ],
        "input": {
          "type": "table",
          "name": "templates"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "template_type_code"
    ],
    "input": {
      "operation": "selection",
      "condition": "template_count < 3",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "template_type_code"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "template_id"
          }
        ],
        "input": {
          "type": "table",
          "name": "templates"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "version_number",
      "template_type_code"
    ],
    "input": {
      "operation": "selection",
      "condition": "version_number = MIN(ver_num)",
      "input": {
        "operation": "rename",
        "new_name": "ver_num",
        "input": {
          "type": "table",
          "name": "templates"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "version_number",
      "template_type_code"
    ],
    "input": {
      "operation": "join",
      "condition": "T1.version_number = MinVersion.version_number",
      "left": {
        "operation": "projection",
        "attributes": [
          "version_number",
          "template_type_code"
        ],
        "input": {
          "type": "table",
          "name": "templates"
        }
      },
      "right": {
        "operation": "projection",
        "attributes": [
          "version_number"
        ],
        "input": {
          "operation": "selection",
          "condition": {
            "operation": "less_than_equal",
            "left": "version_number",
            "right": {
              "operation": "projection",
              "attributes": [
                "version_number"
              ],
              "input": {
                "operation": "table",
                "name": "T1"
              }
            }
          },
          "input": {
            "operation": "projection",
            "attributes": [
              "version_number"
            ],
            "input": {
              "operation": "projection",
              "attributes": [
                "version_number",
                "template_type_code"
              ],
              "input": {
                "type": "table",
                "name": "templates"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "templates.template_type_code"
    ],
    "input": {
      "operation": "selection",
      "condition": "documents.document_name = 'Data base'",
      "input": {
        "operation": "join",
        "condition": "documents.template_id = templates.template_id",
        "left": {
          "type": "table",
          "name": "documents"
        },
        "right": {
          "type": "table",
          "name": "templates"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "template_type_code"
    ],
    "input": {
      "operation": "join",
      "condition": "documents.template_id = templates.template_id",
      "left": {
        "operation": "selection",
        "condition": "document_name = 'Data base'",
        "input": {
          "type": "table",
          "name": "documents"
        }
      },
      "right": {
        "type": "table",
        "name": "templates"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "document_name"
    ],
    "input": {
      "operation": "join",
      "condition": "templates.template_id = documents.template_id",
      "left": {
        "operation": "join",
        "condition": "ref_template_types.template_type_code = templates.template_type_code",
        "left": {
          "operation": "selection",
          "condition": "template_type_code = 'BK'",
          "input": {
            "type": "table",
            "name": "ref_template_types"
          }
        },
        "right": {
          "type": "table",
          "name": "templates"
        }
      },
      "right": {
        "type": "table",
        "name": "documents"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "document_name"
    ],
    "input": {
      "operation": "join",
      "condition": "templates.template_id = documents.template_id",
      "left": {
        "operation": "selection",
        "condition": "template_type_code = 'BK'",
        "input": {
          "type": "table",
          "name": "templates"
        }
      },
      "right": {
        "type": "table",
        "name": "documents"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "template_type_code",
      "number_of_documents"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "template_type_code"
      ],
      "aggregates": [
        {
          "type": "count",
          "field": "document_id",
          "alias": "number_of_documents"
        }
      ],
      "input": {
        "operation": "projection",
        "attributes": [
          "template_type_code",
          "document_id"
        ],
        "input": {
          "operation": "join",
          "condition": "templates.template_id = documents.template_id",
          "left": {
            "operation": "projection",
            "attributes": [
              "template_type_code",
              "template_id"
            ],
            "input": {
              "type": "table",
              "name": "templates"
            }
          },
          "right": {
            "operation": "projection",
            "attributes": [
              "template_id",
              "document_id"
            ],
            "input": {
              "type": "table",
              "name": "documents"
            }
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "template_type_code"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "document_id",
        "alias": "document_count"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "template_type_code",
        "document_id"
      ],
      "input": {
        "operation": "join",
        "condition": "T1.template_id = documents.template_id",
        "left": {
          "operation": "join",
          "condition": "ref_template_types.template_type_code = templates.template_type_code",
          "left": {
            "type": "table",
            "name": "ref_template_types"
          },
          "right": {
            "type": "table",
            "name": "templates"
          }
        },
        "right": {
          "type": "table",
          "name": "documents"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "template_type_code"
    ],
    "input": {
      "operation": "selection",
      "condition": "doc_count = max(doc_count)",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "template_type_code"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "template_id",
            "name": "doc_count"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "template_id",
            "template_type_code"
          ],
          "input": {
            "operation": "join",
            "condition": "documents.template_id = templates.template_id",
            "left": {
              "type": "table",
              "name": "documents"
            },
            "right": {
              "type": "table",
              "name": "templates"
            }
          }
        }
      }
    }
  },
  {
    "operation": "selection",
    "condition": "usage_count = max(usage_count)",
    "input": {
      "operation": "aggregation",
      "group_by": [
        "templates.template_type_code"
      ],
      "aggregates": [
        {
          "type": "count",
          "field": "",
          "alias": "usage_count"
        }
      ],
      "input": {
        "operation": "projection",
        "attributes": [
          "templates.template_type_code"
        ],
        "input": {
          "operation": "join",
          "condition": "documents.template_id = templates.template_id",
          "left": {
            "type": "table",
            "name": "documents"
          },
          "right": {
            "type": "table",
            "name": "templates"
          }
        }
      }
    }
  },
  {
    "operation": "difference",
    "left": {
      "operation": "projection",
      "attributes": [
        "template_type_code"
      ],
      "input": {
        "type": "table",
        "name": "ref_template_types"
      }
    },
    "right": {
      "operation": "projection",
      "attributes": [
        "template_type_code"
      ],
      "input": {
        "operation": "selection",
        "condition": "T.template_id = D.template_id",
        "input": {
          "operation": "cartesian_product",
          "left": {
            "type": "table",
            "name": "templates"
          },
          "right": {
            "type": "table",
            "name": "documents"
          }
        }
      }
    }
  },
  {
    "operation": "difference",
    "left": {
      "operation": "projection",
      "attributes": [
        "template_type_code"
      ],
      "input": {
        "operation": "table",
        "name": "ref_template_types"
      }
    },
    "right": {
      "operation": "projection",
      "attributes": [
        "template_type_code"
      ],
      "input": {
        "operation": "join",
        "condition": "documents.template_id = templates.template_id",
        "left": {
          "operation": "table",
          "name": "templates"
        },
        "right": {
          "operation": "table",
          "name": "documents"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "template_type_code",
      "template_type_description"
    ],
    "input": {
      "type": "table",
      "name": "ref_template_types"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "template_type_code",
      "template_type_description"
    ],
    "input": {
      "type": "table",
      "name": "ref_template_types"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "template_type_description"
    ],
    "input": {
      "operation": "selection",
      "condition": "template_type_code = 'AD'",
      "input": {
        "type": "table",
        "name": "ref_template_types"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "template_type_description"
    ],
    "input": {
      "operation": "selection",
      "conditions": {
        "template_type_code": "AD"
      },
      "input": {
        "type": "table",
        "name": "ref_template_types"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "template_type_code"
    ],
    "input": {
      "operation": "selection",
      "condition": "template_type_description = \"Book\"",
      "input": {
        "type": "table",
        "name": "ref_template_types"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "template_type_code"
    ],
    "input": {
      "operation": "selection",
      "condition": "template_type_description = 'Book'",
      "input": {
        "type": "table",
        "name": "ref_template_types"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "template_type_description"
    ],
    "input": {
      "operation": "join",
      "condition": "template_type_code = ref_template_types.template_type_code",
      "left": {
        "operation": "projection",
        "attributes": [
          "template_type_code"
        ],
        "input": {
          "operation": "join",
          "condition": "documents.template_id = templates.template_id",
          "left": {
            "type": "table",
            "name": "documents"
          },
          "right": {
            "type": "table",
            "name": "templates"
          }
        }
      },
      "right": {
        "type": "table",
        "name": "ref_template_types"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "template_type_code"
    ],
    "input": {
      "operation": "selection",
      "condition": "templates.template_id = documents.template_id",
      "input": {
        "operation": "cartesian_product",
        "left": {
          "type": "table",
          "name": "templates"
        },
        "right": {
          "type": "table",
          "name": "documents"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "template_id"
    ],
    "input": {
      "operation": "join",
      "condition": "ref_template_types.template_type_code = templates.template_type_code",
      "left": {
        "operation": "selection",
        "condition": "template_type_description = 'Presentation'",
        "input": {
          "type": "table",
          "name": "ref_template_types"
        }
      },
      "right": {
        "type": "table",
        "name": "templates"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "template_id"
    ],
    "input": {
      "operation": "join",
      "condition": "ref_template_types.template_type_code = templates.template_type_code",
      "left": {
        "operation": "selection",
        "condition": "template_type_description = 'Presentation'",
        "input": {
          "type": "table",
          "name": "ref_template_types"
        }
      },
      "right": {
        "type": "table",
        "name": "templates"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "paragraph_id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "paragraph_id"
      ],
      "input": {
        "type": "table",
        "name": "paragraphs"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "paragraph_id",
        "alias": "num_paragraphs"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "paragraph_id"
      ],
      "input": {
        "type": "table",
        "name": "paragraphs"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "paragraph_id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "paragraph_id"
      ],
      "input": {
        "operation": "join",
        "condition": "D_summer.document_id = paragraphs.document_id",
        "left": {
          "operation": "selection",
          "condition": "document_name = 'Summer Show'",
          "input": {
            "type": "table",
            "name": "documents"
          }
        },
        "right": {
          "type": "table",
          "name": "paragraphs"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "paragraph_id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "paragraph_id"
      ],
      "input": {
        "operation": "join",
        "condition": "documents.document_id = paragraphs.document_id",
        "left": {
          "operation": "selection",
          "condition": "document_name = 'Summer Show'",
          "input": {
            "type": "table",
            "name": "documents"
          }
        },
        "right": {
          "type": "table",
          "name": "paragraphs"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "paragraph_text",
      "paragraph_id",
      "document_id",
      "other_details"
    ],
    "input": {
      "operation": "selection",
      "condition": "paragraph_text = 'Korea'",
      "input": {
        "type": "table",
        "name": "paragraphs"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "paragraph_text",
      "paragraph_id",
      "document_id",
      "other_details",
      "document_name",
      "document_description",
      "template_id",
      "version_number",
      "template_type_code",
      "date_effective_from",
      "template_type_description"
    ],
    "input": {
      "operation": "join",
      "condition": "templates.template_type_code = ref_template_types.template_type_code",
      "left": {
        "operation": "join",
        "condition": "documents.template_id = templates.template_id",
        "left": {
          "operation": "join",
          "condition": "paragraphs.document_id = documents.document_id",
          "left": {
            "operation": "selection",
            "condition": "paragraph_text = 'Korea'",
            "input": {
              "type": "table",
              "name": "paragraphs"
            }
          },
          "right": {
            "type": "table",
            "name": "documents"
          }
        },
        "right": {
          "type": "table",
          "name": "templates"
        }
      },
      "right": {
        "type": "table",
        "name": "ref_template_types"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "paragraph_id",
      "paragraph_text"
    ],
    "input": {
      "operation": "join",
      "condition": "paragraphs.document_id = documents.document_id",
      "left": {
        "type": "table",
        "name": "paragraphs"
      },
      "right": {
        "operation": "selection",
        "condition": "document_name = 'Welcome to NY'",
        "input": {
          "type": "table",
          "name": "documents"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "paragraph_id",
      "paragraph_text"
    ],
    "input": {
      "operation": "join",
      "condition": "documents.document_id = paragraphs.document_id",
      "left": {
        "operation": "selection",
        "condition": "document_name = 'Welcome to NY'",
        "input": {
          "type": "table",
          "name": "documents"
        }
      },
      "right": {
        "type": "table",
        "name": "paragraphs"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "paragraph_text"
    ],
    "input": {
      "operation": "join",
      "condition": "documents.document_id = paragraphs.document_id",
      "left": {
        "operation": "selection",
        "condition": "document_name = 'Customer reviews'",
        "input": {
          "type": "table",
          "name": "documents"
        }
      },
      "right": {
        "type": "table",
        "name": "paragraphs"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "paragraph_text"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "in": {
          "attributes": [
            "document_id"
          ],
          "relation": {
            "operation": "projection",
            "attributes": [
              "document_id"
            ],
            "input": {
              "operation": "selection",
              "condition": {
                "attribute": "document_name",
                "value": "Customer reviews"
              },
              "input": {
                "type": "table",
                "name": "documents"
              }
            }
          }
        }
      },
      "input": {
        "type": "table",
        "name": "paragraphs"
      }
    }
  },
  {
    "operation": "extension",
    "order_by": {
      "attributes": [
        "document_id"
      ],
      "order": "asc"
    },
    "input": {
      "operation": "aggregation",
      "group_by": [
        "document_id"
      ],
      "aggregates": [
        {
          "type": "count",
          "field": "paragraph_id",
          "alias": "num_paragraphs"
        }
      ],
      "input": {
        "operation": "join",
        "condition": "documents.document_id = paragraphs.document_id",
        "left": {
          "type": "table",
          "name": "documents"
        },
        "right": {
          "type": "table",
          "name": "paragraphs"
        }
      }
    }
  },
  {
    "operation": "extension",
    "order_by": {
      "attributes": [
        "document_id"
      ],
      "order": "asc"
    },
    "input": {
      "operation": "aggregation",
      "group_by": [
        "document_id"
      ],
      "aggregates": [
        {
          "type": "count",
          "field": "paragraph_id",
          "alias": "paragraph_count"
        }
      ],
      "input": {
        "operation": "selection",
        "condition": "documents.document_id = paragraphs.document_id",
        "input": {
          "operation": "cartesian_product",
          "left": {
            "type": "table",
            "name": "documents"
          },
          "right": {
            "type": "table",
            "name": "paragraphs"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "document_id",
      "document_name",
      "paragraph_count"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "document_id"
      ],
      "aggregates": [
        {
          "type": "count",
          "field": "paragraph_text",
          "as": "paragraph_count"
        }
      ],
      "input": {
        "operation": "join",
        "condition": "document_id = par_document_id",
        "left": {
          "type": "table",
          "name": "documents"
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "document_id",
            "paragraph_text"
          ],
          "input": {
            "type": "table",
            "name": "paragraphs"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "document_id",
      "document_name",
      "paragraph_count"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "document_id",
        "document_name"
      ],
      "aggregates": [
        {
          "type": "count",
          "field": "paragraph_id",
          "alias": "paragraph_count"
        }
      ],
      "input": {
        "operation": "join",
        "condition": "documents.document_id = paragraphs.document_id",
        "left": {
          "type": "table",
          "name": "documents"
        },
        "right": {
          "type": "table",
          "name": "paragraphs"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "document_id"
    ],
    "input": {
      "operation": "selection",
      "condition": "num_paragraphs >= 2",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "document_id"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "paragraph_id",
            "alias": "num_paragraphs"
          }
        ],
        "input": {
          "operation": "join",
          "condition": "documents.document_id = paragraphs.document_id",
          "left": {
            "type": "table",
            "name": "documents"
          },
          "right": {
            "type": "table",
            "name": "paragraphs"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "document_id"
    ],
    "input": {
      "operation": "selection",
      "condition": "paragraph_count >= 2",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "document_id"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "paragraph_id",
            "alias": "paragraph_count"
          }
        ],
        "input": {
          "operation": "join",
          "condition": "documents.document_id = paragraphs.document_id",
          "left": {
            "type": "table",
            "name": "documents"
          },
          "right": {
            "type": "table",
            "name": "paragraphs"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "document_id",
      "document_name"
    ],
    "input": {
      "operation": "join",
      "condition": "P_max.document_id = documents.document_id",
      "left": {
        "operation": "selection",
        "condition": "num_paragraphs = max(num_paragraphs)",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "document_id"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "paragraph_id",
              "alias": "num_paragraphs"
            }
          ],
          "input": {
            "type": "table",
            "name": "paragraphs"
          }
        }
      },
      "right": {
        "type": "table",
        "name": "documents"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "D.document_id",
      "document_name"
    ],
    "input": {
      "operation": "join",
      "condition": "D.document_id = documents.document_id",
      "left": {
        "operation": "rename",
        "new_name": "D",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "document_id"
          ],
          "aggregates": [
            {
              "type": "max",
              "field": "num_paragraphs"
            }
          ],
          "input": {
            "operation": "aggregation",
            "group_by": [
              "document_id"
            ],
            "aggregates": [
              {
                "type": "count",
                "field": "*",
                "as": "num_paragraphs"
              }
            ],
            "input": {
              "type": "table",
              "name": "paragraphs"
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "documents"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "document_id"
    ],
    "input": {
      "operation": "selection",
      "condition": "paragraph_count = min_paragraph_count",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "document_id"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "paragraph_id",
            "alias": "paragraph_count"
          }
        ],
        "input": {
          "type": "table",
          "name": "paragraphs"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "document_id"
    ],
    "input": {
      "operation": "selection",
      "condition": "paragraph_count = (\u03c0(MIN(paragraph_count)) (COUNT_PARAGRAPHS))",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "document_id"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "paragraph_id",
            "alias": "paragraph_count"
          }
        ],
        "input": {
          "type": "table",
          "name": "paragraphs"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "document_id"
    ],
    "input": {
      "operation": "selection",
      "condition": "1 <= num_paragraphs AND num_paragraphs <= 2",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "document_id"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "paragraph_id",
            "alias": "num_paragraphs"
          }
        ],
        "input": {
          "operation": "join",
          "condition": "paragraphs.document_id = documents.document_id",
          "left": {
            "type": "table",
            "name": "paragraphs"
          },
          "right": {
            "type": "table",
            "name": "documents"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "document_id"
    ],
    "input": {
      "operation": "selection",
      "condition": "paragraph_count >= 1 AND paragraph_count <= 2",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "document_id"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "document_id",
            "alias": "paragraph_count"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "document_id"
          ],
          "input": {
            "operation": "join",
            "condition": "documents.document_id = paragraphs.document_id",
            "left": {
              "type": "table",
              "name": "documents"
            },
            "right": {
              "type": "table",
              "name": "paragraphs"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "document_id"
    ],
    "input": {
      "operation": "intersection",
      "inputs": [
        {
          "operation": "projection",
          "attributes": [
            "document_id"
          ],
          "input": {
            "operation": "selection",
            "condition": "paragraph_text = 'Brazil'",
            "input": {
              "type": "table",
              "name": "paragraphs"
            }
          }
        },
        {
          "operation": "projection",
          "attributes": [
            "document_id"
          ],
          "input": {
            "operation": "selection",
            "condition": "paragraph_text = 'Ireland'",
            "input": {
              "type": "table",
              "name": "paragraphs"
            }
          }
        }
      ]
    }
  },
  {
    "operation": "intersection",
    "inputs": [
      {
        "operation": "projection",
        "attributes": [
          "document_id"
        ],
        "input": {
          "operation": "selection",
          "condition": "paragraph_text = 'Brazil'",
          "input": {
            "type": "table",
            "name": "paragraphs"
          }
        }
      },
      {
        "operation": "projection",
        "attributes": [
          "document_id"
        ],
        "input": {
          "operation": "selection",
          "condition": "paragraph_text = 'Ireland'",
          "input": {
            "type": "table",
            "name": "paragraphs"
          }
        }
      }
    ]
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count_distinct",
        "field": "teacher_id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "teacher_id"
      ],
      "input": {
        "type": "table",
        "name": "teacher"
      }
    }
  },
  {
    "operation": "rename",
    "new_name": "count",
    "input": {
      "operation": "aggregation",
      "group_by": [],
      "aggregates": [
        {
          "type": "count",
          "distinct": false,
          "field": "*"
        }
      ],
      "input": {
        "type": "table",
        "name": "teacher"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "extension",
      "order_by": {
        "attributes": [
          "age"
        ],
        "order": "asc"
      },
      "input": {
        "operation": "projection",
        "attributes": [
          "name",
          "age"
        ],
        "input": {
          "type": "table",
          "name": "teacher"
        }
      }
    }
  },
  {
    "operation": "extension",
    "order_by": {
      "attributes": [
        "age"
      ],
      "order": "asc"
    },
    "input": {
      "operation": "projection",
      "attributes": [
        "age",
        "name"
      ],
      "input": {
        "type": "table",
        "name": "teacher"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "age",
      "hometown"
    ],
    "input": {
      "type": "table",
      "name": "teacher"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "age",
      "hometown"
    ],
    "input": {
      "type": "table",
      "name": "teacher"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "attribute": "hometown",
        "operator": "!=",
        "value": "Little Lever Urban District"
      },
      "input": {
        "type": "table",
        "name": "teacher"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "attribute": "hometown",
        "operator": "!=",
        "value": "Little Lever Urban District"
      },
      "input": {
        "type": "table",
        "name": "teacher"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "age=32 OR age=33",
      "input": {
        "type": "table",
        "name": "teacher"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "age = 32 OR age = 33",
      "input": {
        "type": "table",
        "name": "teacher"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "hometown"
    ],
    "input": {
      "operation": "selection",
      "condition": "teacher.age = temp.age",
      "input": {
        "operation": "cartesian_product",
        "left": {
          "type": "table",
          "name": "teacher"
        },
        "right": {
          "type": "temporary_relation",
          "name": "temp",
          "input": {
            "operation": "projection",
            "attributes": [
              "age"
            ],
            "input": {
              "operation": "selection",
              "condition": "age = min(teacher.age)",
              "input": {
                "type": "table",
                "name": "teacher"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "hometown"
    ],
    "input": {
      "operation": "selection",
      "condition": "age = MIN(age)",
      "input": {
        "operation": "aggregation",
        "aggregates": [
          {
            "type": "min",
            "field": "age"
          }
        ],
        "group_by": [],
        "input": {
          "type": "table",
          "name": "teacher"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "hometown",
      "teacher_count"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "hometown"
      ],
      "aggregates": [
        {
          "type": "count",
          "field": "teacher_id",
          "alias": "teacher_count"
        }
      ],
      "input": {
        "type": "table",
        "name": "teacher"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "hometown"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "teacher_id",
        "as": "num_teachers"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "hometown",
        "teacher_id"
      ],
      "input": {
        "type": "table",
        "name": "teacher"
      }
    }
  },
  {
    "operation": "selection",
    "condition": "count = max.count",
    "input": {
      "operation": "join",
      "condition": "true",
      "left": {
        "operation": "aggregation",
        "group_by": [
          "hometown"
        ],
        "aggregates": [
          {
            "type": "count",
            "alias": "count"
          }
        ],
        "input": {
          "type": "table",
          "name": "teacher"
        }
      },
      "right": {
        "operation": "projection",
        "attributes": [
          "max(count)"
        ],
        "input": {
          "operation": "aggregation",
          "group_by": [],
          "aggregates": [
            {
              "type": "max",
              "field": "count"
            }
          ],
          "input": {
            "operation": "aggregation",
            "group_by": [
              "hometown"
            ],
            "aggregates": [
              {
                "type": "count",
                "alias": "count"
              }
            ],
            "input": {
              "type": "table",
              "name": "teacher"
            }
          }
        }
      }
    }
  },
  {
    "operation": "selection",
    "condition": "teacher_count = max_count",
    "input": {
      "operation": "cartesian_product",
      "left": {
        "operation": "aggregation",
        "group_by": [
          "hometown"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "*",
            "alias": "teacher_count"
          }
        ],
        "input": {
          "type": "table",
          "name": "teacher"
        }
      },
      "right": {
        "operation": "aggregation",
        "aggregates": [
          {
            "type": "max",
            "field": "teacher_count",
            "alias": "max_count"
          }
        ],
        "input": {
          "operation": "aggregation",
          "group_by": [
            "hometown"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "*",
              "alias": "teacher_count"
            }
          ],
          "input": {
            "type": "table",
            "name": "teacher"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "hometown"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "hometown"
      ],
      "having": {
        "type": "count",
        "field": "teacher_id",
        "operator": ">=",
        "value": 2
      },
      "input": {
        "operation": "projection",
        "attributes": [
          "t1.hometown"
        ],
        "input": {
          "operation": "selection",
          "condition": "t1.hometown = t2.hometown AND t1.teacher_id != t2.teacher_id",
          "input": {
            "operation": "cartesian_product",
            "left": {
              "type": "table",
              "name": "teacher"
            },
            "right": {
              "type": "table",
              "name": "teacher"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "hometown"
    ],
    "input": {
      "operation": "selection",
      "condition": "num_teachers >= 2",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "hometown"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "teacher_id",
            "as": "num_teachers"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "hometown",
            "teacher_id"
          ],
          "input": {
            "type": "table",
            "name": "teacher"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "teacher.name",
      "course.course"
    ],
    "input": {
      "operation": "join",
      "condition": "course_arrange.course_id = course.course_id",
      "left": {
        "operation": "join",
        "condition": "teacher.teacher_id = course_arrange.teacher_id",
        "left": {
          "type": "table",
          "name": "teacher"
        },
        "right": {
          "type": "table",
          "name": "course_arrange"
        }
      },
      "right": {
        "type": "table",
        "name": "course"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "course"
    ],
    "input": {
      "operation": "selection",
      "condition": "teacher.teacher_id = course_arrange.teacher_id AND course_arrange.course_id = course.course_id",
      "input": {
        "operation": "cartesian_product",
        "left": {
          "operation": "cartesian_product",
          "left": {
            "type": "table",
            "name": "teacher"
          },
          "right": {
            "type": "table",
            "name": "course_arrange"
          }
        },
        "right": {
          "type": "table",
          "name": "course"
        }
      }
    }
  },
  {
    "operation": "extension",
    "order_by": {
      "attributes": [
        "name"
      ],
      "order": "asc"
    },
    "input": {
      "operation": "projection",
      "attributes": [
        "name",
        "course"
      ],
      "input": {
        "operation": "join",
        "condition": "R1.course_id = course.course_id",
        "left": {
          "operation": "join",
          "condition": "course_arrange.teacher_id = teacher.teacher_id",
          "left": {
            "type": "table",
            "name": "course_arrange"
          },
          "right": {
            "type": "table",
            "name": "teacher"
          }
        },
        "right": {
          "type": "table",
          "name": "course"
        }
      }
    }
  },
  {
    "operation": "extension",
    "order_by": {
      "attributes": [
        "name"
      ],
      "order": "asc"
    },
    "input": {
      "operation": "projection",
      "attributes": [
        "name",
        "course"
      ],
      "input": {
        "operation": "join",
        "condition": "T1.course_id = course.course_id",
        "left": {
          "operation": "join",
          "condition": "teacher.teacher_id = course_arrange.teacher_id",
          "left": {
            "type": "table",
            "name": "teacher"
          },
          "right": {
            "type": "table",
            "name": "course_arrange"
          }
        },
        "right": {
          "type": "table",
          "name": "course"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "course_arrange.teacher_id = teacher.teacher_id",
      "left": {
        "operation": "join",
        "condition": "course.course_id = course_arrange.course_id",
        "left": {
          "operation": "selection",
          "condition": "course = 'Math'",
          "input": {
            "type": "table",
            "name": "course"
          }
        },
        "right": {
          "type": "table",
          "name": "course_arrange"
        }
      },
      "right": {
        "type": "table",
        "name": "teacher"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "course_arrange.teacher_id = teacher.teacher_id",
      "left": {
        "operation": "join",
        "condition": "course.course_id = course_arrange.course_id",
        "left": {
          "operation": "selection",
          "condition": "course_name = 'Math'",
          "input": {
            "type": "table",
            "name": "course"
          }
        },
        "right": {
          "type": "table",
          "name": "course_arrange"
        }
      },
      "right": {
        "type": "table",
        "name": "teacher"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "teacher_id",
      "name"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "course_id",
        "alias": "num_courses"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "teacher_id",
        "name"
      ],
      "input": {
        "operation": "join",
        "condition": "teacher.teacher_id = course_arrange.teacher_id",
        "left": {
          "type": "table",
          "name": "teacher"
        },
        "right": {
          "type": "table",
          "name": "course_arrange"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "teacher.name",
      "teacher.teacher_id"
    ],
    "input": {
      "operation": "join",
      "condition": "teacher.teacher_id = course_arrange.teacher_id",
      "left": {
        "type": "table",
        "name": "teacher"
      },
      "right": {
        "type": "table",
        "name": "course_arrange"
      },
      "input": {
        "operation": "aggregation",
        "group_by": [
          "teacher.name",
          "teacher.teacher_id"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "course_arrange.course_id",
            "alias": "Number_of_Courses"
          }
        ]
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "teacher.teacher_id = T3.teacher_id",
      "left": {
        "type": "table",
        "name": "teacher"
      },
      "right": {
        "operation": "selection",
        "condition": "course_count >= 2",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "teacher_id"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "course_id",
              "as": "course_count"
            }
          ],
          "input": {
            "operation": "join",
            "condition": "teacher.teacher_id = course_arrange.teacher_id",
            "left": {
              "type": "table",
              "name": "teacher"
            },
            "right": {
              "type": "table",
              "name": "course_arrange"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "teacher.teacher_id = T3.teacher_id",
      "left": {
        "type": "table",
        "name": "teacher"
      },
      "right": {
        "operation": "selection",
        "condition": "course_count >= 2",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "teacher_id"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "course_id",
              "alias": "course_count"
            }
          ],
          "input": {
            "operation": "join",
            "condition": "teacher.teacher_id = course_arrange.teacher_id",
            "left": {
              "type": "table",
              "name": "teacher"
            },
            "right": {
              "type": "table",
              "name": "course_arrange"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "attribute": "teacher_id",
        "in": {
          "operation": "difference",
          "left": {
            "operation": "projection",
            "attributes": [
              "teacher_id"
            ],
            "input": {
              "type": "table",
              "name": "teacher"
            }
          },
          "right": {
            "operation": "projection",
            "attributes": [
              "teacher_id"
            ],
            "input": {
              "type": "table",
              "name": "course_arrange"
            }
          }
        }
      },
      "input": {
        "type": "table",
        "name": "teacher"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "T_nonarranged.teacher_id = teacher.teacher_id",
      "left": {
        "operation": "difference",
        "left": {
          "operation": "projection",
          "attributes": [
            "teacher_id"
          ],
          "input": {
            "operation": "rename",
            "attributes": [
              "teacher"
            ],
            "input": {
              "type": "table",
              "name": "teacher"
            }
          }
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "teacher_id"
          ],
          "input": {
            "operation": "join",
            "condition": "teacher.teacher_id = course_arrange.teacher_id",
            "left": {
              "type": "table",
              "name": "teacher"
            },
            "right": {
              "type": "table",
              "name": "course_arrange"
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "teacher"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "id"
      ],
      "input": {
        "operation": "selection",
        "condition": "age < 30",
        "input": {
          "type": "table",
          "name": "visitor"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "level_of_membership"
    ],
    "input": {
      "operation": "extension",
      "order_by": {
        "attributes": [
          "level_of_membership"
        ],
        "order": "desc"
      },
      "input": {
        "operation": "selection",
        "condition": "level_of_membership > 4",
        "input": {
          "type": "table",
          "name": "visitor"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "average",
        "field": "age"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "age"
      ],
      "input": {
        "operation": "selection",
        "condition": "level_of_membership <= 4",
        "input": {
          "type": "table",
          "name": "visitor"
        }
      }
    }
  },
  {
    "operation": "extension",
    "order_by": {
      "attributes": [
        "age"
      ],
      "order": "desc"
    },
    "input": {
      "operation": "projection",
      "attributes": [
        "name",
        "level_of_membership",
        "age"
      ],
      "input": {
        "operation": "selection",
        "condition": "level_of_membership > 4",
        "input": {
          "type": "table",
          "name": "visitor"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "museum_id",
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "num_of_staff = maxStaff",
      "input": {
        "operation": "projection",
        "attributes": [
          "museum_id",
          "name",
          "num_of_staff"
        ],
        "input": {
          "operation": "aggregation",
          "group_by": [],
          "aggregates": [
            {
              "type": "max",
              "field": "num_of_staff",
              "alias": "maxStaff"
            }
          ],
          "input": {
            "operation": "projection",
            "attributes": [
              "museum_id",
              "name",
              "num_of_staff"
            ],
            "input": {
              "type": "table",
              "name": "museum"
            }
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "avg",
        "field": "num_of_staff"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "num_of_staff"
      ],
      "input": {
        "operation": "selection",
        "condition": "open_year < 2009",
        "input": {
          "type": "table",
          "name": "museum"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "open_year",
      "num_of_staff"
    ],
    "input": {
      "operation": "selection",
      "condition": "name = 'Plaza Museum'",
      "input": {
        "type": "table",
        "name": "museum"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "num_of_staff > MinStaff",
      "input": {
        "operation": "aggregation",
        "group_by": [],
        "aggregates": [
          {
            "type": "minimum",
            "field": "num_of_staff"
          }
        ],
        "input": {
          "operation": "selection",
          "condition": "open_year > 2010",
          "input": {
            "type": "table",
            "name": "museum"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "id",
      "name",
      "age"
    ],
    "input": {
      "operation": "join",
      "condition": "VisitorsWithRepeatedVisits.visitor_id = visitor.id",
      "left": {
        "operation": "projection",
        "attributes": [
          "visitor_id"
        ],
        "input": {
          "operation": "selection",
          "condition": "visit_count > 1",
          "input": {
            "operation": "aggregation",
            "group_by": [
              "visitor_id",
              "museum_id"
            ],
            "aggregates": [
              {
                "type": "count",
                "field": "*",
                "alias": "visit_count"
              }
            ],
            "input": {
              "type": "table",
              "name": "visit"
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "visitor"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "id",
      "name",
      "level_of_membership"
    ],
    "input": {
      "operation": "selection",
      "condition": "total_spent_sum = max_total_spent_sum",
      "input": {
        "operation": "join",
        "condition": "visitor_id = id",
        "left": {
          "operation": "aggregation",
          "group_by": [
            "visitor_id"
          ],
          "aggregates": [
            {
              "type": "sum",
              "field": "total_spent",
              "as": "total_spent_sum"
            }
          ],
          "input": {
            "type": "table",
            "name": "visit"
          }
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "id",
            "name",
            "level_of_membership"
          ],
          "input": {
            "type": "table",
            "name": "visitor"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "m.museum_id",
      "m.name"
    ],
    "input": {
      "operation": "join",
      "condition": "m.museum_id = MaxVisitCount.museum_id",
      "left": {
        "operation": "projection",
        "attributes": [
          "museum_id"
        ],
        "input": {
          "operation": "selection",
          "condition": "TotalVisits = MAX(TotalVisits)",
          "input": {
            "operation": "aggregation",
            "group_by": [
              "museum_id"
            ],
            "aggregates": [
              {
                "type": "sum",
                "field": "num_of_ticket",
                "alias": "TotalVisits"
              }
            ],
            "input": {
              "type": "table",
              "name": "visit"
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "museum",
        "alias": "m"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "museum_id \u2208 (\u03a0 museum_id (museum) - \u03a0 museum_id (visit))",
      "input": {
        "operation": "difference",
        "left": {
          "operation": "projection",
          "attributes": [
            "museum_id"
          ],
          "input": {
            "type": "table",
            "name": "museum"
          }
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "museum_id"
          ],
          "input": {
            "type": "table",
            "name": "visit"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "visitor.name",
      "visitor.age"
    ],
    "input": {
      "operation": "selection",
      "condition": "MaxTicketVisitors.visitor_id = visitor.id",
      "input": {
        "operation": "cartesian_product",
        "left": {
          "operation": "selection",
          "condition": "visit.num_of_ticket = MaxTickets.num_of_ticket",
          "input": {
            "operation": "cartesian_product",
            "left": {
              "type": "table",
              "name": "visit"
            },
            "right": {
              "type": "table",
              "name": "MaxTickets"
            }
          }
        },
        "right": {
          "type": "table",
          "name": "visitor"
        }
      }
    }
  },
  {
    "operation": "union",
    "inputs": [
      {
        "operation": "projection",
        "attributes": [
          "AverageNumberOfTickets"
        ],
        "input": {
          "operation": "aggregation",
          "group_by": [],
          "aggregates": [
            {
              "type": "avg",
              "field": "num_of_ticket",
              "alias": "AverageNumberOfTickets"
            }
          ],
          "input": {
            "operation": "table",
            "name": "visit"
          }
        }
      },
      {
        "operation": "aggregation",
        "group_by": [],
        "aggregates": [
          {
            "type": "max",
            "field": "num_of_ticket",
            "alias": "MaxNumberOfTickets"
          }
        ],
        "input": {
          "operation": "table",
          "name": "visit"
        }
      }
    ]
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "sum",
        "field": "total_spent"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "total_spent"
      ],
      "input": {
        "operation": "join",
        "condition": "visitor.id = visit.visitor_id",
        "left": {
          "operation": "projection",
          "attributes": [
            "id"
          ],
          "input": {
            "operation": "selection",
            "condition": "level_of_membership = 1",
            "input": {
              "type": "table",
              "name": "visitor"
            }
          }
        },
        "right": {
          "type": "table",
          "name": "visit"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "visitor.visitor_id = visitor_id",
      "left": {
        "operation": "intersection",
        "left": {
          "operation": "projection",
          "attributes": [
            "visitor_id"
          ],
          "input": {
            "operation": "join",
            "condition": "museum.museum_id = visit.museum_id",
            "left": {
              "operation": "selection",
              "condition": "open_year < 2009",
              "input": {
                "type": "table",
                "name": "museum"
              }
            },
            "right": {
              "type": "table",
              "name": "visit"
            }
          }
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "visitor_id"
          ],
          "input": {
            "operation": "join",
            "condition": "museum.museum_id = visit.museum_id",
            "left": {
              "operation": "selection",
              "condition": "open_year > 2011",
              "input": {
                "type": "table",
                "name": "museum"
              }
            },
            "right": {
              "type": "table",
              "name": "visit"
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "visitor"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "*"
      }
    ],
    "input": {
      "operation": "difference",
      "left": {
        "operation": "projection",
        "attributes": [
          "id"
        ],
        "input": {
          "type": "table",
          "name": "visitor"
        }
      },
      "right": {
        "operation": "projection",
        "attributes": [
          "visitor_id"
        ],
        "input": {
          "operation": "selection",
          "condition": {
            "operation": "in",
            "attribute": "museum_id",
            "set": {
              "operation": "projection",
              "attributes": [
                "museum_id"
              ],
              "input": {
                "operation": "selection",
                "condition": {
                  "attribute": "open_year",
                  "operator": ">",
                  "value": 2010
                },
                "input": {
                  "type": "table",
                  "name": "museum"
                }
              }
            }
          },
          "input": {
            "type": "table",
            "name": "visit"
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "museum_id"
      }
    ],
    "input": {
      "operation": "selection",
      "condition": "(open_year > 2013) OR (open_year < 2008)",
      "input": {
        "type": "table",
        "name": "museum"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "player_id"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "player_id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "player_id"
      ],
      "input": {
        "operation": "table",
        "name": "players"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "player_id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "player_id"
      ],
      "input": {
        "operation": "table",
        "name": "players"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "*",
        "result": "total_matches"
      }
    ],
    "input": {
      "operation": "rename",
      "new_name": "MATCHES",
      "input": {
        "operation": "projection",
        "attributes": [
          "match_num"
        ],
        "input": {
          "type": "table",
          "name": "matches"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "match_num"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "match_num"
      ],
      "input": {
        "type": "table",
        "name": "matches"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "birth_date"
    ],
    "input": {
      "operation": "selection",
      "condition": "country_code='USA'",
      "input": {
        "type": "table",
        "name": "players"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "birth_date"
    ],
    "input": {
      "operation": "selection",
      "condition": "nationality = 'USA'",
      "input": {
        "type": "table",
        "name": "players"
      }
    }
  },
  [
    {
      "operation": "projection",
      "attributes": [
        "winner_id",
        "winner_age",
        "birth_date"
      ],
      "input": {
        "operation": "selection",
        "condition": "matches.winner_id = players.player_id",
        "input": {
          "operation": "cartesian_product",
          "left": {
            "type": "table",
            "name": "matches"
          },
          "right": {
            "type": "table",
            "name": "players"
          }
        }
      }
    },
    {
      "operation": "projection",
      "attributes": [
        "loser_id",
        "loser_age",
        "birth_date"
      ],
      "input": {
        "operation": "selection",
        "condition": "matches.loser_id = players.player_id",
        "input": {
          "operation": "cartesian_product",
          "left": {
            "type": "table",
            "name": "matches"
          },
          "right": {
            "type": "table",
            "name": "players"
          }
        }
      }
    },
    {
      "operation": "projection",
      "attributes": [
        "winner_age"
      ],
      "input": {
        "operation": "selection",
        "condition": "matches.winner_id = players.player_id",
        "input": {
          "operation": "extension",
          "expressions": {
            "winner_age": "AGE(current_date, birth_date)"
          },
          "input": {
            "operation": "cartesian_product",
            "left": {
              "type": "table",
              "name": "matches"
            },
            "right": {
              "type": "table",
              "name": "players"
            }
          }
        }
      }
    },
    {
      "operation": "projection",
      "attributes": [
        "loser_age"
      ],
      "input": {
        "operation": "selection",
        "condition": "matches.loser_id = players.player_id",
        "input": {
          "operation": "extension",
          "expressions": {
            "loser_age": "AGE(current_date, birth_date)"
          },
          "input": {
            "operation": "cartesian_product",
            "left": {
              "type": "table",
              "name": "matches"
            },
            "right": {
              "type": "table",
              "name": "players"
            }
          }
        }
      }
    },
    {
      "operation": "aggregation",
      "group_by": [
        "winner_age"
      ],
      "aggregates": [
        {
          "type": "average",
          "field": "winner_age",
          "as": "winner_avg_age"
        }
      ],
      "input": {
        "operation": "projection",
        "attributes": [
          "winner_age"
        ],
        "input": {
          "operation": "selection",
          "condition": "matches.winner_id = players.player_id",
          "input": {
            "operation": "extension",
            "expressions": {
              "winner_age": "AGE(current_date, birth_date)"
            },
            "input": {
              "operation": "cartesian_product",
              "left": {
                "type": "table",
                "name": "matches"
              },
              "right": {
                "type": "table",
                "name": "players"
              }
            }
          }
        }
      }
    },
    {
      "operation": "aggregation",
      "group_by": [
        "loser_age"
      ],
      "aggregates": [
        {
          "type": "average",
          "field": "loser_age",
          "as": "loser_avg_age"
        }
      ],
      "input": {
        "operation": "projection",
        "attributes": [
          "loser_age"
        ],
        "input": {
          "operation": "selection",
          "condition": "matches.loser_id = players.player_id",
          "input": {
            "operation": "extension",
            "expressions": {
              "loser_age": "AGE(current_date, birth_date)"
            },
            "input": {
              "operation": "cartesian_product",
              "left": {
                "type": "table",
                "name": "matches"
              },
              "right": {
                "type": "table",
                "name": "players"
              }
            }
          }
        }
      }
    }
  ],
  {
    "operation": "union",
    "inputs": [
      {
        "operation": "rename",
        "new_name": "avg_loser_age",
        "input": {
          "operation": "projection",
          "attributes": [
            "avg(loser_age)"
          ],
          "input": {
            "type": "table",
            "name": "matches"
          }
        }
      },
      {
        "operation": "rename",
        "new_name": "avg_winner_age",
        "input": {
          "operation": "projection",
          "attributes": [
            "avg(winner_age)"
          ],
          "input": {
            "type": "table",
            "name": "matches"
          }
        }
      }
    ]
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "avg",
        "field": "winner_rank"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "winner_rank"
      ],
      "input": {
        "type": "table",
        "name": "matches"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "avg",
        "field": "winner_rank"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "winner_rank"
      ],
      "input": {
        "type": "table",
        "name": "matches"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "max",
        "field": "loser_rank"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "loser_rank"
      ],
      "input": {
        "type": "table",
        "name": "matches"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "min",
        "field": "loser_rank"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "loser_rank"
      ],
      "input": {
        "operation": "table",
        "name": "matches"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "country_code"
      }
    ],
    "group_by": [],
    "input": {
      "operation": "projection",
      "attributes": [
        "country_code"
      ],
      "input": {
        "operation": "extension",
        "distinct": true,
        "input": {
          "type": "table",
          "name": "players"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "*"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "country_code"
      ],
      "input": {
        "operation": "extension",
        "distinct": true,
        "input": {
          "type": "table",
          "name": "players"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "loser_name"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "loser_name"
      ],
      "input": {
        "operation": "aggregation",
        "group_by": [
          "loser_name"
        ],
        "input": {
          "operation": "table",
          "name": "matches"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "loser_name",
        "distinct": true
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "loser_name"
      ],
      "input": {
        "type": "table",
        "name": "matches"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "tourney_name"
    ],
    "input": {
      "operation": "selection",
      "condition": "match_count > 10",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "tourney_name"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "match_num",
            "as": "match_count"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "tourney_name",
            "match_num"
          ],
          "input": {
            "type": "table",
            "name": "matches"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "tourney_name"
    ],
    "input": {
      "operation": "selection",
      "condition": "match_count > 10",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "tourney_name"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "match_num",
            "alias": "match_count"
          }
        ],
        "input": {
          "operation": "table",
          "name": "matches"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "last_name"
    ],
    "input": {
      "operation": "join",
      "condition": "winner_id = player_id",
      "left": {
        "operation": "intersection",
        "left": {
          "operation": "selection",
          "condition": "tourney_date >= 20130101 and tourney_date <= 20131231",
          "input": {
            "operation": "projection",
            "attributes": [
              "winner_id"
            ],
            "input": {
              "type": "table",
              "name": "matches"
            }
          }
        },
        "right": {
          "operation": "selection",
          "condition": "tourney_date >= 20160101 and tourney_date <= 20161231",
          "input": {
            "operation": "projection",
            "attributes": [
              "winner_id"
            ],
            "input": {
              "type": "table",
              "name": "matches"
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "players"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "last_name"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "field": "player_id",
        "operator": "IN",
        "value": {
          "operation": "intersection",
          "left": {
            "operation": "projection",
            "attributes": [
              "winner_id"
            ],
            "input": {
              "operation": "selection",
              "condition": {
                "field": "year",
                "operator": "=",
                "value": 2013
              },
              "input": {
                "type": "table",
                "name": "matches"
              }
            }
          },
          "right": {
            "operation": "projection",
            "attributes": [
              "winner_id"
            ],
            "input": {
              "operation": "selection",
              "condition": {
                "field": "year",
                "operator": "=",
                "value": 2016
              },
              "input": {
                "type": "table",
                "name": "matches"
              }
            }
          }
        }
      },
      "input": {
        "type": "table",
        "name": "players"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "*"
      }
    ],
    "input": {
      "operation": "selection",
      "condition": "year = 2013 OR year = 2016",
      "input": {
        "type": "table",
        "name": "matches"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "*"
      }
    ],
    "input": {
      "operation": "union",
      "inputs": [
        {
          "operation": "selection",
          "condition": "year = 2013",
          "input": {
            "type": "table",
            "name": "matches"
          }
        },
        {
          "operation": "selection",
          "condition": "year = 2016",
          "input": {
            "type": "table",
            "name": "matches"
          }
        }
      ]
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "country_code",
      "first_name"
    ],
    "input": {
      "operation": "join",
      "condition": "Common_winners.winner_id = players.player_id",
      "left": {
        "operation": "intersection",
        "left": {
          "operation": "projection",
          "attributes": [
            "winner_id"
          ],
          "input": {
            "operation": "selection",
            "condition": "tourney_name = 'WTA Championships'",
            "input": {
              "type": "table",
              "name": "matches"
            }
          }
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "winner_id"
          ],
          "input": {
            "operation": "selection",
            "condition": "tourney_name = 'Australian Open'",
            "input": {
              "type": "table",
              "name": "matches"
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "players"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "country_code"
    ],
    "input": {
      "operation": "join",
      "condition": "winner_id = player_id",
      "left": {
        "operation": "intersection",
        "inputs": [
          {
            "operation": "projection",
            "attributes": [
              "winner_id"
            ],
            "input": {
              "operation": "selection",
              "condition": "tourney_name = 'Australian Open'",
              "input": {
                "type": "table",
                "name": "matches"
              }
            }
          },
          {
            "operation": "projection",
            "attributes": [
              "winner_id"
            ],
            "input": {
              "operation": "selection",
              "condition": "tourney_name = 'WTA Championships'",
              "input": {
                "type": "table",
                "name": "matches"
              }
            }
          }
        ]
      },
      "right": {
        "type": "table",
        "name": "players"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "country_code"
    ],
    "input": {
      "operation": "selection",
      "condition": "birth_date = min(birth_date)",
      "input": {
        "type": "table",
        "name": "players"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "country_code"
    ],
    "input": {
      "operation": "selection",
      "condition": "r.player_id = players.player_id",
      "input": {
        "operation": "cartesian_product",
        "left": {
          "type": "table",
          "name": "players"
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "player_id"
          ],
          "input": {
            "operation": "selection",
            "condition": "ranking_date = (\u03c3min(ranking_date) \u2192 rd \u03c1r \u2192 rankings)",
            "input": {
              "operation": "rename",
              "new_name": "r",
              "input": {
                "type": "table",
                "name": "rankings"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "last_name",
      "birth_date"
    ],
    "input": {
      "operation": "extension",
      "order_by": {
        "attributes": [
          "birth_date"
        ],
        "order": "asc"
      },
      "input": {
        "operation": "selection",
        "condition": "true",
        "input": {
          "type": "table",
          "name": "players"
        }
      }
    }
  },
  {
    "operation": "extension",
    "order_by": {
      "attributes": [
        "birth_date"
      ],
      "order": "asc"
    },
    "input": {
      "operation": "projection",
      "attributes": [
        "first_name",
        "last_name",
        "birth_date"
      ],
      "input": {
        "operation": "selection",
        "condition": "true",
        "input": {
          "type": "table",
          "name": "players"
        }
      }
    }
  },
  {
    "operation": "extension",
    "order_by": {
      "attributes": [
        "birth_date"
      ],
      "order": "asc"
    },
    "input": {
      "operation": "projection",
      "attributes": [
        "first_name",
        "last_name",
        "birth_date"
      ],
      "input": {
        "operation": "selection",
        "condition": "hand = 'L'",
        "input": {
          "type": "table",
          "name": "players"
        }
      }
    }
  },
  {
    "operation": "extension",
    "order_by": {
      "attributes": [
        "birth_date"
      ],
      "order": "asc"
    },
    "input": {
      "operation": "projection",
      "attributes": [
        "last_name",
        "birth_date"
      ],
      "input": {
        "operation": "selection",
        "condition": "hand = 'left'",
        "input": {
          "type": "table",
          "name": "players"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "country_code"
    ],
    "input": {
      "operation": "join",
      "condition": "players.player_id = maxTours.player_id",
      "left": {
        "type": "table",
        "name": "players"
      },
      "right": {
        "operation": "selection",
        "condition": "tour_count = MAX(tour_count)",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "player_id"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "tours",
              "alias": "tour_count"
            }
          ],
          "input": {
            "operation": "projection",
            "attributes": [
              "player_id"
            ],
            "input": {
              "operation": "selection",
              "condition": "ranking_date != NULL",
              "input": {
                "type": "table",
                "name": "rankings"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "country_code"
    ],
    "input": {
      "operation": "join",
      "condition": "players.player_id = MaxTourCount.player_id",
      "left": {
        "operation": "table",
        "name": "players"
      },
      "right": {
        "operation": "selection",
        "condition": "tour_count = (max(tour_count))",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "player_id"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "*",
              "alias": "tour_count"
            }
          ],
          "input": {
            "operation": "table",
            "name": "rankings"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "year"
    ],
    "input": {
      "operation": "selection",
      "condition": "match_count = max_count",
      "input": {
        "operation": "cartesian_product",
        "left": {
          "operation": "aggregation",
          "group_by": [
            "year"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "*",
              "alias": "match_count"
            }
          ],
          "input": {
            "type": "table",
            "name": "matches"
          }
        },
        "right": {
          "operation": "aggregation",
          "group_by": [],
          "aggregates": [
            {
              "type": "max",
              "field": "match_count",
              "alias": "max_count"
            }
          ],
          "input": {
            "operation": "aggregation",
            "group_by": [
              "year"
            ],
            "aggregates": [
              {
                "type": "count",
                "field": "*",
                "alias": "match_count"
              }
            ],
            "input": {
              "type": "table",
              "name": "matches"
            }
          }
        }
      }
    }
  },
  {
    "operation": "selection",
    "condition": "num_matches = MaxNumMatches",
    "input": {
      "operation": "projection",
      "attributes": [
        "max(num_matches)"
      ],
      "input": {
        "operation": "aggregation",
        "group_by": [
          "year"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "match_num",
            "alias": "num_matches"
          }
        ],
        "input": {
          "type": "table",
          "name": "matches"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "winner_name",
      "winner_rank_points"
    ],
    "input": {
      "operation": "selection",
      "condition": "win_count = max_win_count",
      "input": {
        "operation": "extension",
        "attributes": [
          "max(win_count)"
        ],
        "input": {
          "operation": "aggregation",
          "group_by": [
            "winner_id",
            "winner_name",
            "winner_rank_points"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "*",
              "alias": "win_count"
            }
          ],
          "input": {
            "operation": "projection",
            "attributes": [
              "winner_name",
              "winner_rank_points",
              "winner_id"
            ],
            "input": {
              "operation": "selection",
              "condition": "matches.winner_id = players.player_id",
              "input": {
                "operation": "cartesian_product",
                "left": {
                  "type": "table",
                  "name": "matches"
                },
                "right": {
                  "type": "table",
                  "name": "players"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "last_name",
      "ranking_points"
    ],
    "input": {
      "operation": "join",
      "condition": "WinnerName.winner_id = rankings.player_id",
      "left": {
        "operation": "projection",
        "attributes": [
          "maxWins.winner_id",
          "first_name",
          "last_name",
          "win_count"
        ],
        "input": {
          "operation": "join",
          "condition": "MaxWins.winner_id = players.player_id",
          "left": {
            "operation": "selection",
            "condition": "win_count = (Max(win_count))",
            "input": {
              "operation": "aggregation",
              "group_by": [
                "winner_id"
              ],
              "aggregates": [
                {
                  "type": "count",
                  "field": "*",
                  "alias": "win_count"
                }
              ],
              "input": {
                "type": "table",
                "name": "matches"
              }
            }
          },
          "right": {
            "type": "table",
            "name": "players"
          }
        }
      },
      "right": {
        "type": "table",
        "name": "rankings"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "last_name"
    ],
    "input": {
      "operation": "selection",
      "condition": "winner_id = player_id",
      "input": {
        "operation": "join",
        "left": {
          "type": "table",
          "name": "players"
        },
        "right": {
          "operation": "selection",
          "condition": "winner_rank_points = MAX(winner_rank_points)",
          "input": {
            "operation": "selection",
            "condition": "tourney_name = 'Australian Open'",
            "input": {
              "type": "table",
              "name": "matches"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "winner_name"
    ],
    "input": {
      "operation": "selection",
      "condition": "ranking_points = MAX(ranking_points)",
      "input": {
        "operation": "projection",
        "attributes": [
          "winner_name",
          "ranking_points"
        ],
        "input": {
          "operation": "join",
          "condition": "players.player_id = rankings.player_id",
          "left": {
            "operation": "join",
            "condition": "matches.winner_id = players.player_id",
            "left": {
              "operation": "selection",
              "condition": "tourney_name = 'Australian Open'",
              "input": {
                "type": "table",
                "name": "matches"
              }
            },
            "right": {
              "type": "table",
              "name": "players"
            }
          },
          "right": {
            "type": "table",
            "name": "rankings"
          }
        }
      }
    }
  },
  {
    "operation": "union",
    "input1": {
      "operation": "projection",
      "attributes": [
        "players.first_name",
        "players.last_name"
      ],
      "input": {
        "operation": "join",
        "condition": "W_max.winner_id = players.player_id",
        "left": {
          "operation": "rename",
          "new_name": "W_max",
          "input": {
            "operation": "selection",
            "condition": "minutes = max(minutes)",
            "input": {
              "type": "table",
              "name": "matches"
            }
          }
        },
        "right": {
          "type": "table",
          "name": "players"
        }
      }
    },
    "input2": {
      "operation": "projection",
      "attributes": [
        "players.first_name",
        "players.last_name"
      ],
      "input": {
        "operation": "join",
        "condition": "W_max.loser_id = players.player_id",
        "left": {
          "operation": "rename",
          "new_name": "W_max",
          "input": {
            "operation": "selection",
            "condition": "minutes = max(minutes)",
            "input": {
              "type": "table",
              "name": "matches"
            }
          }
        },
        "right": {
          "type": "table",
          "name": "players"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "p1.first_name",
      "p1.last_name",
      "p2.first_name",
      "p2.last_name"
    ],
    "input": {
      "operation": "join",
      "condition": "LongestMatch.loser_id = p2.player_id",
      "left": {
        "operation": "join",
        "condition": "LongestMatch.winner_id = players.player_id",
        "left": {
          "operation": "aggregation",
          "group_by": [],
          "aggregates": [
            {
              "type": "max",
              "field": "minutes",
              "as": "max_minutes"
            }
          ],
          "input": {
            "operation": "rename",
            "name": "m1",
            "input": {
              "type": "table",
              "name": "matches"
            }
          }
        },
        "right": {
          "type": "table",
          "name": "players"
        }
      },
      "right": {
        "operation": "rename",
        "alias": "p2",
        "input": {
          "type": "table",
          "name": "players"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "player_id",
      "first_name"
    ],
    "aggregates": [
      {
        "type": "avg",
        "field": "ranking",
        "alias": "avg_ranking"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "ranking",
        "player_id",
        "first_name"
      ],
      "input": {
        "operation": "selection",
        "condition": "rankings.player_id = players.player_id",
        "input": {
          "operation": "cartesian_product",
          "left": {
            "type": "table",
            "name": "rankings"
          },
          "right": {
            "type": "table",
            "name": "players"
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "first_name"
    ],
    "aggregates": [
      {
        "type": "average",
        "field": "ranking"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "first_name",
        "ranking"
      ],
      "input": {
        "operation": "join",
        "condition": "players.player_id = rankings.player_id",
        "left": {
          "type": "table",
          "name": "players"
        },
        "right": {
          "type": "table",
          "name": "rankings"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "players.player_id",
      "players.first_name"
    ],
    "aggregates": [
      {
        "type": "sum",
        "field": "rankings.ranking_points",
        "alias": "total_ranking_points"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "players.player_id",
        "players.first_name",
        "rankings.ranking_points"
      ],
      "input": {
        "operation": "join",
        "condition": "rankings.player_id = players.player_id",
        "left": {
          "type": "table",
          "name": "rankings"
        },
        "right": {
          "type": "table",
          "name": "players"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "total_ranking_points"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "first_name"
      ],
      "aggregates": [
        {
          "type": "sum",
          "field": "ranking_points",
          "as": "total_ranking_points"
        }
      ],
      "input": {
        "operation": "join",
        "condition": "players.player_id = rankings.player_id",
        "left": {
          "operation": "projection",
          "attributes": [
            "first_name",
            "player_id"
          ],
          "input": {
            "type": "table",
            "name": "players"
          }
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "player_id",
            "ranking_points"
          ],
          "input": {
            "type": "table",
            "name": "rankings"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "country_code",
      "num_players"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "country_code"
      ],
      "aggregates": [
        {
          "type": "count",
          "field": "player_id",
          "alias": "num_players"
        }
      ],
      "input": {
        "operation": "table",
        "name": "players"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "country_code"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "player_id",
        "alias": "num_players"
      }
    ],
    "input": {
      "type": "table",
      "name": "players"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "country_code"
    ],
    "input": {
      "operation": "selection",
      "condition": "player_count = max_count",
      "input": {
        "operation": "cartesian_product",
        "left": {
          "operation": "aggregation",
          "group_by": [
            "country_code"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "player_id",
              "alias": "player_count"
            }
          ],
          "input": {
            "type": "table",
            "name": "players"
          }
        },
        "right": {
          "operation": "aggregation",
          "aggregates": [
            {
              "type": "max",
              "field": "player_count",
              "alias": "max_count"
            }
          ],
          "input": {
            "operation": "aggregation",
            "group_by": [
              "country_code"
            ],
            "aggregates": [
              {
                "type": "count",
                "field": "player_id",
                "alias": "player_count"
              }
            ],
            "input": {
              "type": "table",
              "name": "players"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "country_code"
    ],
    "input": {
      "operation": "selection",
      "condition": "count_of_players = MaxCount.max_count",
      "input": {
        "operation": "cartesian_product",
        "left": {
          "operation": "aggregation",
          "group_by": [
            "country_code"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "player_id",
              "as": "count_of_players"
            }
          ],
          "input": {
            "type": "table",
            "name": "players"
          }
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "max_count"
          ],
          "input": {
            "operation": "aggregation",
            "aggregates": [
              {
                "type": "max",
                "field": "count_of_players",
                "as": "max_count"
              }
            ],
            "input": {
              "operation": "aggregation",
              "group_by": [
                "country_code"
              ],
              "aggregates": [
                {
                  "type": "count",
                  "field": "player_id",
                  "as": "count_of_players"
                }
              ],
              "input": {
                "type": "table",
                "name": "players"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "country_code"
    ],
    "input": {
      "operation": "selection",
      "condition": "country_count > 50",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "country_code"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "player_id",
            "alias": "country_count"
          }
        ],
        "input": {
          "type": "table",
          "name": "players"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "country_code"
    ],
    "input": {
      "operation": "selection",
      "condition": "num_players > 50",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "country_code"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "player_id",
            "as": "num_players"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "country_code",
            "player_id"
          ],
          "input": {
            "type": "table",
            "name": "players"
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "ranking_date"
    ],
    "aggregates": [
      {
        "type": "sum",
        "field": "tours",
        "alias": "total_tours"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "ranking_date",
        "tours"
      ],
      "input": {
        "type": "table",
        "name": "rankings"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "ranking_date"
    ],
    "aggregates": [
      {
        "type": "sum",
        "field": "tours",
        "alias": "total_tours"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "ranking_date",
        "tours"
      ],
      "input": {
        "type": "table",
        "name": "rankings"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "year",
      "num_matches"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "year"
      ],
      "aggregates": [
        {
          "type": "count",
          "field": "match_num",
          "alias": "num_matches"
        }
      ],
      "input": {
        "type": "table",
        "name": "matches"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "year",
      "num_matches"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "year"
      ],
      "aggregates": [
        {
          "type": "count",
          "field": "match_num",
          "alias": "num_matches"
        }
      ],
      "input": {
        "type": "table",
        "name": "matches"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "winner_rank"
    ],
    "input": {
      "operation": "extension",
      "order_by": {
        "attributes": [
          "winner_age"
        ],
        "order": "asc",
        "limit": 3
      },
      "input": {
        "operation": "join",
        "condition": "winner_id = player_id",
        "left": {
          "operation": "selection",
          "condition": "true",
          "input": {
            "operation": "projection",
            "attributes": [
              "winner_id",
              "winner_age",
              "winner_rank"
            ],
            "input": {
              "type": "table",
              "name": "Matches"
            }
          }
        },
        "right": {
          "operation": "extension",
          "attributes": [
            {
              "name": "name",
              "expression": "first_name || ' ' || last_name"
            }
          ],
          "input": {
            "type": "table",
            "name": "Players"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "winner_name",
      "winner_rank"
    ],
    "input": {
      "operation": "extension",
      "order_by": {
        "attributes": [
          "winner_age"
        ],
        "order": "asc"
      },
      "top": 3,
      "input": {
        "operation": "projection",
        "attributes": [
          "winner_id",
          "winner_age",
          "winner_name",
          "winner_rank",
          "birth_date"
        ],
        "input": {
          "operation": "selection",
          "condition": "matches.winner_id = players.player_id",
          "input": {
            "operation": "cartesian_product",
            "left": {
              "type": "table",
              "name": "matches"
            },
            "right": {
              "type": "table",
              "name": "players"
            }
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "winner_id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "winner_id"
      ],
      "input": {
        "operation": "selection",
        "condition": "winner_hand = 'L'",
        "input": {
          "operation": "selection",
          "condition": "tourney_name = 'WTA Championships'",
          "input": {
            "type": "table",
            "name": "matches"
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "winner_id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "winner_id"
      ],
      "input": {
        "operation": "join",
        "condition": "matches.winner_id = players.player_id",
        "left": {
          "operation": "selection",
          "condition": "tourney_name = 'WTA Championships'",
          "input": {
            "type": "table",
            "name": "matches"
          }
        },
        "right": {
          "operation": "selection",
          "condition": "hand = 'L'",
          "input": {
            "type": "table",
            "name": "players"
          }
        }
      }
    },
    "distinct": true
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "country_code",
      "birth_date"
    ],
    "input": {
      "operation": "join",
      "condition": "winner_id = player_id",
      "left": {
        "operation": "selection",
        "condition": "winner_rank_points = MaxPoints",
        "input": {
          "operation": "aggregation",
          "group_by": [],
          "aggregates": [
            {
              "type": "max",
              "field": "winner_rank_points"
            }
          ],
          "input": {
            "type": "table",
            "name": "matches"
          }
        }
      },
      "right": {
        "type": "table",
        "name": "players"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "country_code",
      "birth_date"
    ],
    "input": {
      "operation": "selection",
      "condition": "total_winner_rank_points = MAXPoints",
      "input": {
        "operation": "join",
        "condition": "TotalWinnerPoints.winner_id = players.player_id",
        "left": {
          "operation": "rename",
          "new_name": "TotalWinnerPoints",
          "input": {
            "operation": "aggregation",
            "group_by": [
              "winner_id"
            ],
            "aggregates": [
              {
                "type": "sum",
                "field": "winner_rank_points",
                "as": "total_winner_rank_points"
              }
            ],
            "input": {
              "type": "table",
              "name": "matches"
            }
          }
        },
        "right": {
          "type": "table",
          "name": "players"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "hand"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "player_id",
        "alias": "number_of_players"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "hand",
        "player_id"
      ],
      "input": {
        "type": "table",
        "name": "players"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "hand"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "player_id",
        "as": "player_count"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "hand",
        "player_id"
      ],
      "input": {
        "type": "table",
        "name": "players"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "id"
      ],
      "input": {
        "operation": "selection",
        "condition": "disposition_of_ship = 'Captured'",
        "input": {
          "type": "table",
          "name": "ship"
        }
      }
    }
  },
  {
    "operation": "extension",
    "order_by": {
      "attributes": [
        "name"
      ],
      "order": "desc"
    },
    "input": {
      "operation": "projection",
      "attributes": [
        "name",
        "tonnage"
      ],
      "input": {
        "type": "table",
        "name": "ship"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "date",
      "result"
    ],
    "input": {
      "type": "table",
      "name": "battle"
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "battle_id"
    ],
    "aggregates": [
      {
        "type": "max",
        "field": "killed",
        "as": "max_killed"
      },
      {
        "type": "min",
        "field": "killed",
        "as": "min_killed"
      }
    ],
    "input": {
      "operation": "join",
      "condition": "caused_by_ship_id = S.id",
      "left": {
        "operation": "projection",
        "attributes": [
          "caused_by_ship_id",
          "killed"
        ],
        "input": {
          "type": "table",
          "name": "D"
        }
      },
      "right": {
        "operation": "join",
        "condition": "lost_in_battle = B.id",
        "left": {
          "type": "table",
          "name": "S"
        },
        "right": {
          "type": "table",
          "name": "B"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "caused_by_ship_id",
      "average_injuries"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "caused_by_ship_id"
      ],
      "aggregates": [
        {
          "type": "sum",
          "field": "total_injuries",
          "alias": "total_injuries"
        },
        {
          "type": "count",
          "field": "*",
          "alias": "incident_count"
        }
      ],
      "input": {
        "operation": "join",
        "condition": "death.caused_by_ship_id = ship.id",
        "left": {
          "type": "table",
          "name": "death"
        },
        "right": {
          "type": "table",
          "name": "ship"
        }
      }
    }
  },
  {
    "operation": "join",
    "condition": "death.caused_by_ship_id = SelectedShip.id",
    "left": {
      "type": "table",
      "name": "death"
    },
    "right": {
      "operation": "rename",
      "new_name": "SelectedShip",
      "input": {
        "operation": "selection",
        "condition": "tonnage = t",
        "input": {
          "type": "table",
          "name": "ship"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "result"
    ],
    "input": {
      "operation": "selection",
      "condition": "bulgarian_commander != 'Boril'",
      "input": {
        "type": "table",
        "name": "battle"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "id",
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "battle_lost_id = id",
      "left": {
        "operation": "rename",
        "new_name": "battle_lost_id",
        "input": {
          "operation": "projection",
          "attributes": [
            "lost_in_battle"
          ],
          "input": {
            "operation": "selection",
            "condition": "ship_type = 'Brig' AND lost_in_battle IS NOT NULL",
            "input": {
              "type": "table",
              "name": "ship"
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "battle"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "id",
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "battles_with_more_than_10_deaths.id = battle.id",
      "left": {
        "operation": "selection",
        "condition": "total_deaths > 10",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "id"
          ],
          "aggregates": [
            {
              "type": "sum",
              "field": "killed",
              "as": "total_deaths"
            }
          ],
          "input": {
            "operation": "table",
            "name": "death"
          }
        }
      },
      "right": {
        "operation": "table",
        "name": "battle"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "id",
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "id = caused_by_ship_id",
      "left": {
        "type": "table",
        "name": "ship"
      },
      "right": {
        "operation": "selection",
        "condition": "total_injuries = (aggregation.max(sum(killed)))",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "caused_by_ship_id"
          ],
          "aggregates": [
            {
              "type": "sum",
              "field": "killed",
              "as": "total_injuries"
            }
          ],
          "input": {
            "operation": "selection",
            "input": {
              "type": "table",
              "name": "death"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "bulgarian_commander = 'Kaloyan' AND latin_commander = 'Baldwin I'",
      "input": {
        "type": "table",
        "name": "battle"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "result"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "result"
      ],
      "input": {
        "operation": "extension",
        "distinct": true,
        "input": {
          "operation": "table",
          "name": "battle"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "id"
      }
    ],
    "input": {
      "operation": "difference",
      "left": {
        "operation": "projection",
        "attributes": [
          "id"
        ],
        "input": {
          "type": "table",
          "name": "battle"
        }
      },
      "right": {
        "operation": "projection",
        "attributes": [
          "lost_in_battle"
        ],
        "input": {
          "operation": "selection",
          "condition": "tonnage = 225",
          "input": {
            "type": "table",
            "name": "ship"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "date"
    ],
    "input": {
      "operation": "selection",
      "condition": "id IN (B_both)",
      "input": {
        "type": "table",
        "name": "battle"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "result",
      "bulgarian_commander"
    ],
    "input": {
      "operation": "selection",
      "conditions": [
        "id IN NoShipLostBattleIds"
      ],
      "input": {
        "operation": "difference",
        "left": {
          "operation": "projection",
          "attributes": [
            "id"
          ],
          "input": {
            "operation": "selection",
            "conditions": [
              "location = 'English Channel'"
            ],
            "input": {
              "type": "table",
              "name": "battle"
            }
          }
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "lost_in_battle"
          ],
          "input": {
            "operation": "join",
            "condition": "ship.lost_in_battle = battle.id",
            "left": {
              "operation": "selection",
              "conditions": [
                "location = 'English Channel'"
              ],
              "input": {
                "type": "table",
                "name": "battle"
              }
            },
            "right": {
              "type": "table",
              "name": "ship"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "note"
    ],
    "input": {
      "operation": "selection",
      "condition": "note LIKE '%East%'",
      "input": {
        "type": "table",
        "name": "Death"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "line1",
      "line2"
    ],
    "input": {
      "type": "table",
      "name": "addresses"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "line_1",
      "line_2"
    ],
    "input": {
      "type": "table",
      "name": "addresses"
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "*",
        "alias": "total_courses"
      }
    ],
    "input": {
      "type": "table",
      "name": "Courses"
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "course_id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "course_id"
      ],
      "input": {
        "type": "table",
        "name": "courses"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "course_description"
    ],
    "input": {
      "operation": "selection",
      "condition": "course_name = 'math'",
      "input": {
        "type": "table",
        "name": "courses"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "course_description"
    ],
    "input": {
      "operation": "selection",
      "condition": "course_name='math'",
      "input": {
        "type": "table",
        "name": "courses"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "zip_postcode"
    ],
    "input": {
      "operation": "selection",
      "condition": "city = 'Port Chelsea'",
      "input": {
        "type": "table",
        "name": "addresses"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "zip_postcode"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "attribute": "city",
        "value": "Port Chelsea",
        "operator": "="
      },
      "input": {
        "type": "table",
        "name": "addresses"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "department_id",
      "department_name"
    ],
    "input": {
      "operation": "selection",
      "condition": "degree_count = max_degrees",
      "input": {
        "operation": "cartesian_product",
        "left": {
          "operation": "aggregation",
          "group_by": [
            "department_id",
            "department_name"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "degree_program_id",
              "as": "degree_count"
            }
          ],
          "input": {
            "operation": "projection",
            "attributes": [
              "department_id",
              "department_name",
              "degree_program_id"
            ],
            "input": {
              "operation": "join",
              "condition": "departments.department_id = degree_programs.department_id",
              "left": {
                "type": "table",
                "name": "departments"
              },
              "right": {
                "type": "table",
                "name": "degree_programs"
              }
            }
          }
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "max(degree_count)"
          ],
          "as": "max_degrees",
          "input": {
            "operation": "aggregation",
            "group_by": [],
            "aggregates": [
              {
                "type": "max",
                "field": "degree_count"
              }
            ],
            "input": {
              "operation": "aggregation",
              "group_by": [
                "department_id"
              ],
              "aggregates": [
                {
                  "type": "count",
                  "field": "degree_program_id",
                  "as": "degree_count"
                }
              ],
              "input": {
                "operation": "projection",
                "attributes": [
                  "department_id",
                  "degree_program_id"
                ],
                "input": {
                  "type": "table",
                  "name": "degree_programs"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "department_id",
      "department_name"
    ],
    "input": {
      "operation": "join",
      "condition": "D2.department_id = departments.department_id",
      "left": {
        "operation": "selection",
        "condition": "degree_count = max(degree_count)",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "department_id"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "degree_program_id",
              "as": "degree_count"
            }
          ],
          "input": {
            "type": "table",
            "name": "degree_programs"
          }
        }
      },
      "right": {
        "type": "table",
        "name": "departments"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "department_id",
        "as": "num_departments"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "department_id"
      ],
      "input": {
        "operation": "selection",
        "condition": "degree_program_id IS NOT NULL",
        "input": {
          "type": "table",
          "name": "degree_programs"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "department_id"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "department_id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "department_id"
      ],
      "input": {
        "operation": "join",
        "condition": "departments.department_id = degree_programs.department_id",
        "left": {
          "type": "table",
          "name": "departments"
        },
        "right": {
          "type": "table",
          "name": "degree_programs"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "degree_summary_name"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "degree_summary_name"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "degree_summary_name"
      ],
      "input": {
        "operation": "selection",
        "condition": "true",
        "input": {
          "type": "table",
          "name": "degree_programs"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "degree_summary_name"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "degree_summary_name"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "degree_summary_name"
      ],
      "input": {
        "type": "table",
        "name": "degree_programs"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "degree_program_id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "degree_program_id"
      ],
      "input": {
        "operation": "join",
        "condition": "department_id",
        "left": {
          "operation": "selection",
          "condition": "department_name = 'Engineering'",
          "input": {
            "type": "table",
            "name": "departments"
          }
        },
        "right": {
          "type": "table",
          "name": "degree_programs"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "degree_program_id"
      }
    ],
    "input": {
      "operation": "join",
      "condition": "departments.department_id = degree_programs.department_id",
      "left": {
        "operation": "selection",
        "condition": "department_name = 'Engineering'",
        "input": {
          "type": "table",
          "name": "departments"
        }
      },
      "right": {
        "type": "table",
        "name": "degree_programs"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "section_name",
      "section_description"
    ],
    "input": {
      "type": "table",
      "name": "sections"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "section_name",
      "section_description"
    ],
    "input": {
      "type": "table",
      "name": "sections"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "course_id",
      "course_name"
    ],
    "input": {
      "operation": "selection",
      "condition": "SectionCount <= 2",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "course_id",
          "course_name"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "section_id",
            "as": "SectionCount"
          }
        ],
        "input": {
          "operation": "join",
          "condition": "courses.course_id = sections.course_id",
          "left": {
            "operation": "projection",
            "attributes": [
              "course_id",
              "course_name"
            ],
            "input": {
              "type": "table",
              "name": "courses"
            }
          },
          "right": {
            "operation": "projection",
            "attributes": [
              "course_id",
              "section_id"
            ],
            "input": {
              "type": "table",
              "name": "sections"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "course_id",
      "course_name"
    ],
    "input": {
      "operation": "join",
      "condition": "courses.course_id = FewerSections.course_id",
      "left": {
        "operation": "aggregation",
        "group_by": [
          "course_id"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "section_id",
            "alias": "num_sections"
          }
        ],
        "input": {
          "type": "table",
          "name": "sections"
        }
      },
      "right": {
        "operation": "selection",
        "condition": "num_sections < 2",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "course_id"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "section_id",
              "alias": "num_sections"
            }
          ],
          "input": {
            "type": "table",
            "name": "sections"
          }
        }
      }
    }
  },
  {
    "operation": "extension",
    "order_by": {
      "attributes": [
        "section_name"
      ],
      "order": "desc"
    },
    "input": {
      "operation": "projection",
      "attributes": [
        "section_name"
      ],
      "input": {
        "type": "table",
        "name": "sections"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "section_name"
    ],
    "input": {
      "operation": "extension",
      "order_by": {
        "attributes": [
          "section_name"
        ],
        "order": "desc"
      },
      "input": {
        "type": "table",
        "name": "sections"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "semester_id",
      "semester_name"
    ],
    "input": {
      "operation": "selection",
      "condition": "student_count = MaxStudentCount.max(student_count)",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "semester_id",
          "semester_name"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "student_id",
            "alias": "student_count"
          }
        ],
        "input": {
          "operation": "join",
          "condition": "student_enrolment.semester_id = semesters.semester_id",
          "left": {
            "type": "table",
            "name": "student_enrolment"
          },
          "right": {
            "type": "table",
            "name": "semesters"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "SID",
      "semester_name"
    ],
    "input": {
      "operation": "join",
      "condition": "SemWithMaxRegistration.SID = semesters.semester_id",
      "left": {
        "operation": "join",
        "condition": "(RegCountSem.SID = MaxRegCountSem.SID) AND (RegCountSem.SCount = MaxRegCountSem.MaxSCount)",
        "left": {
          "operation": "aggregation",
          "group_by": [
            "semester_id"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "student_id",
              "alias": "SCount"
            }
          ],
          "input": {
            "operation": "join",
            "condition": "student_enrolment.semester_id = semesters.semester_id",
            "left": {
              "type": "table",
              "name": "student_enrolment"
            },
            "right": {
              "type": "table",
              "name": "semesters"
            }
          }
        },
        "right": {
          "operation": "aggregation",
          "group_by": [
            "semester_id"
          ],
          "aggregates": [
            {
              "type": "max",
              "field": "SCount",
              "alias": "MaxSCount"
            }
          ],
          "input": {
            "type": "table",
            "name": "RegCountSem"
          }
        }
      },
      "right": {
        "type": "table",
        "name": "semesters"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "department_description"
    ],
    "input": {
      "operation": "selection",
      "condition": "department_name LIKE '%the computer%'",
      "input": {
        "type": "table",
        "name": "departments"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "department_description"
    ],
    "input": {
      "operation": "selection",
      "condition": "department_name LIKE '%computer%'",
      "input": {
        "type": "table",
        "name": "departments"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "student_id",
      "first_name",
      "middle_name",
      "last_name"
    ],
    "input": {
      "operation": "join",
      "condition": "E3.student_id = students.student_id",
      "left": {
        "operation": "projection",
        "attributes": [
          "student_id"
        ],
        "input": {
          "operation": "selection",
          "condition": "E1.student_id = E1'.student_id AND E1.semester_id = E1'.semester_id AND E1.degree_program_id != E1'.degree_program_id",
          "input": {
            "operation": "join",
            "left": {
              "operation": "projection",
              "attributes": [
                "student_id",
                "semester_id",
                "degree_program_id"
              ],
              "input": {
                "type": "table",
                "name": "student_enrolment"
              }
            },
            "right": {
              "operation": "projection",
              "attributes": [
                "student_id",
                "semester_id",
                "degree_program_id"
              ],
              "input": {
                "type": "table",
                "name": "student_enrolment"
              }
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "students"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "student_id",
      "first_name",
      "middle_name",
      "last_name"
    ],
    "input": {
      "operation": "join",
      "condition": "E2.student_id = students.student_id",
      "left": {
        "operation": "selection",
        "condition": "count_degree_program_id = 2",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "student_id",
            "semester_id"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "degree_program_id",
              "alias": "count_degree_program_id"
            }
          ],
          "input": {
            "operation": "join",
            "condition": "student_enrolment.student_id = students.student_id",
            "left": {
              "type": "table",
              "name": "student_enrolment"
            },
            "right": {
              "type": "table",
              "name": "students"
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "students"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "middle_name",
      "last_name"
    ],
    "input": {
      "operation": "join",
      "condition": "student_id",
      "left": {
        "operation": "join",
        "condition": "degree_program_id",
        "left": {
          "operation": "selection",
          "condition": "degree_summary_name = 'Bachelor'",
          "input": {
            "type": "table",
            "name": "degree_programs"
          }
        },
        "right": {
          "type": "table",
          "name": "student_enrolment"
        }
      },
      "right": {
        "type": "table",
        "name": "students"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "middle_name",
      "last_name"
    ],
    "input": {
      "operation": "selection",
      "condition": "degree_summary_name='Bachelors'",
      "input": {
        "operation": "join",
        "condition": "student_id=student_id",
        "left": {
          "operation": "join",
          "condition": "degree_program_id=degree_program_id",
          "left": {
            "type": "table",
            "name": "degree_programs"
          },
          "right": {
            "type": "table",
            "name": "student_enrolment"
          }
        },
        "right": {
          "type": "table",
          "name": "students"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "degree_program_id",
      "degree_summary_name",
      "degree_summary_description",
      "num_students"
    ],
    "input": {
      "operation": "join",
      "condition": "DegreeMaxEnrollment.degree_program_id = degree_programs.degree_program_id",
      "left": {
        "operation": "join",
        "condition": "CountEnrollment.num_students = MaxEnrollment.max_students",
        "left": {
          "type": "aggregation",
          "group_by": [],
          "aggregates": [
            {
              "type": "max",
              "field": "num_students",
              "as": "max_students"
            }
          ],
          "input": {
            "operation": "aggregation",
            "group_by": [
              "degree_program_id"
            ],
            "aggregates": [
              {
                "type": "count",
                "field": "student_id",
                "as": "num_students"
              }
            ],
            "input": {
              "operation": "projection",
              "attributes": [
                "degree_program_id",
                "student_id"
              ],
              "input": {
                "operation": "join",
                "condition": "student_enrolment.degree_program_id = degree_programs.degree_program_id",
                "left": {
                  "type": "table",
                  "name": "student_enrolment"
                },
                "right": {
                  "type": "table",
                  "name": "degree_programs"
                }
              }
            }
          }
        },
        "right": {
          "operation": "aggregation",
          "group_by": [],
          "aggregates": [
            {
              "type": "max",
              "field": "num_students",
              "as": "max_students"
            }
          ],
          "input": {
            "operation": "aggregation",
            "group_by": [
              "degree_program_id"
            ],
            "aggregates": [
              {
                "type": "count",
                "field": "student_id",
                "as": "num_students"
              }
            ],
            "input": {
              "operation": "projection",
              "attributes": [
                "degree_program_id",
                "student_id"
              ],
              "input": {
                "operation": "join",
                "condition": "student_enrolment.degree_program_id = degree_programs.degree_program_id",
                "left": {
                  "type": "table",
                  "name": "student_enrolment"
                },
                "right": {
                  "type": "table",
                  "name": "degree_programs"
                }
              }
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "degree_programs"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "degree_summary_name"
    ],
    "input": {
      "operation": "join",
      "condition": "degree_programs.degree_program_id = MaxCount.degree_program_id",
      "left": {
        "type": "table",
        "name": "degree_programs"
      },
      "right": {
        "operation": "selection",
        "condition": "num_students = max(num_students)",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "degree_program_id"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "student_id",
              "as": "num_students"
            }
          ],
          "input": {
            "operation": "projection",
            "attributes": [
              "student_id",
              "degree_program_id"
            ],
            "input": {
              "operation": "selection",
              "condition": "students.student_id = student_enrolment.student_id",
              "input": {
                "operation": "cartesian_product",
                "left": {
                  "type": "table",
                  "name": "students"
                },
                "right": {
                  "type": "table",
                  "name": "student_enrolment"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "degree_program_id",
      "degree_summary_name"
    ],
    "input": {
      "operation": "join",
      "condition": "max_num.degree_program_id = degree_programs.degree_program_id",
      "left": {
        "operation": "selection",
        "condition": "num_students = Max(num_students)",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "degree_program_id"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "student_id",
              "as": "num_students"
            }
          ],
          "input": {
            "type": "table",
            "name": "student_enrolment"
          }
        }
      },
      "right": {
        "type": "table",
        "name": "degree_programs"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "degree_program_id",
      "degree_summary_name",
      "degree_summary_description"
    ],
    "input": {
      "operation": "join",
      "condition": "degree_programs.degree_program_id = D_max.degree_program_id",
      "left": {
        "operation": "extension",
        "order_by": {
          "attributes": [
            "cnt"
          ],
          "order": "desc"
        },
        "input": {
          "operation": "aggregation",
          "group_by": [
            "degree_program_id"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "student_id",
              "alias": "cnt"
            }
          ],
          "input": {
            "operation": "projection",
            "attributes": [
              "degree_program_id",
              "student_id"
            ],
            "input": {
              "type": "table",
              "name": "student_enrolment"
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "degree_programs"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "students.student_id",
      "first_name",
      "middle_name",
      "last_name",
      "num_enrollments",
      "students.student_id"
    ],
    "input": {
      "operation": "join",
      "condition": "TopEnrollees.student_id = students.student_id",
      "left": {
        "operation": "selection",
        "condition": "num_enrollments = max_enrollments",
        "input": {
          "operation": "cartesian_product",
          "left": {
            "operation": "aggregation",
            "group_by": [
              "student_id"
            ],
            "aggregates": [
              {
                "type": "count",
                "field": "student_enrolment_id",
                "alias": "num_enrollments"
              }
            ],
            "input": {
              "type": "table",
              "name": "student_enrolment"
            }
          },
          "right": {
            "operation": "aggregation",
            "aggregates": [
              {
                "type": "max",
                "field": "num_enrollments",
                "alias": "max_enrollments"
              }
            ],
            "input": {
              "type": "operation",
              "name": "CountEnrollments"
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "students"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "student_id",
      "first_name",
      "middle_name",
      "last_name",
      "enroll_count"
    ],
    "input": {
      "operation": "selection",
      "condition": "enroll_count = max_enroll_count.max_enroll_count",
      "input": {
        "operation": "cartesian_product",
        "left": {
          "operation": "aggregation",
          "group_by": [
            "student_id",
            "first_name",
            "middle_name",
            "last_name"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "student_enrolment_id",
              "alias": "enroll_count"
            }
          ],
          "input": {
            "operation": "projection",
            "attributes": [
              "student_id",
              "first_name",
              "middle_name",
              "last_name",
              "student_enrolment_id"
            ],
            "input": {
              "operation": "selection",
              "condition": "student_enrolment.student_id = students.student_id",
              "input": {
                "operation": "cartesian_product",
                "left": {
                  "type": "table",
                  "name": "students"
                },
                "right": {
                  "type": "table",
                  "name": "student_enrolment"
                }
              }
            }
          }
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "max_enroll_count"
          ],
          "input": {
            "operation": "aggregation",
            "aggregates": [
              {
                "type": "max",
                "field": "enroll_count",
                "alias": "max_enroll_count"
              }
            ],
            "input": {
              "operation": "aggregation",
              "group_by": [
                "student_id",
                "first_name",
                "middle_name",
                "last_name"
              ],
              "aggregates": [
                {
                  "type": "count",
                  "field": "student_enrolment_id",
                  "alias": "enroll_count"
                }
              ],
              "input": {
                "operation": "projection",
                "attributes": [
                  "student_id",
                  "first_name",
                  "middle_name",
                  "last_name",
                  "student_enrolment_id"
                ],
                "input": {
                  "operation": "selection",
                  "condition": "student_enrolment.student_id = students.student_id",
                  "input": {
                    "operation": "cartesian_product",
                    "left": {
                      "type": "table",
                      "name": "students"
                    },
                    "right": {
                      "type": "table",
                      "name": "student_enrolment"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "semester_name"
    ],
    "input": {
      "operation": "difference",
      "left": {
        "operation": "projection",
        "attributes": [
          "semester_id",
          "semester_name"
        ],
        "input": {
          "type": "table",
          "name": "semesters"
        }
      },
      "right": {
        "operation": "projection",
        "attributes": [
          "semester_id",
          "semester_name"
        ],
        "input": {
          "operation": "join",
          "condition": "student_enrolment.semester_id = semesters.semester_id",
          "left": {
            "type": "table",
            "name": "student_enrolment"
          },
          "right": {
            "type": "table",
            "name": "semesters"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "semester_name"
    ],
    "input": {
      "operation": "selection",
      "condition": "semester_id IN (SELECT semester_id FROM semesters MINUS SELECT semester_id FROM student_enrolment)",
      "input": {
        "operation": "table",
        "name": "semesters"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "course_name"
    ],
    "input": {
      "operation": "join",
      "condition": "E1.course_id = courses.course_id",
      "left": {
        "operation": "join",
        "condition": "student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id",
        "left": {
          "operation": "cartesian_product",
          "left": {
            "type": "table",
            "name": "student_enrolment_courses"
          },
          "right": {
            "type": "table",
            "name": "student_enrolment"
          }
        },
        "right": {
          "type": "table",
          "name": "student"
        }
      },
      "right": {
        "type": "table",
        "name": "courses"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "course_name"
    ],
    "input": {
      "operation": "join",
      "condition": "EnrollmentCourseStudent.course_id = courses.course_id",
      "input": {
        "operation": "join",
        "condition": "student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id",
        "left": {
          "type": "table",
          "name": "student_enrolment_courses"
        },
        "right": {
          "type": "table",
          "name": "student_enrolment"
        }
      },
      "right": {
        "type": "table",
        "name": "courses"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "course_name"
    ],
    "input": {
      "operation": "join",
      "condition": "COUNT_EC.course_id = courses.course_id",
      "left": {
        "operation": "selection",
        "condition": "enrollment_count = MAX(enrollment_count)",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "course_id"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "student_enrolment_id",
              "alias": "enrollment_count"
            }
          ],
          "input": {
            "type": "table",
            "name": "student_enrolment_courses"
          }
        }
      },
      "right": {
        "type": "table",
        "name": "courses"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "course_name"
    ],
    "input": {
      "operation": "join",
      "condition": "most_enrolled_courses.course_id = courses.course_id",
      "left": {
        "operation": "selection",
        "condition": "num_students = max_students",
        "input": {
          "operation": "cartesian_product",
          "left": {
            "operation": "aggregation",
            "group_by": [
              "course_id"
            ],
            "aggregates": [
              {
                "type": "count",
                "field": "student_id",
                "alias": "num_students"
              }
            ],
            "input": {
              "type": "table",
              "name": "enrollments"
            }
          },
          "right": {
            "operation": "aggregation",
            "aggregates": [
              {
                "type": "max",
                "field": "num_students",
                "alias": "max_students"
              }
            ],
            "input": {
              "operation": "aggregation",
              "group_by": [
                "course_id"
              ],
              "aggregates": [
                {
                  "type": "count",
                  "field": "student_id",
                  "alias": "num_students"
                }
              ],
              "input": {
                "type": "table",
                "name": "enrollments"
              }
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "courses"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "last_name"
    ],
    "input": {
      "operation": "join",
      "condition": "NC_students.student_id = students_not_enrolled.student_id",
      "left": {
        "operation": "projection",
        "attributes": [
          "last_name",
          "student_id"
        ],
        "input": {
          "operation": "selection",
          "condition": "state_province_county = 'North Carolina'",
          "input": {
            "operation": "join",
            "condition": "students.current_address_id = addresses.address_id",
            "left": {
              "type": "table",
              "name": "students"
            },
            "right": {
              "type": "table",
              "name": "addresses"
            }
          }
        }
      },
      "right": {
        "operation": "difference",
        "left": {
          "operation": "projection",
          "attributes": [
            "student_id"
          ],
          "input": {
            "type": "table",
            "name": "students"
          }
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "student_id"
          ],
          "input": {
            "type": "table",
            "name": "student_enrolment"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "last_name"
    ],
    "input": {
      "operation": "difference",
      "left": {
        "operation": "projection",
        "attributes": [
          "student_id",
          "last_name"
        ],
        "input": {
          "operation": "selection",
          "condition": "line_3 = 'North Carolina'",
          "input": {
            "operation": "join",
            "condition": "students.current_address_id = addresses.address_id",
            "left": {
              "type": "table",
              "name": "students"
            },
            "right": {
              "type": "table",
              "name": "addresses"
            }
          }
        }
      },
      "right": {
        "operation": "join",
        "condition": "Enrolled_Students.student_id = NC_Students.student_id",
        "left": {
          "operation": "projection",
          "attributes": [
            "student_id"
          ],
          "input": {
            "type": "table",
            "name": "student_enrolment"
          }
        },
        "right": {
          "type": "intermediate_result",
          "name": "NC_Students"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "transcript_date",
      "transcript_id"
    ],
    "input": {
      "operation": "join",
      "condition": "transcripts.transcript_id = student_enrolment_id",
      "left": {
        "operation": "selection",
        "condition": "course_count >= 2",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "student_enrolment_id"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "course_id",
              "alias": "course_count"
            }
          ],
          "input": {
            "operation": "projection",
            "attributes": [
              "course_id",
              "student_enrolment_id"
            ],
            "input": {
              "type": "table",
              "name": "student_enrolment_courses"
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "transcripts"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "transcript_date",
      "transcript_id"
    ],
    "input": {
      "operation": "selection",
      "condition": "course_count >= 2",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "transcript_id",
          "transcript_date"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "course_id",
            "alias": "course_count"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "transcript_id",
            "transcript_date",
            "student_enrolment_id",
            "course_id"
          ],
          "input": {
            "operation": "join",
            "condition": "TSE.student_enrolment_id = student_enrolment_courses.student_enrolment_id",
            "left": {
              "operation": "projection",
              "attributes": [
                "transcript_id",
                "transcript_date",
                "student_enrolment_id"
              ],
              "input": {
                "operation": "join",
                "condition": "transcripts.transcript_id = student_enrolment.transcript_id",
                "left": {
                  "type": "table",
                  "name": "transcripts"
                },
                "right": {
                  "type": "table",
                  "name": "student_enrolment"
                }
              }
            },
            "right": {
              "type": "table",
              "name": "student_enrolment_courses"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "cell_mobile_number"
    ],
    "input": {
      "operation": "selection",
      "conditions": {
        "first_name": "Timmothy",
        "last_name": "Ward"
      },
      "input": {
        "type": "table",
        "name": "students"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "cell_mobile_number"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "and": [
          {
            "field": "first_name",
            "operator": "=",
            "value": "Timmothy"
          },
          {
            "field": "last_name",
            "operator": "=",
            "value": "Ward"
          }
        ]
      },
      "input": {
        "type": "table",
        "name": "students"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "middle_name",
      "last_name"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "attribute": "date_first_registered",
        "value": {
          "operation": "aggregation",
          "group_by": [],
          "aggregates": [
            {
              "type": "min",
              "field": "date_first_registered"
            }
          ],
          "input": {
            "type": "table",
            "name": "students"
          }
        }
      },
      "input": {
        "type": "table",
        "name": "students"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "middle_name",
      "last_name"
    ],
    "input": {
      "operation": "join",
      "condition": "student_enrolment.student_id = students.student_id",
      "left": {
        "operation": "selection",
        "condition": "student_enrolment_id = (min_id)",
        "input": {
          "operation": "extension",
          "order_by": {
            "attributes": [
              "student_enrolment_id"
            ],
            "order": "asc"
          },
          "input": {
            "operation": "aggregation",
            "group_by": [],
            "aggregates": [
              {
                "type": "min",
                "field": "student_enrolment_id",
                "as": "min_id"
              }
            ],
            "input": {
              "type": "table",
              "name": "student_enrolment"
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "students"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "middle_name",
      "last_name"
    ],
    "input": {
      "operation": "selection",
      "condition": "ProjData.transcript_date = MinDate.transcript_date",
      "input": {
        "operation": "aggregation",
        "aggregates": [
          {
            "type": "min",
            "field": "transcript_date"
          }
        ],
        "group_by": [],
        "input": {
          "operation": "projection",
          "attributes": [
            "first_name",
            "middle_name",
            "last_name",
            "transcript_date"
          ],
          "input": {
            "operation": "join",
            "condition": "Temp2.student_enrolment_id = transcripts.student_enrolment_id",
            "input": {
              "operation": "join",
              "condition": "Temp1.student_enrolment_id = student_enrolment_courses.student_enrolment_id",
              "input": {
                "operation": "join",
                "condition": "students.student_id = student_enrolment.student_id",
                "input": [
                  {
                    "type": "table",
                    "name": "students"
                  },
                  {
                    "type": "table",
                    "name": "student_enrolment"
                  }
                ]
              },
              "right": {
                "type": "table",
                "name": "student_enrolment_courses"
              }
            },
            "right": {
              "type": "table",
              "name": "transcripts"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "middle_name",
      "last_name"
    ],
    "input": {
      "operation": "selection",
      "condition": "transcript_date = min_date",
      "input": {
        "operation": "rename",
        "new_names": {
          "transcript_date": "min(transcript_date)"
        },
        "input": {
          "operation": "join",
          "condition": "transcripts.transcript_id = SEC_SE_ST.transcript_id",
          "left": {
            "type": "table",
            "name": "transcripts"
          },
          "right": {
            "operation": "join",
            "condition": "SE_ST.student_enrolment_id = student_enrolment_courses.student_enrolment_id",
            "left": {
              "operation": "join",
              "condition": "students.student_id = student_enrolment.student_id",
              "left": {
                "type": "table",
                "name": "students"
              },
              "right": {
                "type": "table",
                "name": "student_enrolment"
              }
            },
            "right": {
              "type": "table",
              "name": "student_enrolment_courses"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name"
    ],
    "input": {
      "operation": "selection",
      "condition": "current_address_id \u2260 permanent_address_id",
      "input": {
        "type": "table",
        "name": "students"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name"
    ],
    "input": {
      "operation": "selection",
      "condition": "permanent_address_id != current_address_id",
      "input": {
        "type": "table",
        "name": "students"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "address_id",
      "line_1",
      "line_2",
      "line_3"
    ],
    "input": {
      "operation": "join",
      "condition": "current_address_id = address_id",
      "left": {
        "operation": "selection",
        "condition": "student_count = (max(student_count))",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "current_address_id"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "student_id",
              "alias": "student_count"
            }
          ],
          "input": {
            "operation": "selection",
            "condition": "student_id = student_id",
            "input": {
              "operation": "cartesian_product",
              "left": {
                "type": "table",
                "name": "student_enrolment"
              },
              "right": {
                "type": "table",
                "name": "students"
              }
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "addresses"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "address_id",
      "line_1",
      "line_2"
    ],
    "input": {
      "operation": "selection",
      "condition": "addresses.address_id = max_address.current_address_id",
      "input": {
        "operation": "join",
        "left": {
          "operation": "table",
          "name": "addresses"
        },
        "right": {
          "operation": "selection",
          "condition": "student_count = max_student_count",
          "input": {
            "operation": "join",
            "left": {
              "operation": "aggregation",
              "group_by": [
                "current_address_id"
              ],
              "aggregates": [
                {
                  "type": "count",
                  "field": "student_id",
                  "alias": "student_count"
                }
              ],
              "input": {
                "operation": "projection",
                "attributes": [
                  "student_id",
                  "current_address_id",
                  "permanent_address_id",
                  "first_name",
                  "address_id",
                  "line_1",
                  "line_2",
                  "line_3"
                ],
                "input": {
                  "operation": "selection",
                  "condition": "students.current_address_id = addresses.address_id",
                  "input": {
                    "operation": "join",
                    "left": {
                      "type": "table",
                      "name": "students"
                    },
                    "right": {
                      "type": "table",
                      "name": "addresses"
                    }
                  }
                }
              }
            },
            "right": {
              "operation": "rename",
              "new_name": "max_student_count",
              "input": {
                "operation": "projection",
                "attributes": [
                  "max(student_count)"
                ],
                "input": {
                  "operation": "aggregation",
                  "group_by": [],
                  "aggregates": [
                    {
                      "field": "student_count",
                      "type": "max"
                    }
                  ],
                  "input": {
                    "operation": "aggregation",
                    "group_by": [
                      "current_address_id"
                    ],
                    "aggregates": [
                      {
                        "type": "count",
                        "field": "student_id",
                        "alias": "student_count"
                      }
                    ],
                    "input": {
                      "operation": "projection",
                      "attributes": [
                        "student_id",
                        "current_address_id",
                        "permanent_address_id",
                        "first_name",
                        "address_id",
                        "line_1",
                        "line_2",
                        "line_3"
                      ],
                      "input": {
                        "operation": "selection",
                        "condition": "students.current_address_id = addresses.address_id",
                        "input": {
                          "operation": "join",
                          "left": {
                            "type": "table",
                            "name": "students"
                          },
                          "right": {
                            "type": "table",
                            "name": "addresses"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "avg",
        "field": "transcript_date"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "transcript_date"
      ],
      "input": {
        "operation": "table",
        "name": "transcripts"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "avg",
        "field": "transcript_date"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "transcript_date"
      ],
      "input": {
        "operation": "table",
        "name": "transcripts"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "transcript_date",
      "other_details"
    ],
    "input": {
      "operation": "selection",
      "condition": "transcript_date = min_date",
      "input": {
        "operation": "extension",
        "computed_attributes": {
          "min_date": {
            "operation": "aggregation",
            "group_by": [],
            "aggregates": [
              {
                "type": "min",
                "field": "transcript_date"
              }
            ],
            "input": {
              "type": "table",
              "name": "transcripts"
            }
          }
        },
        "input": {
          "type": "table",
          "name": "transcripts"
        }
      }
    }
  },
  [
    {
      "operation": "projection",
      "attributes": [
        "transcript_date"
      ],
      "input": {
        "operation": "selection",
        "condition": "transcript_date = MIN(transcript_date)",
        "input": {
          "type": "table",
          "name": "transcripts"
        }
      }
    },
    {
      "type": "intermediate_result",
      "name": "ED"
    },
    {
      "operation": "selection",
      "condition": "transcript_date = ED",
      "input": {
        "type": "table",
        "name": "transcripts"
      }
    },
    {
      "type": "intermediate_result",
      "name": "T_E"
    },
    {
      "operation": "join",
      "condition": "transcripts.transcript_id = transcript_contents.transcript_id",
      "left": {
        "type": "intermediate",
        "name": "T_E"
      },
      "right": {
        "type": "table",
        "name": "transcript_contents"
      }
    },
    {
      "type": "intermediate_result",
      "name": "TC_E"
    },
    {
      "operation": "projection",
      "attributes": [
        "transcript_id",
        "transcript_date",
        "student_course_id"
      ],
      "input": {
        "type": "intermediate",
        "name": "TC_E"
      }
    }
  ],
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "transcript_id",
        "alias": "num_transcripts"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "transcript_id"
      ],
      "input": {
        "type": "table",
        "name": "transcripts"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "transcript_id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "transcript_id"
      ],
      "input": {
        "operation": "table",
        "name": "transcripts"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "max",
        "field": "transcript_date"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "transcript_date"
      ],
      "input": {
        "type": "table",
        "name": "transcripts"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "max",
        "field": "transcript_date"
      }
    ],
    "input": {
      "type": "table",
      "name": "transcripts"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "student_course_id",
      "count"
    ],
    "input": {
      "operation": "selection",
      "condition": "count = (max(count))",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "student_course_id"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "transcript_id",
            "as": "count"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "student_course_id",
            "transcript_id"
          ],
          "input": {
            "type": "table",
            "name": "course_enrollment_transcripts"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "course_id",
      "student_enrolment_id"
    ],
    "input": {
      "operation": "join",
      "condition": "course_id = R.course_id",
      "left": {
        "operation": "table",
        "name": "student_enrolment_courses"
      },
      "right": {
        "operation": "selection",
        "condition": "course_count = M.max_count",
        "input": {
          "operation": "cartesian_product",
          "left": {
            "operation": "aggregation",
            "group_by": [
              "course_id"
            ],
            "aggregates": [
              {
                "type": "count",
                "field": "",
                "alias": "course_count"
              }
            ],
            "input": {
              "operation": "table",
              "name": "student_enrolment_courses"
            }
          },
          "right": {
            "operation": "aggregation",
            "aggregates": [
              {
                "type": "max",
                "field": "course_count",
                "alias": "max_count"
              }
            ],
            "input": {
              "operation": "aggregation",
              "group_by": [
                "course_id"
              ],
              "aggregates": [
                {
                  "type": "count",
                  "field": "",
                  "alias": "course_count"
                }
              ],
              "input": {
                "operation": "table",
                "name": "student_enrolment_courses"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "transcript_date",
      "transcript_id"
    ],
    "input": {
      "operation": "join",
      "condition": "T3.transcript_id = transcripts.transcript_id",
      "left": {
        "operation": "selection",
        "condition": "course_count = MIN(course_count)",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "transcript_id"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "student_course_id",
              "alias": "course_count"
            }
          ],
          "input": {
            "operation": "join",
            "condition": "transcripts.transcript_id = transcript_contents.transcript_id AND transcript_contents.transcript_id = student_enrolment_courses.transcript_id",
            "left": {
              "operation": "join",
              "condition": "transcripts.transcript_id = transcript_contents.transcript_id",
              "left": {
                "type": "table",
                "name": "transcripts"
              },
              "right": {
                "type": "table",
                "name": "transcript_contents"
              }
            },
            "right": {
              "type": "table",
              "name": "student_enrolment_courses"
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "transcripts"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "transcript_id",
      "transcript_date"
    ],
    "input": {
      "operation": "selection",
      "condition": "result_count = (pi_min_result_count)",
      "input": {
        "operation": "join",
        "condition": "transcript_contents.transcript_id = transcripts.transcript_id",
        "left": {
          "operation": "aggregation",
          "group_by": [
            "transcript_id"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "student_course_id",
              "alias": "result_count"
            }
          ],
          "input": {
            "operation": "table",
            "name": "transcript_contents"
          }
        },
        "right": {
          "operation": "table",
          "name": "transcripts"
        }
      }
    },
    "definitions": {
      "pi_min_result_count": {
        "operation": "projection",
        "attributes": [
          "min(result_count)"
        ],
        "input": {
          "operation": "aggregation",
          "group_by": [
            "transcript_id"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "student_course_id",
              "alias": "result_count"
            }
          ],
          "input": {
            "operation": "table",
            "name": "transcript_contents"
          }
        }
      }
    }
  },
  {
    "operation": "intersection",
    "inputs": [
      {
        "operation": "projection",
        "attributes": [
          "semester_id"
        ],
        "input": {
          "operation": "selection",
          "condition": "degree_summary_name = 'Master'",
          "input": {
            "operation": "join",
            "condition": "DP.degree_program_id = SE.degree_program_id",
            "left": {
              "type": "table",
              "name": "DP"
            },
            "right": {
              "type": "table",
              "name": "SE"
            }
          }
        }
      },
      {
        "operation": "projection",
        "attributes": [
          "semester_id"
        ],
        "input": {
          "operation": "selection",
          "condition": "degree_summary_name = 'Bachelor'",
          "input": {
            "operation": "join",
            "condition": "DP.degree_program_id = SE.degree_program_id",
            "left": {
              "type": "table",
              "name": "DP"
            },
            "right": {
              "type": "table",
              "name": "SE"
            }
          }
        }
      }
    ]
  },
  {
    "operation": "projection",
    "attributes": [
      "semester_id"
    ],
    "input": {
      "operation": "intersection",
      "left": {
        "operation": "projection",
        "attributes": [
          "semester_id"
        ],
        "input": {
          "operation": "selection",
          "condition": "degree_program_id IN (\u03c0_degree_program_id(\u03c3_degree_summary_name = 'Masters'(degree_programs)))",
          "input": {
            "type": "table",
            "name": "student_enrolment"
          }
        }
      },
      "right": {
        "operation": "projection",
        "attributes": [
          "semester_id"
        ],
        "input": {
          "operation": "selection",
          "condition": "degree_program_id IN (\u03c0_degree_program_id(\u03c3_degree_summary_name = 'Bachelors'(degree_programs)))",
          "input": {
            "type": "table",
            "name": "student_enrolment"
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "*"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "current_address_id"
      ],
      "input": {
        "type": "table",
        "name": "students"
      }
    }
  },
  {
    "operation": "union",
    "inputs": [
      {
        "operation": "projection",
        "attributes": [
          "line_1",
          "line_2",
          "line_3"
        ],
        "input": {
          "operation": "selection",
          "condition": "addresses.address_id = students.current_address_id",
          "input": {
            "operation": "join",
            "left": {
              "type": "table",
              "name": "students"
            },
            "right": {
              "type": "table",
              "name": "addresses"
            }
          }
        }
      },
      {
        "operation": "projection",
        "attributes": [
          "line_1",
          "line_2",
          "line_3"
        ],
        "input": {
          "operation": "selection",
          "condition": "addresses.address_id = students.permanent_address_id",
          "input": {
            "operation": "join",
            "left": {
              "type": "table",
              "name": "students"
            },
            "right": {
              "type": "table",
              "name": "addresses"
            }
          }
        }
      }
    ]
  },
  {
    "operation": "extension",
    "order_by": {
      "attributes": [
        "last_name",
        "first_name",
        "middle_name"
      ],
      "order": "desc"
    },
    "input": {
      "operation": "projection",
      "attributes": [
        "last_name",
        "first_name",
        "middle_name",
        "student_id",
        "permanent_address_id",
        "current_address_id"
      ],
      "input": {
        "type": "table",
        "name": "students"
      }
    }
  },
  {
    "operation": "extension",
    "order_by": {
      "attributes": [
        "last_name"
      ],
      "order": "desc"
    },
    "input": {
      "operation": "projection",
      "attributes": [
        "other_student_details",
        "last_name",
        "middle_name",
        "first_name",
        "permanent_address_id",
        "current_address_id"
      ],
      "input": {
        "type": "table",
        "name": "students"
      }
    }
  },
  [
    {
      "operation": "selection",
      "condition": "section_name = 'h'",
      "input": {
        "type": "table",
        "name": "sections"
      }
    },
    {
      "operation": "projection",
      "attributes": [
        "sections.section_name",
        "sections.section_description",
        "sections.section_id",
        "sections.course_id",
        "courses.course_name",
        "courses.course_description",
        "courses.other_details"
      ],
      "input": {
        "operation": "join",
        "condition": "sections.course_id = courses.course_id",
        "left": {
          "operation": "selection",
          "condition": "sections.section_name = 'h'",
          "input": {
            "type": "table",
            "name": "sections"
          }
        },
        "right": {
          "type": "table",
          "name": "courses"
        }
      }
    },
    {
      "operation": "projection",
      "attributes": [
        "course_id"
      ],
      "input": {
        "operation": "selection",
        "condition": "section_name = 'h'",
        "input": {
          "type": "table",
          "name": "sections"
        }
      }
    },
    {
      "operation": "projection",
      "attributes": [
        "student_enrolment.student_id",
        "student_enrolment.degree_program_id",
        "student_enrolment.semester_id"
      ],
      "input": {
        "operation": "selection",
        "condition": "student_enrolment_courses.course_id IN C_h",
        "input": {
          "operation": "join",
          "condition": "student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id",
          "left": {
            "type": "table",
            "name": "student_enrolment_courses"
          },
          "right": {
            "type": "table",
            "name": "student_enrolment"
          }
        }
      }
    }
  ],
  {
    "operation": "projection",
    "attributes": [
      "section_description"
    ],
    "input": {
      "operation": "selection",
      "condition": "section_name = 'h'",
      "input": {
        "type": "table",
        "name": "sections"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name"
    ],
    "input": {
      "operation": "selection",
      "condition": "student_id IN (RelevantStudents)",
      "input": {
        "operation": "union",
        "left": {
          "operation": "projection",
          "attributes": [
            "student_id"
          ],
          "input": {
            "operation": "selection",
            "condition": "permanent_address_id IN (SELECT address_id FROM HaitiAddresses)",
            "input": {
              "operation": "selection",
              "condition": "country = 'Haiti'",
              "input": {
                "type": "table",
                "name": "addresses"
              }
            }
          }
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "student_id"
          ],
          "input": {
            "operation": "selection",
            "condition": "cell_mobile_number = '09700166582'",
            "input": {
              "type": "table",
              "name": "students"
            }
          }
        }
      }
    }
  },
  {
    "operation": "union",
    "inputs": [
      {
        "operation": "projection",
        "attributes": [
          "first_name"
        ],
        "input": {
          "operation": "selection",
          "condition": "cell_mobile_number = '09700166582'",
          "input": {
            "type": "table",
            "name": "students"
          }
        }
      },
      {
        "operation": "projection",
        "attributes": [
          "first_name"
        ],
        "input": {
          "operation": "join",
          "condition": "students.permanent_address_id = addresses.address_id",
          "left": {
            "operation": "selection",
            "condition": "line_1 = 'Haiti'",
            "input": {
              "type": "table",
              "name": "addresses"
            }
          },
          "right": {
            "type": "table",
            "name": "students"
          }
        }
      }
    ]
  },
  {
    "operation": "extension",
    "order_by": {
      "attributes": [
        "title"
      ],
      "order": "asc"
    },
    "input": {
      "operation": "projection",
      "attributes": [
        "title"
      ],
      "input": {
        "type": "table",
        "name": "cartoon"
      }
    }
  },
  {
    "operation": "extension",
    "order_by": {
      "attributes": [
        "title"
      ],
      "order": "asc"
    },
    "input": {
      "operation": "projection",
      "attributes": [
        "title"
      ],
      "input": {
        "type": "table",
        "name": "cartoon"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "id",
      "title"
    ],
    "input": {
      "operation": "selection",
      "condition": "directed_by = 'Ben Jones'",
      "input": {
        "type": "table",
        "name": "cartoon"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "title"
    ],
    "input": {
      "operation": "selection",
      "condition": "directed_by = 'Ben Jones'",
      "input": {
        "type": "table",
        "name": "cartoon"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "id"
      ],
      "input": {
        "operation": "selection",
        "condition": "written_by='Joseph Kuhr'",
        "input": {
          "type": "table",
          "name": "cartoon"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "id"
      }
    ],
    "input": {
      "operation": "selection",
      "condition": "written_by = 'Joseph Kuhr'",
      "input": {
        "type": "table",
        "name": "cartoon"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "title",
      "directed_by",
      "original_air_date"
    ],
    "input": {
      "operation": "selection",
      "condition": "cartoon.original_air_date = tv_series.air_date",
      "input": {
        "operation": "cartesian_product",
        "left": {
          "type": "table",
          "name": "cartoon"
        },
        "right": {
          "type": "table",
          "name": "tv_series"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "title",
      "directed_by",
      "original_air_date"
    ],
    "input": {
      "operation": "extension",
      "order_by": {
        "attributes": [
          "original_air_date"
        ],
        "order": "asc"
      },
      "input": {
        "operation": "rename",
        "new_name": "C",
        "input": {
          "operation": "selection",
          "condition": "1=1",
          "input": {
            "type": "table",
            "name": "cartoon"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "title"
    ],
    "input": {
      "operation": "selection",
      "condition": "directed_by = 'Ben Jones' OR directed_by = 'Brandon Vietti'",
      "input": {
        "type": "table",
        "name": "cartoon"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "title"
    ],
    "input": {
      "operation": "selection",
      "condition": "directed_by = 'Ben Jones' OR directed_by = 'Brandon Vietti'",
      "input": {
        "type": "table",
        "name": "cartoon"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "country",
      "count_channel"
    ],
    "input": {
      "operation": "selection",
      "condition": "count_channel = max_count",
      "input": {
        "operation": "cartesian_product",
        "left": {
          "operation": "aggregation",
          "group_by": [
            "country"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "id",
              "as": "count_channel"
            }
          ],
          "input": {
            "type": "table",
            "name": "tv_channel"
          }
        },
        "right": {
          "operation": "aggregation",
          "aggregates": [
            {
              "type": "max",
              "field": "count_channel",
              "as": "max_count"
            }
          ],
          "input": {
            "operation": "aggregation",
            "group_by": [
              "country"
            ],
            "aggregates": [
              {
                "type": "count",
                "field": "id",
                "as": "count_channel"
              }
            ],
            "input": {
              "type": "table",
              "name": "tv_channel"
            }
          }
        }
      }
    }
  },
  {
    "operation": "selection",
    "condition": "channel_count = max_count",
    "input": {
      "operation": "cartesian_product",
      "left": {
        "operation": "aggregation",
        "group_by": [
          "country"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "id",
            "alias": "channel_count"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "country",
            "id"
          ],
          "input": {
            "type": "table",
            "name": "tv_channel"
          }
        }
      },
      "right": {
        "operation": "aggregation",
        "aggregates": [
          {
            "type": "max",
            "field": "channel_count",
            "alias": "max_count"
          }
        ],
        "input": {
          "operation": "aggregation",
          "group_by": [
            "country"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "id",
              "alias": "channel_count"
            }
          ],
          "input": {
            "operation": "projection",
            "attributes": [
              "country",
              "id"
            ],
            "input": {
              "type": "table",
              "name": "tv_channel"
            }
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "series_name",
      "content"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "*",
        "alias": "distinct_count"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "series_name",
        "content"
      ],
      "input": {
        "type": "table",
        "name": "tv_channel"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": null
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "series_name",
        "content"
      ],
      "input": {
        "operation": "rename",
        "input": {
          "operation": "projection",
          "attributes": [
            "series_name",
            "content"
          ],
          "input": {
            "type": "table",
            "name": "tv_channel"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "content"
    ],
    "input": {
      "operation": "selection",
      "condition": "series_name = 'Sky Radio'",
      "input": {
        "type": "table",
        "name": "tv_channel"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "content"
    ],
    "input": {
      "operation": "selection",
      "condition": "series_name='Sky Radio'",
      "input": {
        "type": "table",
        "name": "tv_channel"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "package_option"
    ],
    "input": {
      "operation": "selection",
      "condition": "series_name = 'Sky Radio'",
      "input": {
        "type": "table",
        "name": "tv_channel"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "package_option"
    ],
    "input": {
      "operation": "selection",
      "condition": "series_name = 'Sky Radio'",
      "input": {
        "type": "table",
        "name": "tv_channel"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "id"
      ],
      "input": {
        "operation": "selection",
        "condition": "language = 'English'",
        "input": {
          "type": "table",
          "name": "tv_channel"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "id"
      ],
      "input": {
        "operation": "selection",
        "condition": "language = 'English'",
        "input": {
          "type": "table",
          "name": "tv_channel"
        }
      }
    }
  },
  {
    "operation": "selection",
    "condition": "num_channels = min_channels",
    "input": {
      "operation": "cartesian_product",
      "left": {
        "operation": "projection",
        "attributes": [
          "language",
          "num_channels"
        ],
        "input": {
          "operation": "aggregation",
          "group_by": [
            "language"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "id",
              "alias": "num_channels"
            }
          ],
          "input": {
            "type": "table",
            "name": "tv_channel"
          }
        }
      },
      "right": {
        "operation": "aggregation",
        "aggregates": [
          {
            "type": "min",
            "field": "num_channels",
            "alias": "min_channels"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "num_channels"
          ],
          "input": {
            "operation": "aggregation",
            "group_by": [
              "language"
            ],
            "aggregates": [
              {
                "type": "count",
                "field": "id",
                "alias": "num_channels"
              }
            ],
            "input": {
              "type": "table",
              "name": "tv_channel"
            }
          }
        }
      }
    }
  },
  [
    {
      "operation": "aggregation",
      "group_by": [
        "language"
      ],
      "aggregates": [
        {
          "type": "count",
          "field": "id",
          "alias": "channel_count"
        }
      ],
      "input": {
        "operation": "table",
        "name": "tv_channel"
      }
    },
    {
      "operation": "projection",
      "attributes": [
        "min(channel_count) AS min_count"
      ],
      "input": {
        "operation": "aggregation",
        "group_by": [],
        "aggregates": [
          {
            "type": "min",
            "field": "channel_count"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "channel_count"
          ],
          "input": {
            "operation": "table",
            "name": "LanguageChannels"
          }
        }
      }
    },
    {
      "operation": "projection",
      "attributes": [
        "language",
        "channel_count"
      ],
      "input": {
        "operation": "selection",
        "condition": "channel_count = MinChannelsUsed.min_count",
        "input": {
          "operation": "join",
          "condition": "true",
          "left": {
            "operation": "table",
            "name": "LanguageChannels"
          },
          "right": {
            "operation": "table",
            "name": "MinChannelsUsed"
          }
        }
      }
    }
  ],
  {
    "operation": "projection",
    "attributes": [
      "language",
      "num_channels"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "language"
      ],
      "aggregates": [
        {
          "type": "count",
          "field": "id",
          "as": "num_channels"
        }
      ],
      "input": {
        "operation": "projection",
        "attributes": [
          "language",
          "id"
        ],
        "input": {
          "operation": "join",
          "condition": "tv_channel.id = T_channels.channel",
          "left": {
            "operation": "table",
            "name": "tv_channel"
          },
          "right": {
            "operation": "projection",
            "attributes": [
              "channel"
            ],
            "input": {
              "operation": "union",
              "inputs": [
                {
                  "operation": "projection",
                  "attributes": [
                    "channel"
                  ],
                  "input": {
                    "operation": "table",
                    "name": "tv_series"
                  }
                },
                {
                  "operation": "projection",
                  "attributes": [
                    "channel"
                  ],
                  "input": {
                    "operation": "table",
                    "name": "cartoon"
                  }
                }
              ]
            }
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "language"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "id",
        "alias": "tv_channel_count"
      }
    ],
    "input": {
      "type": "table",
      "name": "tv_channel"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "series_name"
    ],
    "input": {
      "operation": "join",
      "condition": "cartoon.channel = tv_channel.id",
      "left": {
        "operation": "selection",
        "condition": "title = 'The Rise of the Blue Beetle!'",
        "input": {
          "type": "table",
          "name": "cartoon"
        }
      },
      "right": {
        "type": "table",
        "name": "tv_channel"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "series_name"
    ],
    "input": {
      "operation": "join",
      "condition": "channel = id",
      "left": {
        "operation": "projection",
        "attributes": [
          "channel"
        ],
        "input": {
          "operation": "selection",
          "condition": "title = 'The Rise of the Blue Beetle!'",
          "input": {
            "type": "table",
            "name": "cartoon"
          }
        }
      },
      "right": {
        "type": "table",
        "name": "tv_channel"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "title"
    ],
    "input": {
      "operation": "join",
      "condition": "tv_channel.id = cartoon.channel",
      "left": {
        "operation": "selection",
        "condition": "series_name = 'Sky Radio'",
        "input": {
          "type": "table",
          "name": "tv_channel"
        }
      },
      "right": {
        "type": "table",
        "name": "cartoon"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "title"
    ],
    "input": {
      "operation": "selection",
      "condition": "channel IN (SELECT id FROM tv_channel WHERE series_name = 'Sky Radio')",
      "input": {
        "type": "table",
        "name": "cartoon"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "episode"
    ],
    "input": {
      "operation": "extension",
      "order_by": {
        "attributes": [
          "rating"
        ],
        "order": "desc"
      },
      "input": {
        "operation": "selection",
        "predicate": "TRUE",
        "input": {
          "type": "table",
          "name": "tv_series"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "episode",
      "rating"
    ],
    "input": {
      "operation": "extension",
      "order_by": {
        "attributes": [
          "rating"
        ],
        "order": "asc"
      },
      "input": {
        "operation": "selection",
        "condition": "true",
        "input": {
          "type": "table",
          "name": "tv_series"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "episode",
      "rating"
    ],
    "input": {
      "operation": "extension",
      "order_by": {
        "attributes": [
          "rating"
        ],
        "order": "desc"
      },
      "input": {
        "operation": "selection",
        "condition": "tv_series.channel = tv_channel.id",
        "input": {
          "operation": "cartesian_product",
          "left": {
            "type": "table",
            "name": "tv_series"
          },
          "right": {
            "type": "table",
            "name": "tv_channel"
          }
        }
      },
      "limit": 3
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "rating",
      "episode",
      "id"
    ],
    "input": {
      "operation": "selection",
      "condition": "1 <= row_num <= 3",
      "input": {
        "operation": "extension",
        "order_by": {
          "attributes": [
            "rating"
          ],
          "order": "desc"
        },
        "input": {
          "operation": "projection",
          "attributes": [
            "rating",
            "episode",
            "id"
          ],
          "input": {
            "type": "table",
            "name": "tv_series"
          }
        }
      }
    }
  },
  {
    "operation": "union",
    "expressions": [
      {
        "operation": "projection",
        "attributes": [
          "share"
        ],
        "input": {
          "operation": "selection",
          "condition": {
            "type": "eq",
            "left": "share",
            "right": {
              "operation": "difference",
              "left": {
                "operation": "projection",
                "attributes": [
                  "share"
                ],
                "input": {
                  "type": "table",
                  "name": "tv_series"
                }
              },
              "right": {
                "operation": "projection",
                "attributes": [
                  "s2.share"
                ],
                "input": {
                  "operation": "selection",
                  "condition": {
                    "type": "gt",
                    "left": "s1.share",
                    "right": "s2.share"
                  },
                  "input": {
                    "operation": "cartesian_product",
                    "left": {
                      "operation": "rename",
                      "name": "s1",
                      "input": {
                        "type": "table",
                        "name": "tv_series"
                      }
                    },
                    "right": {
                      "operation": "rename",
                      "name": "s2",
                      "input": {
                        "type": "table",
                        "name": "tv_series"
                      }
                    }
                  }
                }
              }
            }
          },
          "input": {
            "operation": "projection",
            "attributes": [
              "share"
            ],
            "input": {
              "type": "table",
              "name": "tv_series"
            }
          }
        }
      },
      {
        "operation": "projection",
        "attributes": [
          "share"
        ],
        "input": {
          "operation": "selection",
          "condition": {
            "type": "eq",
            "left": "share",
            "right": {
              "operation": "difference",
              "left": {
                "operation": "projection",
                "attributes": [
                  "share"
                ],
                "input": {
                  "type": "table",
                  "name": "tv_series"
                }
              },
              "right": {
                "operation": "projection",
                "attributes": [
                  "s2.share"
                ],
                "input": {
                  "operation": "selection",
                  "condition": {
                    "type": "lt",
                    "left": "s1.share",
                    "right": "s2.share"
                  },
                  "input": {
                    "operation": "cartesian_product",
                    "left": {
                      "operation": "rename",
                      "name": "s1",
                      "input": {
                        "type": "table",
                        "name": "tv_series"
                      }
                    },
                    "right": {
                      "operation": "rename",
                      "name": "s2",
                      "input": {
                        "type": "table",
                        "name": "tv_series"
                      }
                    }
                  }
                }
              }
            }
          },
          "input": {
            "operation": "projection",
            "attributes": [
              "share"
            ],
            "input": {
              "type": "table",
              "name": "tv_series"
            }
          }
        }
      }
    ]
  },
  [
    {
      "operation": "aggregation",
      "group_by": [],
      "aggregates": [
        {
          "type": "max",
          "field": "share",
          "alias": "maxShare"
        }
      ],
      "input": {
        "type": "table",
        "name": "tv_series"
      }
    },
    {
      "operation": "aggregation",
      "group_by": [],
      "aggregates": [
        {
          "type": "min",
          "field": "share",
          "alias": "minShare"
        }
      ],
      "input": {
        "type": "table",
        "name": "tv_series"
      }
    }
  ],
  {
    "operation": "projection",
    "attributes": [
      "air_date"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "field": "episode",
        "value": "A Love of a Lifetime"
      },
      "input": {
        "type": "table",
        "name": "tv_series"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "air_date"
    ],
    "input": {
      "operation": "selection",
      "condition": "episode = 'A Love of a Lifetime'",
      "input": {
        "type": "table",
        "name": "tv_series"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "weekly_rank"
    ],
    "input": {
      "operation": "selection",
      "condition": "episode = 'A Love of a Lifetime'",
      "input": {
        "type": "table",
        "name": "tv_series"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "weekly_rank"
    ],
    "input": {
      "operation": "selection",
      "condition": "episode='A Love of a Lifetime'",
      "input": {
        "type": "table",
        "name": "tv_series"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "series_name"
    ],
    "input": {
      "operation": "join",
      "condition": "id = ch",
      "left": {
        "type": "table",
        "name": "tv_channel"
      },
      "right": {
        "operation": "rename",
        "new_name": "ch",
        "input": {
          "operation": "projection",
          "attributes": [
            "channel"
          ],
          "input": {
            "operation": "selection",
            "condition": "episode = 'A Love of a Lifetime'",
            "input": {
              "type": "table",
              "name": "tv_series"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "series_name"
    ],
    "input": {
      "operation": "join",
      "condition": "tv_series.channel = tv_channel.id",
      "left": {
        "operation": "selection",
        "condition": "episode = 'A Love of a Lifetime'",
        "input": {
          "type": "table",
          "name": "tv_series"
        }
      },
      "right": {
        "type": "table",
        "name": "tv_channel"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "episode"
    ],
    "input": {
      "operation": "join",
      "condition": "tv_channel.id = tv_series.channel",
      "left": {
        "operation": "selection",
        "condition": "series_name = 'Sky Radio'",
        "input": {
          "type": "table",
          "name": "tv_channel"
        }
      },
      "right": {
        "type": "table",
        "name": "tv_series"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "episode"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "attribute": "channel",
        "value": {
          "operation": "projection",
          "attributes": [
            "id"
          ],
          "input": {
            "operation": "selection",
            "condition": {
              "attribute": "series_name",
              "value": "Sky Radio",
              "operator": "="
            },
            "input": {
              "type": "table",
              "name": "tv_channel"
            }
          }
        },
        "operator": "="
      },
      "input": {
        "type": "table",
        "name": "tv_series"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "directed_by"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "id",
        "alias": "cartoon_count"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "directed_by",
        "id"
      ],
      "input": {
        "type": "table",
        "name": "cartoon"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "directed_by"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "id",
        "alias": "cartoon_count"
      }
    ],
    "input": {
      "operation": "table",
      "name": "cartoon"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "c.production_code",
      "c.channel"
    ],
    "input": {
      "operation": "join",
      "condition": "c.channel = ts.channel AND c.id = ts.id",
      "left": {
        "type": "table",
        "name": "cartoon"
      },
      "right": {
        "operation": "join",
        "condition": "ts.channel = recent_ts.channel AND ts.id = recent_ts.id AND ts.air_date = recent_ts.most_recent_air_date",
        "left": {
          "type": "table",
          "name": "tv_series"
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "channel",
            "id",
            "max(air_date) AS most_recent_air_date"
          ],
          "input": {
            "operation": "rename",
            "new_name": "ts",
            "input": {
              "type": "table",
              "name": "tv_series"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "production_code",
      "channel"
    ],
    "input": {
      "operation": "selection",
      "condition": "date_aired = max(date_aired)",
      "input": {
        "type": "table",
        "name": "cartoon"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "package_option",
      "id"
    ],
    "input": {
      "operation": "selection",
      "condition": "hight_definition_tv = 'true'",
      "input": {
        "type": "table",
        "name": "tv_channel"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "package_option",
      "series_name"
    ],
    "input": {
      "operation": "selection",
      "condition": "high_definition_tv = TRUE",
      "input": {
        "type": "table",
        "name": "tv_channel"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "country"
    ],
    "input": {
      "operation": "join",
      "condition": "cartoon.channel = tv_channel.id",
      "left": {
        "operation": "selection",
        "condition": "written_by = 'Todd Casey'",
        "input": {
          "type": "table",
          "name": "cartoon"
        }
      },
      "right": {
        "type": "table",
        "name": "tv_channel"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "country"
    ],
    "input": {
      "operation": "join",
      "condition": "cartoon.channel = tv_channel.id",
      "left": {
        "operation": "selection",
        "condition": "written_by = 'Todd Casey'",
        "input": {
          "type": "table",
          "name": "cartoon"
        }
      },
      "right": {
        "type": "table",
        "name": "tv_channel"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "country"
    ],
    "input": {
      "operation": "difference",
      "left": {
        "operation": "projection",
        "attributes": [
          "country",
          "channel"
        ],
        "input": {
          "type": "table",
          "name": "tv_channel"
        }
      },
      "right": {
        "operation": "join",
        "condition": "tc.channel = t.channel",
        "left": {
          "operation": "projection",
          "attributes": [
            "country",
            "channel"
          ],
          "input": {
            "type": "table",
            "name": "tv_channel"
          }
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "channel"
          ],
          "input": {
            "operation": "selection",
            "condition": "written_by = 'Todd Casey'",
            "input": {
              "type": "table",
              "name": "cartoon"
            }
          }
        }
      }
    }
  },
  {
    "operation": "difference",
    "left": {
      "operation": "projection",
      "attributes": [
        "country"
      ],
      "input": {
        "type": "table",
        "name": "tv_channel"
      }
    },
    "right": {
      "operation": "projection",
      "attributes": [
        "country"
      ],
      "input": {
        "operation": "join",
        "condition": "tv_channel.id = cartoon.channel",
        "left": {
          "type": "table",
          "name": "tv_channel"
        },
        "right": {
          "operation": "selection",
          "condition": "written_by = 'Todd Casey'",
          "input": {
            "type": "table",
            "name": "cartoon"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "series_name",
      "country"
    ],
    "input": {
      "operation": "join",
      "condition": "cartoon.channel = tv_channel.id",
      "left": {
        "operation": "union",
        "inputs": [
          {
            "operation": "selection",
            "condition": "directed_by = 'Ben Jones'",
            "input": {
              "type": "table",
              "name": "cartoon"
            }
          },
          {
            "operation": "selection",
            "condition": "directed_by = 'Michael Chang'",
            "input": {
              "type": "table",
              "name": "cartoon"
            }
          }
        ]
      },
      "right": {
        "type": "table",
        "name": "tv_channel"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "series_name",
      "country"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "operation": "in",
        "left": "id",
        "right": {
          "operation": "intersection",
          "left": {
            "operation": "projection",
            "attributes": [
              "channel"
            ],
            "input": {
              "operation": "selection",
              "condition": "directed_by = 'Ben Jones'",
              "input": {
                "type": "table",
                "name": "C"
              }
            }
          },
          "right": {
            "operation": "projection",
            "attributes": [
              "channel"
            ],
            "input": {
              "operation": "selection",
              "condition": "directed_by = 'Michael Chang'",
              "input": {
                "type": "table",
                "name": "C"
              }
            }
          }
        }
      },
      "input": {
        "type": "table",
        "name": "TVC"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "pixel_aspect_ratio_par",
      "country"
    ],
    "input": {
      "operation": "selection",
      "condition": "language != 'English'",
      "input": {
        "type": "table",
        "name": "tv_channel"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "pixel_aspect_ratio_par",
      "country"
    ],
    "input": {
      "operation": "selection",
      "condition": "language != 'English'",
      "input": {
        "type": "table",
        "name": "C"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "id"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "operation": "in",
        "attribute": "country",
        "input": {
          "operation": "projection",
          "attributes": [
            "country"
          ],
          "input": {
            "operation": "selection",
            "condition": "channel_count > 2",
            "input": {
              "operation": "aggregation",
              "group_by": [
                "country"
              ],
              "aggregates": [
                {
                  "type": "count",
                  "field": "id",
                  "alias": "channel_count"
                }
              ],
              "input": {
                "operation": "projection",
                "attributes": [
                  "country",
                  "id"
                ],
                "input": {
                  "operation": "table",
                  "name": "tv_channel"
                }
              }
            }
          }
        }
      },
      "input": {
        "operation": "table",
        "name": "tv_channel"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "channel"
    ],
    "input": {
      "operation": "selection",
      "condition": "count > 2",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "channel"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "channel",
            "alias": "count"
          }
        ],
        "input": {
          "operation": "union",
          "left": {
            "operation": "projection",
            "attributes": [
              "channel"
            ],
            "input": {
              "type": "table",
              "name": "tv_series"
            }
          },
          "right": {
            "operation": "projection",
            "attributes": [
              "channel"
            ],
            "input": {
              "type": "table",
              "name": "cartoon"
            }
          }
        }
      }
    }
  },
  {
    "operation": "difference",
    "left": {
      "operation": "projection",
      "attributes": [
        "id"
      ],
      "input": {
        "type": "table",
        "name": "tv_channel"
      }
    },
    "right": {
      "operation": "projection",
      "attributes": [
        "channel"
      ],
      "input": {
        "operation": "selection",
        "condition": "directed_by = 'Ben Jones'",
        "input": {
          "type": "table",
          "name": "cartoon"
        }
      }
    }
  },
  {
    "operation": "difference",
    "left": {
      "operation": "projection",
      "attributes": [
        "id"
      ],
      "input": {
        "type": "table",
        "name": "tv_channel"
      }
    },
    "right": {
      "operation": "projection",
      "attributes": [
        "channel"
      ],
      "input": {
        "operation": "selection",
        "condition": "directed_by = 'Ben Jones'",
        "input": {
          "type": "table",
          "name": "cartoon"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "package"
    ],
    "input": {
      "operation": "join",
      "condition": "tv_channel.id = channels_without_ben_jones.id",
      "left": {
        "type": "table",
        "name": "tv_channel"
      },
      "right": {
        "operation": "difference",
        "input1": {
          "operation": "projection",
          "attributes": [
            "id"
          ],
          "input": {
            "type": "table",
            "name": "tv_channel"
          }
        },
        "input2": {
          "operation": "projection",
          "attributes": [
            "channel"
          ],
          "input": {
            "operation": "selection",
            "condition": "directed_by = 'Ben Jones'",
            "input": {
              "type": "table",
              "name": "cartoon"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "package_option"
    ],
    "input": {
      "operation": "difference",
      "left": {
        "operation": "projection",
        "attributes": [
          "id",
          "package_option"
        ],
        "input": {
          "type": "table",
          "name": "tv_channel"
        }
      },
      "right": {
        "operation": "projection",
        "attributes": [
          "channel"
        ],
        "input": {
          "operation": "selection",
          "condition": "directed_by = 'Ben Jones'",
          "input": {
            "type": "table",
            "name": "cartoon"
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "poker_player_id",
        "alias": "num_players"
      }
    ],
    "input": {
      "type": "table",
      "name": "poker_player"
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "poker_player_id",
        "alias": "num_players"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "poker_player_id"
      ],
      "input": {
        "type": "table",
        "name": "poker_player"
      }
    }
  },
  {
    "operation": "extension",
    "order_by": {
      "attributes": [
        "earnings"
      ],
      "order": "desc"
    },
    "input": {
      "operation": "projection",
      "attributes": [
        "earnings"
      ],
      "input": {
        "type": "table",
        "name": "poker_player"
      }
    }
  },
  {
    "operation": "extension",
    "order_by": {
      "attributes": [
        "earnings"
      ],
      "order": "desc"
    },
    "input": {
      "operation": "projection",
      "attributes": [
        "earnings",
        "poker_player_id"
      ],
      "input": {
        "operation": "table",
        "name": "poker_player"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "final_table_made",
      "best_finish"
    ],
    "input": {
      "type": "table",
      "name": "poker_player"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "final_table_made",
      "best_finish"
    ],
    "input": {
      "type": "table",
      "name": "poker_player"
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "avg",
        "field": "earnings"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "earnings"
      ],
      "input": {
        "type": "table",
        "name": "poker_player"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "avg",
        "field": "earnings"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "earnings"
      ],
      "input": {
        "type": "table",
        "name": "poker_player"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "money_rank"
    ],
    "input": {
      "operation": "selection",
      "condition": "earnings=\u03c0_maxEarnings(\u03c1(maxEarnings, earnings)(\u03c0_earnings(poker_player)))",
      "input": {
        "operation": "join",
        "condition": "poker_player.people_id = people.people_id",
        "left": {
          "type": "table",
          "name": "poker_player"
        },
        "right": {
          "type": "table",
          "name": "people"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "money_rank"
    ],
    "input": {
      "operation": "selection",
      "condition": "earnings = max(earnings)",
      "input": {
        "operation": "table",
        "name": "poker_player"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "max",
        "field": "final_table_made"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "final_table_made"
      ],
      "input": {
        "operation": "selection",
        "condition": "earnings < 200000",
        "input": {
          "type": "table",
          "name": "poker_player"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "type": "max",
    "attribute": "final_table_made",
    "input": {
      "operation": "projection",
      "attributes": [
        "final_table_made"
      ],
      "input": {
        "operation": "selection",
        "condition": "earnings < 200000",
        "input": {
          "type": "table",
          "name": "poker_player"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "poker_player.people_id = people.people_id",
      "left": {
        "type": "table",
        "name": "poker_player"
      },
      "right": {
        "type": "table",
        "name": "people"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "poker_player.people_id = people.people_id",
      "left": {
        "type": "table",
        "name": "poker_player"
      },
      "right": {
        "type": "table",
        "name": "people"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "poker_player.people_id = people.people_id",
      "left": {
        "operation": "selection",
        "condition": "earnings > 300000",
        "input": {
          "type": "table",
          "name": "poker_player"
        }
      },
      "right": {
        "type": "table",
        "name": "people"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "poker_player.people_id = people.people_id",
      "left": {
        "operation": "selection",
        "condition": "earnings > 300000",
        "input": {
          "type": "table",
          "name": "poker_player"
        }
      },
      "right": {
        "type": "table",
        "name": "people"
      }
    }
  },
  {
    "operation": "extension",
    "order_by": {
      "attributes": [
        "final_table_made"
      ],
      "order": "asc"
    },
    "input": {
      "operation": "projection",
      "attributes": [
        "name",
        "final_table_made"
      ],
      "input": {
        "operation": "join",
        "condition": "poker_player.people_id = people.people_id",
        "left": {
          "type": "table",
          "name": "poker_player"
        },
        "right": {
          "type": "table",
          "name": "people"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "final_table_count"
    ],
    "input": {
      "operation": "extension",
      "order_by": {
        "attributes": [
          "final_table_count"
        ],
        "order": "asc"
      },
      "input": {
        "operation": "join",
        "condition": "poker_player.people_id = people.people_id",
        "left": {
          "operation": "join",
          "condition": "player_final_table_count.poker_player_id = poker_player.poker_player_id",
          "left": {
            "type": "table",
            "name": "player_final_table_count"
          },
          "right": {
            "type": "table",
            "name": "poker_player"
          }
        },
        "right": {
          "type": "table",
          "name": "people"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "birth_date"
    ],
    "input": {
      "operation": "join",
      "condition": "LowestEarnings.people_id = people.people_id",
      "left": {
        "operation": "selection",
        "condition": "earnings = MIN(earnings)",
        "input": {
          "operation": "aggregation",
          "group_by": [],
          "aggregates": [
            {
              "type": "min",
              "field": "earnings"
            }
          ],
          "input": {
            "type": "table",
            "name": "poker_player"
          }
        }
      },
      "right": {
        "type": "table",
        "name": "people"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "birth_date"
    ],
    "input": {
      "operation": "join",
      "condition": "people_id = people.people_id",
      "left": {
        "operation": "selection",
        "condition": "earnings = (SELECT MIN(earnings) FROM poker_player)",
        "input": {
          "type": "table",
          "name": "poker_player"
        }
      },
      "right": {
        "type": "table",
        "name": "people"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "money_rank"
    ],
    "input": {
      "operation": "join",
      "condition": "people.people_id = poker_player.people_id",
      "left": {
        "operation": "selection",
        "condition": "people.height = MaxHeight",
        "input": {
          "operation": "aggregation",
          "group_by": [],
          "aggregates": [
            {
              "type": "max",
              "field": "height"
            }
          ],
          "input": {
            "operation": "projection",
            "attributes": [
              "height"
            ],
            "input": {
              "type": "table",
              "name": "people"
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "poker_player"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "money_rank"
    ],
    "input": {
      "operation": "join",
      "condition": "people.people_id = poker_player.people_id",
      "left": {
        "operation": "selection",
        "condition": "height = (\u03c1_H(\u03c0_height(\u03c3_true(people))))",
        "input": {
          "type": "table",
          "name": "people"
        }
      },
      "right": {
        "type": "table",
        "name": "poker_player"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "avg",
        "field": "earnings"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "earnings"
      ],
      "input": {
        "operation": "join",
        "condition": "TallerPeople.people_id = poker_player.people_id",
        "left": {
          "operation": "selection",
          "condition": "height > 200",
          "input": {
            "type": "table",
            "name": "people"
          }
        },
        "right": {
          "type": "table",
          "name": "poker_player"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "avg",
        "field": "earnings"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "earnings"
      ],
      "input": {
        "operation": "join",
        "condition": "people.people_id = poker_player.people_id",
        "left": {
          "operation": "selection",
          "condition": "height > 200",
          "input": {
            "type": "table",
            "name": "people"
          }
        },
        "right": {
          "type": "table",
          "name": "poker_player"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "extension",
      "order_by": {
        "attributes": [
          "earnings"
        ],
        "order": "desc"
      },
      "input": {
        "operation": "projection",
        "attributes": [
          "name",
          "earnings"
        ],
        "input": {
          "operation": "join",
          "condition": "poker_player.people_id = people.people_id",
          "left": {
            "type": "table",
            "name": "poker_player"
          },
          "right": {
            "type": "table",
            "name": "people"
          }
        }
      }
    }
  },
  {
    "operation": "extension",
    "order_by": {
      "attributes": [
        "earnings"
      ],
      "order": "desc"
    },
    "input": {
      "operation": "projection",
      "attributes": [
        "name",
        "earnings"
      ],
      "input": {
        "operation": "join",
        "condition": "poker_player.people_id = people.people_id",
        "left": {
          "type": "table",
          "name": "poker_player"
        },
        "right": {
          "type": "table",
          "name": "people"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "nationality"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "*",
        "alias": "num_people"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "nationality"
      ],
      "input": {
        "type": "table",
        "name": "people"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "nationality"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "people_id",
        "alias": "num_people"
      }
    ],
    "input": {
      "operation": "table",
      "name": "people"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "nationality"
    ],
    "input": {
      "operation": "selection",
      "condition": "count = MAX(count)",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "nationality"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "*"
          }
        ],
        "input": {
          "operation": "table",
          "name": "people"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "nationality"
    ],
    "input": {
      "operation": "selection",
      "condition": "count = max_count",
      "input": {
        "operation": "extension",
        "order_by": {
          "attributes": [
            "count"
          ],
          "order": "desc"
        },
        "input": {
          "operation": "aggregation",
          "group_by": [
            "nationality"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "nationality",
              "as": "count"
            }
          ],
          "input": {
            "operation": "table",
            "name": "people"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "nationality"
    ],
    "input": {
      "operation": "selection",
      "condition": "num_people >= 2",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "nationality"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "people_id",
            "alias": "num_people"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "nationality",
            "people_id"
          ],
          "input": {
            "type": "table",
            "name": "people"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "nationality"
    ],
    "input": {
      "operation": "selection",
      "condition": "count >= 2",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "nationality"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "people_id",
            "as": "count"
          }
        ],
        "input": {
          "type": "table",
          "name": "people"
        }
      }
    }
  },
  {
    "operation": "extension",
    "order_by": {
      "attributes": [
        "name"
      ],
      "order": "asc"
    },
    "input": {
      "operation": "projection",
      "attributes": [
        "name",
        "birth_date"
      ],
      "input": {
        "type": "table",
        "name": "people"
      }
    }
  },
  {
    "operation": "extension",
    "order_by": {
      "attributes": [
        "name"
      ],
      "order": "asc"
    },
    "input": {
      "operation": "projection",
      "attributes": [
        "name",
        "birth_date"
      ],
      "input": {
        "operation": "selection",
        "condition": "true",
        "input": {
          "type": "table",
          "name": "people"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "attribute": "nationality",
        "operator": "!=",
        "value": "Russia"
      },
      "input": {
        "type": "table",
        "name": "people"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "attribute": "nationality",
        "operator": "!=",
        "value": "Russia"
      },
      "input": {
        "type": "table",
        "name": "P"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "people_id IN (\u03c0_people_id(people) - \u03c0_people_id(poker_player))",
      "input": {
        "operation": "table",
        "name": "people"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "operation": "in",
        "attribute": "people_id",
        "input": {
          "operation": "difference",
          "left": {
            "operation": "projection",
            "attributes": [
              "people_id"
            ],
            "input": {
              "type": "table",
              "name": "people"
            }
          },
          "right": {
            "operation": "projection",
            "attributes": [
              "people_id"
            ],
            "input": {
              "type": "table",
              "name": "poker_player"
            }
          }
        }
      },
      "input": {
        "type": "table",
        "name": "people"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "nationality"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "nationality"
      ],
      "input": {
        "type": "table",
        "name": "people"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "nationality"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "nationality"
      ],
      "input": {
        "operation": "selection",
        "condition": "DISTINCT",
        "input": {
          "type": "table",
          "name": "people"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "state"
      }
    ],
    "input": {
      "operation": "rename",
      "new_name": "states",
      "input": {
        "operation": "projection",
        "attributes": [
          "state"
        ],
        "input": {
          "type": "table",
          "name": "area_code_state"
        }
      }
    }
  },
  {
    "operation": "extension",
    "order_by": {
      "attributes": [
        "contestant_name"
      ],
      "order": "desc"
    },
    "input": {
      "operation": "projection",
      "attributes": [
        "contestant_number",
        "contestant_name"
      ],
      "input": {
        "type": "table",
        "name": "contestants"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "vote_id",
      "phone_number",
      "state"
    ],
    "input": {
      "type": "table",
      "name": "votes"
    }
  },
  [
    {
      "operation": "projection",
      "attributes": [
        "area_code"
      ],
      "input": {
        "operation": "table",
        "name": "area_code_state"
      }
    },
    {
      "operation": "selection",
      "condition": "NOT EXISTS (B.area_code > A1.area_code)",
      "input": {
        "operation": "rename",
        "alias": "A1",
        "input": {
          "operation": "projection",
          "attributes": [
            "area_code"
          ],
          "input": {
            "operation": "table",
            "name": "area_code_state"
          }
        }
      },
      "external_input": {
        "operation": "rename",
        "alias": "B",
        "input": {
          "operation": "projection",
          "attributes": [
            "area_code"
          ],
          "input": {
            "operation": "table",
            "name": "area_code_state"
          }
        }
      }
    },
    {
      "operation": "selection",
      "condition": "NOT EXISTS (B.area_code < A1.area_code)",
      "input": {
        "operation": "rename",
        "alias": "A1",
        "input": {
          "operation": "projection",
          "attributes": [
            "area_code"
          ],
          "input": {
            "operation": "table",
            "name": "area_code_state"
          }
        }
      },
      "external_input": {
        "operation": "rename",
        "alias": "B",
        "input": {
          "operation": "projection",
          "attributes": [
            "area_code"
          ],
          "input": {
            "operation": "table",
            "name": "area_code_state"
          }
        }
      }
    }
  ],
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "max",
        "field": "created"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "created"
      ],
      "input": {
        "operation": "selection",
        "condition": "state = 'CA'",
        "input": {
          "type": "table",
          "name": "votes"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "contestant_name"
    ],
    "input": {
      "operation": "selection",
      "condition": "contestant_name != 'Jessie Alloway'",
      "input": {
        "type": "table",
        "name": "contestants"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "state",
      "created"
    ],
    "input": {
      "type": "table",
      "name": "votes"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "contestant_number",
      "contestant_name"
    ],
    "input": {
      "operation": "selection",
      "condition": "vote_count >= 2",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "contestant_number",
          "contestant_name"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "vote_id",
            "alias": "vote_count"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "contestant_number",
            "contestant_name"
          ],
          "input": {
            "operation": "selection",
            "condition": "votes.contestant_number = contestants.contestant_number",
            "input": {
              "operation": "cartesian_product",
              "left": {
                "type": "table",
                "name": "votes"
              },
              "right": {
                "type": "table",
                "name": "contestants"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "contestant_number",
      "contestant_name"
    ],
    "input": {
      "operation": "join",
      "condition": "contestants.contestant_number = V_min_contestant.contestant_number",
      "left": {
        "type": "table",
        "name": "contestants"
      },
      "right": {
        "operation": "selection",
        "condition": "vote_count = MIN(vote_count)",
        "input": {
          "operation": "cartesian_product",
          "left": {
            "operation": "aggregation",
            "group_by": [
              "contestant_number"
            ],
            "aggregates": [
              {
                "type": "count",
                "field": "vote_id",
                "alias": "vote_count"
              }
            ],
            "input": {
              "type": "table",
              "name": "votes"
            }
          },
          "right": {
            "operation": "aggregation",
            "aggregates": [
              {
                "type": "MIN",
                "field": "vote_count"
              }
            ],
            "input": {
              "operation": "aggregation",
              "group_by": [
                "contestant_number"
              ],
              "aggregates": [
                {
                  "type": "count",
                  "field": "vote_id",
                  "alias": "vote_count"
                }
              ],
              "input": {
                "type": "table",
                "name": "votes"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "*"
      }
    ],
    "input": {
      "operation": "selection",
      "condition": "state = 'NY' OR state = 'CA'",
      "input": {
        "type": "table",
        "name": "votes"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "contestant_number"
      }
    ],
    "input": {
      "operation": "difference",
      "left": {
        "operation": "projection",
        "attributes": [
          "contestant_number"
        ],
        "input": {
          "operation": "table",
          "name": "contestants"
        }
      },
      "right": {
        "operation": "projection",
        "attributes": [
          "contestant_number"
        ],
        "input": {
          "operation": "table",
          "name": "votes"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "area_code"
    ],
    "input": {
      "operation": "selection",
      "condition": "vote_count = max(vote_count)",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "area_code"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "*",
            "as": "vote_count"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "area_code"
          ],
          "input": {
            "operation": "join",
            "condition": "votes.state = area_code_state.state",
            "left": {
              "type": "table",
              "name": "votes"
            },
            "right": {
              "type": "table",
              "name": "area_code_state"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "created",
      "state",
      "phone_number"
    ],
    "input": {
      "operation": "join",
      "condition": "votes.contestant_number = C.contestant_number",
      "left": {
        "type": "table",
        "name": "votes"
      },
      "right": {
        "operation": "rename",
        "new_name": "C",
        "input": {
          "operation": "projection",
          "attributes": [
            "contestant_number"
          ],
          "input": {
            "operation": "selection",
            "condition": "contestant_name = 'Tabatha Gehling'",
            "input": {
              "type": "table",
              "name": "contestants"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "area_code"
    ],
    "input": {
      "operation": "join",
      "condition": "S_common.state = area_code_state.state",
      "left": {
        "operation": "intersection",
        "left": {
          "operation": "projection",
          "attributes": [
            "state"
          ],
          "input": {
            "operation": "selection",
            "condition": "contestant_number = T1.contestant_number",
            "input": {
              "operation": "join",
              "condition": "votes.contestant_number = T1.contestant_number",
              "left": {
                "type": "table",
                "name": "votes"
              },
              "right": {
                "operation": "projection",
                "attributes": [
                  "contestant_number"
                ],
                "input": {
                  "operation": "selection",
                  "condition": "contestant_name = 'Tabatha Gehling'",
                  "input": {
                    "type": "table",
                    "name": "contestants"
                  }
                }
              }
            }
          }
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "state"
          ],
          "input": {
            "operation": "selection",
            "condition": "contestant_number = T2.contestant_number",
            "input": {
              "operation": "join",
              "condition": "votes.contestant_number = T2.contestant_number",
              "left": {
                "type": "table",
                "name": "votes"
              },
              "right": {
                "operation": "projection",
                "attributes": [
                  "contestant_number"
                ],
                "input": {
                  "operation": "selection",
                  "condition": "contestant_name = 'Kelly Clauss'",
                  "input": {
                    "type": "table",
                    "name": "contestants"
                  }
                }
              }
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "area_code_state"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "contestant_name"
    ],
    "input": {
      "operation": "selection",
      "condition": "contestant_name LIKE '%Al%'",
      "input": {
        "type": "table",
        "name": "contestants"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "indepyear > 1950",
      "input": {
        "type": "table",
        "name": "country"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "indepyear > 1950",
      "input": {
        "type": "table",
        "name": "country"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "*"
      }
    ],
    "input": {
      "operation": "selection",
      "predicate": {
        "field": "governmentform",
        "operator": "=",
        "value": "Republic"
      },
      "input": {
        "type": "table",
        "name": "country"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "code"
      }
    ],
    "input": {
      "operation": "rename",
      "new_name": "R1",
      "input": {
        "operation": "projection",
        "attributes": [
          "code"
        ],
        "input": {
          "operation": "selection",
          "condition": "governmentform = 'Republic'",
          "input": {
            "type": "table",
            "name": "country"
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "sum",
        "field": "surfacearea"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "surfacearea"
      ],
      "input": {
        "operation": "selection",
        "condition": "region = 'Caribbean'",
        "input": {
          "type": "table",
          "name": "country"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "sum",
        "field": "surfacearea"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "surfacearea"
      ],
      "input": {
        "operation": "selection",
        "conditions": {
          "continent": "Caribbean"
        },
        "input": {
          "type": "table",
          "name": "country"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "continent"
    ],
    "input": {
      "operation": "selection",
      "condition": "name = 'Anguilla'",
      "input": {
        "type": "table",
        "name": "country"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "continent"
    ],
    "input": {
      "operation": "selection",
      "condition": "name='Anguilla'",
      "input": {
        "type": "table",
        "name": "country"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "region"
    ],
    "input": {
      "operation": "join",
      "condition": "city.countrycode = country.code",
      "left": {
        "operation": "selection",
        "condition": "city.name = 'Kabul'",
        "input": {
          "type": "table",
          "name": "city"
        }
      },
      "right": {
        "type": "table",
        "name": "country"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "region"
    ],
    "input": {
      "operation": "join",
      "condition": "city.countrycode = country.code",
      "left": {
        "operation": "selection",
        "condition": "city.name='Kabul'",
        "input": {
          "type": "table",
          "name": "city"
        }
      },
      "right": {
        "type": "table",
        "name": "country"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "language"
    ],
    "input": {
      "operation": "selection",
      "condition": "speakers = max_speakers",
      "input": {
        "operation": "extension",
        "order_by": {
          "attributes": [
            "speakers"
          ],
          "order": "desc"
        },
        "input": {
          "operation": "selection",
          "condition": "countrycode = aruba_code",
          "input": {
            "operation": "cartesian_product",
            "left": {
              "type": "table",
              "name": "countrylanguage"
            },
            "right": {
              "operation": "rename",
              "new_name": "aruba_code",
              "input": {
                "operation": "projection",
                "attributes": [
                  "code"
                ],
                "input": {
                  "operation": "selection",
                  "condition": "name = 'Aruba'",
                  "input": {
                    "type": "table",
                    "name": "country"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "language"
    ],
    "input": {
      "operation": "extension",
      "order_by": {
        "attributes": [
          "percentage"
        ],
        "order": "desc"
      },
      "input": {
        "operation": "selection",
        "condition": "countrycode = aruba_code",
        "input": {
          "operation": "join",
          "condition": "country.code = countrylanguage.countrycode",
          "left": {
            "type": "table",
            "name": "country"
          },
          "right": {
            "type": "table",
            "name": "countrylanguage"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "population",
      "lifeexpectancy"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "attribute": "name",
        "value": "Brazil"
      },
      "input": {
        "type": "table",
        "name": "country"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "population",
      "lifeexpectancy"
    ],
    "input": {
      "operation": "selection",
      "condition": "name = 'Brazil'",
      "input": {
        "type": "table",
        "name": "country"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "region",
      "population"
    ],
    "input": {
      "operation": "selection",
      "condition": "name = 'Angola'",
      "input": {
        "type": "table",
        "name": "country"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "region",
      "population"
    ],
    "input": {
      "operation": "selection",
      "condition": "name = 'Angola'",
      "input": {
        "type": "table",
        "name": "country"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "avg",
        "field": "lifeexpectancy"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "lifeexpectancy"
      ],
      "input": {
        "operation": "selection",
        "condition": "region = 'Central Africa'",
        "input": {
          "type": "table",
          "name": "country"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "avg",
        "field": "lifeexpectancy"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "lifeexpectancy"
      ],
      "input": {
        "operation": "selection",
        "condition": "continent='Africa' AND region='Central Africa'",
        "input": {
          "type": "table",
          "name": "country"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "lifeexpectancy = min_lifeexpectancy",
      "input": {
        "operation": "rename",
        "new_name": "min_lifeexpectancy",
        "input": {
          "operation": "aggregation",
          "aggregates": [
            {
              "type": "min",
              "field": "lifeexpectancy"
            }
          ],
          "input": {
            "operation": "projection",
            "attributes": [
              "lifeexpectancy"
            ],
            "input": {
              "operation": "selection",
              "condition": "continent = 'Asia'",
              "input": {
                "type": "table",
                "name": "country"
              }
            }
          }
        }
      },
      "left": {
        "operation": "selection",
        "condition": "continent = 'Asia'",
        "input": {
          "type": "table",
          "name": "country"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "left": "lifeexpectancy",
        "operator": "=",
        "right": {
          "operation": "aggregation",
          "type": "min",
          "attributes": [
            "lifeexpectancy"
          ],
          "input": {
            "operation": "projection",
            "attributes": [
              "lifeexpectancy"
            ],
            "input": {
              "operation": "selection",
              "condition": {
                "left": "continent",
                "operator": "=",
                "right": "Asia"
              },
              "input": {
                "type": "table",
                "name": "country"
              }
            }
          }
        }
      },
      "input": {
        "operation": "projection",
        "attributes": [
          "name",
          "lifeexpectancy"
        ],
        "input": {
          "operation": "selection",
          "condition": {
            "left": "continent",
            "operator": "=",
            "right": "Asia"
          },
          "input": {
            "type": "table",
            "name": "country"
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "sum",
        "field": "population",
        "alias": "TotalPopulation"
      },
      {
        "type": "max",
        "field": "gnp",
        "alias": "MaxGNP"
      }
    ],
    "input": {
      "operation": "selection",
      "condition": "continent = 'Asia'",
      "input": {
        "type": "table",
        "name": "country"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "totalPopulation",
      "largestGNP"
    ],
    "input": {
      "operation": "join",
      "condition": "",
      "left": {
        "operation": "aggregation",
        "group_by": [],
        "aggregates": [
          {
            "type": "sum",
            "field": "population",
            "alias": "totalPopulation"
          }
        ],
        "input": {
          "operation": "selection",
          "condition": "continent = 'Asia'",
          "input": {
            "type": "table",
            "name": "country"
          }
        }
      },
      "right": {
        "operation": "aggregation",
        "group_by": [],
        "aggregates": [
          {
            "type": "max",
            "field": "gnp",
            "alias": "largestGNP"
          }
        ],
        "input": {
          "operation": "selection",
          "condition": "continent = 'Asia'",
          "input": {
            "type": "table",
            "name": "country"
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "average",
        "field": "lifeexpectancy"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "lifeexpectancy"
      ],
      "input": {
        "operation": "selection",
        "condition": "continent = 'Africa' AND governmentform = 'Republic'",
        "input": {
          "type": "table",
          "name": "country"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "avg",
        "field": "lifeexpectancy"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "lifeexpectancy"
      ],
      "input": {
        "operation": "selection",
        "condition": {
          "and": [
            {
              "attribute": "continent",
              "value": "Africa",
              "operator": "="
            },
            {
              "attribute": "governmentform",
              "value": "Republic",
              "operator": "="
            }
          ]
        },
        "input": {
          "type": "table",
          "name": "country"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "type": "SUM",
    "attributes": [
      "surfacearea"
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "surfacearea"
      ],
      "input": {
        "operation": "selection",
        "condition": {
          "attribute": "continent",
          "operator": "IN",
          "values": [
            "Asia",
            "Europe"
          ]
        },
        "input": {
          "type": "table",
          "name": "country"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "sum",
        "field": "surfacearea"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "surfacearea"
      ],
      "input": {
        "operation": "selection",
        "condition": "continent = 'Asia' or continent = 'Europe'",
        "input": {
          "type": "table",
          "name": "Country"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "sum",
        "field": "population"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "population"
      ],
      "input": {
        "operation": "selection",
        "condition": "district = 'Gelderland'",
        "input": {
          "type": "table",
          "name": "city"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "sum",
        "field": "population"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "population"
      ],
      "input": {
        "operation": "selection",
        "condition": "district = 'Gelderland'",
        "input": {
          "type": "table",
          "name": "city"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "avg",
        "field": "gnp"
      },
      {
        "type": "sum",
        "field": "population"
      }
    ],
    "input": {
      "operation": "selection",
      "condition": "governmentform = 'US Territory'",
      "input": {
        "type": "table",
        "name": "country"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "avg",
        "field": "gnp"
      },
      {
        "type": "sum",
        "field": "population"
      }
    ],
    "input": {
      "operation": "selection",
      "condition": "governmentform = 'US Territory'",
      "input": {
        "type": "table",
        "name": "country"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "language"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "*"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "language"
      ],
      "input": {
        "type": "table",
        "name": "countrylanguage"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "language"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "language"
      ],
      "input": {
        "type": "table",
        "name": "countrylanguage"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "governmentform"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "governmentform"
      ],
      "input": {
        "operation": "selection",
        "condition": "continent = 'Africa'",
        "input": {
          "type": "table",
          "name": "country"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregate": {
      "type": "count"
    },
    "input": {
      "operation": "projection",
      "attributes": [
        "governmentform"
      ],
      "input": {
        "operation": "selection",
        "condition": "continent = 'Africa'",
        "input": {
          "type": "table",
          "name": "country"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "language",
        "alias": "number_of_languages"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "language"
      ],
      "input": {
        "operation": "selection",
        "predicate": "countrycode = ArubaCountry.code",
        "input": {
          "operation": "rename",
          "alias": "ArubaCountry",
          "input": {
            "operation": "selection",
            "predicate": "name = 'Aruba'",
            "input": {
              "type": "table",
              "name": "country"
            }
          }
        },
        "source": {
          "type": "table",
          "name": "countrylanguage"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "language"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "language"
      ],
      "input": {
        "operation": "selection",
        "condition": "countrycode IN (SELECT countrycode FROM country WHERE name = 'Aruba')",
        "input": {
          "type": "table",
          "name": "countrylanguage"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "language"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "language"
      ],
      "input": {
        "operation": "selection",
        "condition": {
          "and": [
            {
              "equals": {
                "attribute": "isofficial",
                "value": "T"
              }
            },
            {
              "equals": {
                "attribute": "countrycode",
                "value": {
                  "operation": "projection",
                  "attributes": [
                    "code"
                  ],
                  "input": {
                    "operation": "selection",
                    "condition": {
                      "equals": {
                        "attribute": "name",
                        "value": "Afghanistan"
                      }
                    },
                    "input": {
                      "type": "table",
                      "name": "country"
                    }
                  }
                }
              }
            }
          ]
        },
        "input": {
          "type": "table",
          "name": "countrylanguage"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "language"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "language"
      ],
      "input": {
        "operation": "selection",
        "condition": "country.code = C AND isofficial = 'T'",
        "input": {
          "operation": "join",
          "condition": "country.code = countrylanguage.countrycode",
          "left": {
            "operation": "projection",
            "attributes": [
              "code"
            ],
            "input": {
              "operation": "selection",
              "condition": "name = 'Afghanistan'",
              "input": {
                "operation": "table",
                "name": "country"
              }
            }
          },
          "right": {
            "operation": "table",
            "name": "countrylanguage"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "country.code = C2.countrycode",
      "left": {
        "type": "table",
        "name": "country"
      },
      "right": {
        "operation": "selection",
        "condition": "language_count = max_lang_count",
        "input": {
          "operation": "cartesian_product",
          "left": {
            "operation": "aggregation",
            "group_by": [
              "countrycode"
            ],
            "aggregates": [
              {
                "type": "count",
                "field": "language",
                "alias": "language_count"
              }
            ],
            "input": {
              "type": "table",
              "name": "countrylanguage"
            }
          },
          "right": {
            "operation": "aggregation",
            "aggregates": [
              {
                "type": "max",
                "field": "language_count",
                "alias": "max_lang_count"
              }
            ],
            "input": {
              "operation": "aggregation",
              "group_by": [
                "countrycode"
              ],
              "aggregates": [
                {
                  "type": "count",
                  "field": "language",
                  "alias": "language_count"
                }
              ],
              "input": {
                "type": "table",
                "name": "countrylanguage"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "L3.countrycode = country.code",
      "left": {
        "operation": "selection",
        "condition": "numLanguages = maxLanguages.numLanguages",
        "input": {
          "operation": "cartesian_product",
          "left": {
            "operation": "aggregation",
            "group_by": [
              "countrycode"
            ],
            "aggregates": [
              {
                "type": "count",
                "field": "language",
                "alias": "numLanguages"
              }
            ],
            "input": {
              "type": "table",
              "name": "countrylanguage"
            }
          },
          "right": {
            "operation": "aggregation",
            "aggregates": [
              {
                "type": "max",
                "field": "numLanguages"
              }
            ],
            "input": {
              "operation": "aggregation",
              "group_by": [
                "countrycode"
              ],
              "aggregates": [
                {
                  "type": "count",
                  "field": "language",
                  "alias": "numLanguages"
                }
              ],
              "input": {
                "type": "table",
                "name": "countrylanguage"
              }
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "country"
      }
    }
  },
  {
    "operation": "selection",
    "condition": "language_count = max(language_count)",
    "input": {
      "operation": "aggregation",
      "group_by": [
        "continent"
      ],
      "aggregates": [
        {
          "type": "count",
          "field": "language",
          "alias": "language_count"
        }
      ],
      "input": {
        "operation": "projection",
        "attributes": [
          "continent",
          "language"
        ],
        "input": {
          "operation": "join",
          "condition": "country.countrycode = countrylanguage.code",
          "left": {
            "type": "table",
            "name": "country"
          },
          "right": {
            "type": "table",
            "name": "countrylanguage"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "continent"
    ],
    "input": {
      "operation": "selection",
      "condition": "languageCount = (SELECT MAX(languageCount) FROM LanguageCounts)",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "continent"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "language"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "language",
            "continent"
          ],
          "input": {
            "operation": "join",
            "condition": "countrylanguage.countrycode = country.code",
            "left": {
              "type": "table",
              "name": "countrylanguage"
            },
            "right": {
              "type": "table",
              "name": "country"
            }
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "countrycode"
      }
    ],
    "input": {
      "operation": "intersection",
      "left": {
        "operation": "projection",
        "attributes": [
          "countrycode"
        ],
        "input": {
          "operation": "selection",
          "condition": "language = 'English'",
          "input": {
            "type": "table",
            "name": "countrylanguage"
          }
        }
      },
      "right": {
        "operation": "projection",
        "attributes": [
          "countrycode"
        ],
        "input": {
          "operation": "selection",
          "condition": "language = 'Dutch'",
          "input": {
            "type": "table",
            "name": "countrylanguage"
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "countrycode"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "countrycode"
      }
    ],
    "input": {
      "operation": "intersection",
      "left": {
        "operation": "projection",
        "attributes": [
          "countrycode"
        ],
        "input": {
          "operation": "selection",
          "condition": "language = 'English' AND isofficial = 'T'",
          "input": {
            "type": "table",
            "name": "countrylanguage"
          }
        }
      },
      "right": {
        "operation": "projection",
        "attributes": [
          "countrycode"
        ],
        "input": {
          "operation": "selection",
          "condition": "language = 'Dutch' AND isofficial = 'T'",
          "input": {
            "type": "table",
            "name": "countrylanguage"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "operation": "in",
        "attribute": "code",
        "value": {
          "operation": "intersection",
          "input1": {
            "operation": "projection",
            "attributes": [
              "countrycode"
            ],
            "input": {
              "operation": "selection",
              "condition": {
                "AND": [
                  {
                    "attribute": "language",
                    "value": "English"
                  },
                  {
                    "attribute": "isofficial",
                    "value": "T"
                  }
                ]
              },
              "input": {
                "type": "table",
                "name": "countrylanguage"
              }
            }
          },
          "input2": {
            "operation": "projection",
            "attributes": [
              "countrycode"
            ],
            "input": {
              "operation": "selection",
              "condition": {
                "AND": [
                  {
                    "attribute": "language",
                    "value": "French"
                  },
                  {
                    "attribute": "isofficial",
                    "value": "T"
                  }
                ]
              },
              "input": {
                "type": "table",
                "name": "countrylanguage"
              }
            }
          }
        }
      },
      "input": {
        "type": "table",
        "name": "country"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "BothLanguagesCountries.countrycode = country.code",
      "left": {
        "operation": "intersection",
        "left": {
          "operation": "projection",
          "attributes": [
            "countrycode"
          ],
          "input": {
            "operation": "selection",
            "condition": "language = 'English' AND isofficial = 'T'",
            "input": {
              "type": "table",
              "name": "countrylanguage"
            }
          }
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "countrycode"
          ],
          "input": {
            "operation": "selection",
            "condition": "language = 'French' AND isofficial = 'T'",
            "input": {
              "type": "table",
              "name": "countrylanguage"
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "country"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "code IN (SELECT countrycode FROM countrylanguage WHERE language = 'English' AND isofficial = true INTERSECT SELECT countrycode FROM countrylanguage WHERE language = 'French' AND isofficial = true)",
      "input": {
        "operation": "table",
        "name": "country"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "countrylanguage.countrycode = country.code",
      "input": {
        "operation": "intersection",
        "inputs": [
          {
            "operation": "selection",
            "condition": "language = 'English' AND isofficial = true",
            "input": {
              "type": "table",
              "name": "countrylanguage"
            }
          },
          {
            "operation": "selection",
            "condition": "language = 'French' AND isofficial = true",
            "input": {
              "type": "table",
              "name": "countrylanguage"
            }
          }
        ]
      },
      "right": {
        "type": "table",
        "name": "country"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "continent"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "continent"
      ],
      "input": {
        "operation": "projection",
        "attributes": [
          "continent"
        ],
        "input": {
          "operation": "join",
          "condition": "countrylanguage.countrycode = country.code",
          "left": {
            "operation": "projection",
            "attributes": [
              "countrycode"
            ],
            "input": {
              "operation": "selection",
              "condition": "language = 'Chinese'",
              "input": {
                "type": "table",
                "name": "countrylanguage"
              }
            }
          },
          "right": {
            "type": "table",
            "name": "country"
          }
        }
      },
      "distinct": true
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "continent"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "continent"
      ],
      "input": {
        "operation": "join",
        "condition": "countrylanguage.countrycode = country.code",
        "left": {
          "operation": "selection",
          "condition": "language = 'Chinese'",
          "input": {
            "type": "table",
            "name": "countrylanguage"
          }
        },
        "right": {
          "type": "table",
          "name": "country"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "region"
    ],
    "input": {
      "operation": "join",
      "condition": "countrylanguage.countrycode = country.code",
      "left": {
        "operation": "selection",
        "condition": "language = 'English' OR language = 'Dutch'",
        "input": {
          "type": "table",
          "name": "countrylanguage"
        }
      },
      "right": {
        "type": "table",
        "name": "country"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "region"
    ],
    "distinct": true,
    "input": {
      "operation": "join",
      "condition": {
        "left": "countrylanguage.countrycode",
        "right": "country.code"
      },
      "left": {
        "operation": "projection",
        "attributes": [
          "countrycode"
        ],
        "input": {
          "operation": "selection",
          "condition": {
            "or": [
              {
                "attribute": "language",
                "value": "Dutch"
              },
              {
                "attribute": "language",
                "value": "English"
              }
            ]
          },
          "input": {
            "type": "table",
            "name": "countrylanguage"
          }
        }
      },
      "right": {
        "type": "table",
        "name": "country"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "countrylanguage.countrycode = country.code",
      "left": {
        "operation": "projection",
        "attributes": [
          "countrycode"
        ],
        "input": {
          "operation": "selection",
          "condition": "(isofficial = true) AND (language = 'English' OR language = 'Dutch')",
          "input": {
            "type": "table",
            "name": "countrylanguage"
          }
        }
      },
      "right": {
        "type": "table",
        "name": "country"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "ccode = code",
      "left": {
        "operation": "rename",
        "new_name": "ccode",
        "attribute": "countrycode",
        "input": {
          "operation": "projection",
          "attributes": [
            "countrycode"
          ],
          "input": {
            "operation": "selection",
            "condition": "(language = 'English' OR language = 'Dutch') AND isofficial = 'T'",
            "input": {
              "type": "table",
              "name": "countrylanguage"
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "country"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "language"
    ],
    "input": {
      "operation": "selection",
      "condition": "total_percentage = max(total_percentage)",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "language"
        ],
        "aggregates": [
          {
            "type": "sum",
            "field": "percentage",
            "alias": "total_percentage"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "language",
            "percentage"
          ],
          "input": {
            "operation": "join",
            "condition": "AsianCountries.code = countrylanguage.countrycode",
            "left": {
              "operation": "selection",
              "condition": "continent = 'Asia'",
              "input": {
                "type": "table",
                "name": "country"
              }
            },
            "right": {
              "type": "table",
              "name": "countrylanguage"
            }
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "language"
    ],
    "aggregates": [
      {
        "type": "max",
        "field": "NumCountries"
      }
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "language"
      ],
      "aggregates": [
        {
          "type": "count",
          "field": "countrycode",
          "as": "NumCountries"
        }
      ],
      "input": {
        "operation": "projection",
        "attributes": [
          "language",
          "countrycode"
        ],
        "input": {
          "operation": "join",
          "condition": "country.code = countrylanguage.countrycode",
          "left": {
            "operation": "selection",
            "condition": "continent = 'Asia'",
            "input": {
              "type": "table",
              "name": "country"
            }
          },
          "right": {
            "type": "table",
            "name": "countrylanguage"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "language"
    ],
    "input": {
      "operation": "selection",
      "condition": "num_countries = 1",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "language"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "countrycode",
            "alias": "num_countries"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "countrycode",
            "language"
          ],
          "input": {
            "operation": "join",
            "condition": "country.code = countrylanguage.countrycode",
            "left": {
              "operation": "selection",
              "condition": "governmentform = 'Republic'",
              "input": {
                "type": "table",
                "name": "country"
              }
            },
            "right": {
              "type": "table",
              "name": "countrylanguage"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "language"
    ],
    "input": {
      "operation": "join",
      "condition": "R5.language = R2.language",
      "left": {
        "operation": "selection",
        "condition": "country_count = 1",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "language"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "countrycode",
              "alias": "country_count"
            }
          ],
          "input": {
            "operation": "projection",
            "attributes": [
              "language",
              "countrycode"
            ],
            "input": {
              "operation": "join",
              "condition": "R1.code = countrylanguage.countrycode",
              "left": {
                "operation": "selection",
                "condition": "governmentform = 'Republic'",
                "input": {
                  "type": "table",
                  "name": "country"
                }
              },
              "right": {
                "type": "table",
                "name": "countrylanguage"
              }
            }
          }
        }
      },
      "right": {
        "operation": "projection",
        "attributes": [
          "language",
          "countrycode"
        ],
        "input": {
          "operation": "join",
          "condition": "R1.code = countrylanguage.countrycode",
          "left": {
            "operation": "selection",
            "condition": "governmentform = 'Republic'",
            "input": {
              "type": "table",
              "name": "country"
            }
          },
          "right": {
            "type": "table",
            "name": "countrylanguage"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "population = max(Cities_english.population)",
      "input": {
        "operation": "join",
        "condition": "C_english_codes.countrycode = city.countrycode",
        "left": {
          "operation": "projection",
          "attributes": [
            "countrycode"
          ],
          "input": {
            "operation": "selection",
            "condition": "language='English' \u2227 isofficial='T'",
            "input": {
              "type": "table",
              "name": "countrylanguage"
            }
          }
        },
        "right": {
          "type": "table",
          "name": "city"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "countrycode",
      "name"
    ],
    "aggregates": [
      {
        "type": "max",
        "field": "population"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "population",
        "name",
        "countrycode"
      ],
      "input": {
        "operation": "join",
        "condition": "city.countrycode = countrylanguage.countrycode",
        "left": {
          "operation": "projection",
          "attributes": [
            "countrycode"
          ],
          "input": {
            "operation": "selection",
            "condition": "language = 'English'",
            "input": {
              "type": "table",
              "name": "countrylanguage"
            }
          }
        },
        "right": {
          "type": "table",
          "name": "city"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "population",
      "expect_life"
    ],
    "input": {
      "operation": "selection",
      "condition": "area = (SELECT MAX(area) FROM (SELECT * FROM country WHERE continent = 'Asia'))",
      "input": {
        "operation": "selection",
        "condition": "continent = 'Asia'",
        "input": {
          "type": "table",
          "name": "country"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "population",
      "lifeexpectancy"
    ],
    "input": {
      "operation": "selection",
      "condition": "population = (MAX(AsianCountries.population))",
      "input": {
        "operation": "selection",
        "condition": "continent = 'Asia'",
        "input": {
          "type": "table",
          "name": "country"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "avg",
        "field": "lifeexpectancy"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "lifeexpectancy"
      ],
      "input": {
        "operation": "rename",
        "alias": "X",
        "input": {
          "operation": "selection",
          "condition": {
            "attribute": "code",
            "in": {
              "operation": "projection",
              "attributes": [
                "countrycode"
              ],
              "input": {
                "operation": "selection",
                "condition": {
                  "and": [
                    {
                      "attribute": "language",
                      "value": "English"
                    },
                    {
                      "attribute": "isofficial",
                      "value": "false"
                    }
                  ]
                },
                "input": {
                  "type": "table",
                  "name": "countrylanguage"
                }
              }
            }
          },
          "input": {
            "type": "table",
            "name": "country"
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "mean",
        "field": "lifeexpectancy"
      }
    ],
    "input": {
      "operation": "difference",
      "left": {
        "operation": "projection",
        "attributes": [
          "lifeexpectancy"
        ],
        "input": {
          "operation": "table",
          "name": "country"
        }
      },
      "right": {
        "operation": "projection",
        "attributes": [
          "lifeexpectancy"
        ],
        "input": {
          "operation": "rename",
          "name": "C1",
          "input": {
            "operation": "join",
            "condition": "R.countrycode = country.code",
            "left": {
              "operation": "projection",
              "attributes": [
                "countrycode"
              ],
              "input": {
                "operation": "selection",
                "condition": "language = 'English' AND isofficial = 'T'",
                "input": {
                  "operation": "table",
                  "name": "countrylanguage"
                }
              }
            },
            "right": {
              "operation": "table",
              "name": "country"
            }
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "sum",
        "field": "population"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "population"
      ],
      "input": {
        "operation": "selection",
        "condition": "code IN (projection(code, input(country))) - projection(countrycode, selection(language = 'English' AND isofficial = 'T', input(countrylanguage)))",
        "input": {
          "operation": "table",
          "name": "country"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "sum",
        "field": "population"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "population"
      ],
      "input": {
        "operation": "selection",
        "condition": "code",
        "in": {
          "operation": "difference",
          "left": {
            "operation": "projection",
            "attributes": [
              "code"
            ],
            "input": {
              "type": "table",
              "name": "country"
            }
          },
          "right": {
            "operation": "projection",
            "attributes": [
              "countrycode"
            ],
            "input": {
              "operation": "selection",
              "condition": "language = 'English'",
              "input": {
                "type": "table",
                "name": "countrylanguage"
              }
            }
          }
        },
        "input": {
          "type": "table",
          "name": "country"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "language"
    ],
    "input": {
      "operation": "join",
      "condition": "countrylanguage.countrycode = country.code",
      "left": {
        "type": "table",
        "name": "countrylanguage"
      },
      "right": {
        "operation": "selection",
        "condition": "headofstate = 'Beatrix'",
        "input": {
          "type": "table",
          "name": "country"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "language"
    ],
    "input": {
      "operation": "selection",
      "condition": "countrylanguage.countrycode = result.code",
      "input": {
        "operation": "join",
        "condition": "countrylanguage.countrycode = country.code",
        "left": {
          "type": "table",
          "name": "countrylanguage"
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "code"
          ],
          "input": {
            "operation": "selection",
            "condition": "headofstate = 'Beatrix'",
            "input": {
              "type": "table",
              "name": "country"
            }
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "distinct": true,
        "field": "language"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "language"
      ],
      "input": {
        "operation": "selection",
        "condition": "isofficial = true",
        "input": {
          "operation": "join",
          "condition": "country.code = countrylanguage.countrycode",
          "left": {
            "operation": "selection",
            "condition": "indepyear < 1930",
            "input": {
              "type": "table",
              "name": "country"
            }
          },
          "right": {
            "type": "table",
            "name": "countrylanguage"
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "language"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "language"
      ],
      "input": {
        "operation": "selection",
        "condition": "isofficial = 'T'",
        "input": {
          "operation": "join",
          "condition": "country.code = countrylanguage.countrycode",
          "left": {
            "operation": "selection",
            "condition": "founded < 1930",
            "input": {
              "type": "table",
              "name": "country"
            }
          },
          "right": {
            "type": "table",
            "name": "countrylanguage"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "surfacearea > (\u03b3_{max(surfacearea)}(\u03c0_{surfacearea}(\u03c3_{continent = 'Europe'}(country))).max_surfacearea)",
      "input": {
        "type": "table",
        "name": "country"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "code",
      "name",
      "continent",
      "region"
    ],
    "input": {
      "operation": "selection",
      "condition": "country.area > MaxAreaEurope.maxArea",
      "input": {
        "operation": "cartesian_product",
        "left": {
          "type": "table",
          "name": "country"
        },
        "right": {
          "operation": "aggregation",
          "group_by": [],
          "aggregates": [
            {
              "type": "max",
              "field": "area",
              "alias": "maxArea"
            }
          ],
          "input": {
            "operation": "selection",
            "condition": "continent = 'Europe'",
            "input": {
              "type": "table",
              "name": "country"
            }
          }
        }
      }
    }
  },
  {
    "operation": "difference",
    "input1": {
      "operation": "projection",
      "attributes": [
        "name"
      ],
      "input": {
        "operation": "selection",
        "condition": "continent = 'Africa'",
        "input": {
          "type": "table",
          "name": "country"
        }
      }
    },
    "input2": {
      "operation": "projection",
      "attributes": [
        "A.name"
      ],
      "input": {
        "operation": "join",
        "condition": "A.population >= B.population",
        "input1": {
          "operation": "projection",
          "attributes": [
            "A.name",
            "A.population"
          ],
          "input": {
            "operation": "selection",
            "condition": "continent = 'Africa'",
            "input": {
              "type": "table",
              "name": "country"
            }
          }
        },
        "input2": {
          "operation": "selection",
          "condition": "continent = 'Asia'",
          "input": {
            "type": "table",
            "name": "country"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "code",
      "name",
      "population"
    ],
    "input": {
      "operation": "selection",
      "condition": "population < (SELECT MIN(population) FROM country WHERE continent = 'Asia')",
      "input": {
        "operation": "selection",
        "condition": "continent = 'Africa'",
        "input": {
          "type": "table",
          "name": "country"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "attribute": "population",
        "operator": ">",
        "value": "M_population"
      },
      "input": {
        "operation": "cartesian_product",
        "left": {
          "operation": "selection",
          "condition": {
            "attribute": "continent",
            "operator": "=",
            "value": "Asia"
          },
          "input": {
            "type": "table",
            "name": "country"
          }
        },
        "right": {
          "operation": "rename",
          "new_name": "M_population",
          "input": {
            "operation": "aggregation",
            "group_by": [],
            "aggregates": [
              {
                "type": "MAX",
                "field": "population"
              }
            ],
            "input": {
              "operation": "projection",
              "attributes": [
                "population"
              ],
              "input": {
                "operation": "selection",
                "condition": {
                  "attribute": "continent",
                  "operator": "=",
                  "value": "Africa"
                },
                "input": {
                  "type": "table",
                  "name": "country"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "step1": {
      "operation": "selection",
      "condition": {
        "attribute": "continent",
        "value": "Africa"
      },
      "input": {
        "type": "table",
        "name": "country"
      }
    },
    "step2": {
      "operation": "selection",
      "condition": {
        "attribute": "continent",
        "value": "Asia"
      },
      "input": {
        "type": "table",
        "name": "country"
      }
    },
    "step3": {
      "operation": "aggregation",
      "group_by": [],
      "aggregates": [
        {
          "type": "max",
          "field": "population",
          "alias": "maxPopulation"
        }
      ],
      "input": {
        "operation": "rename",
        "attributes": [
          "dummy",
          "population"
        ],
        "input": {
          "operation": "sum",
          "attributes": [
            "population"
          ],
          "input": {
            "operation": "selection",
            "condition": {
              "attribute": "continent",
              "value": "Africa"
            },
            "input": {
              "type": "table",
              "name": "country"
            }
          }
        }
      }
    },
    "step4": {
      "operation": "selection",
      "condition": {
        "attribute": "population",
        "operator": ">",
        "value": "maxPopulation"
      },
      "input": {
        "operation": "selection",
        "condition": {
          "attribute": "continent",
          "value": "Asia"
        },
        "input": {
          "type": "table",
          "name": "country"
        }
      }
    }
  },
  {
    "operation": "difference",
    "input1": {
      "operation": "projection",
      "attributes": [
        "code"
      ],
      "input": {
        "operation": "table",
        "name": "country"
      }
    },
    "input2": {
      "operation": "projection",
      "attributes": [
        "countrycode"
      ],
      "input": {
        "operation": "selection",
        "condition": {
          "attribute": "language",
          "value": "English",
          "operator": "="
        },
        "input": {
          "operation": "table",
          "name": "countrylanguage"
        }
      }
    }
  },
  {
    "operation": "difference",
    "left": {
      "operation": "projection",
      "attributes": [
        "code"
      ],
      "input": {
        "type": "table",
        "name": "Country"
      }
    },
    "right": {
      "operation": "projection",
      "attributes": [
        "countrycode"
      ],
      "input": {
        "operation": "selection",
        "condition": "language = 'English'",
        "input": {
          "type": "table",
          "name": "CountryLanguage"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "countrycode"
    ],
    "input": {
      "operation": "selection",
      "condition": "language != 'English'",
      "input": {
        "type": "table",
        "name": "countrylanguage"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "countrycode"
    ],
    "input": {
      "operation": "selection",
      "condition": "language != 'English'",
      "input": {
        "type": "table",
        "name": "countrylanguage"
      }
    },
    "distinct": true
  },
  {
    "operation": "intersection",
    "input": [
      {
        "operation": "difference",
        "input": {
          "operation": "projection",
          "attributes": [
            "code"
          ],
          "input": {
            "operation": "table",
            "name": "country"
          }
        },
        "subtract": {
          "operation": "projection",
          "attributes": [
            "countrycode"
          ],
          "input": {
            "operation": "selection",
            "condition": "language = 'English' AND isofficial = true",
            "input": {
              "operation": "table",
              "name": "countrylanguage"
            }
          }
        }
      },
      {
        "operation": "projection",
        "attributes": [
          "code"
        ],
        "input": {
          "operation": "selection",
          "condition": "governmentform != 'Republic'",
          "input": {
            "operation": "table",
            "name": "country"
          }
        }
      }
    ]
  },
  {
    "operation": "intersection",
    "input1": {
      "operation": "difference",
      "input1": {
        "operation": "projection",
        "attributes": [
          "code"
        ],
        "input": {
          "type": "table",
          "name": "country"
        }
      },
      "input2": {
        "operation": "projection",
        "attributes": [
          "countrycode"
        ],
        "input": {
          "operation": "selection",
          "condition": "language='English'",
          "input": {
            "type": "table",
            "name": "countrylanguage"
          }
        }
      }
    },
    "input2": {
      "operation": "projection",
      "attributes": [
        "code"
      ],
      "input": {
        "operation": "selection",
        "condition": "governmenttype != 'Republic'",
        "input": {
          "type": "table",
          "name": "country"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "operation": "in",
        "attributes": [
          "countrycode"
        ],
        "set": {
          "operation": "projection",
          "attributes": [
            "code"
          ],
          "input": {
            "operation": "difference",
            "left": {
              "operation": "projection",
              "attributes": [
                "code"
              ],
              "input": {
                "operation": "selection",
                "condition": "continent = 'Europe'",
                "input": {
                  "type": "table",
                  "name": "country"
                }
              }
            },
            "right": {
              "operation": "projection",
              "attributes": [
                "countrycode"
              ],
              "input": {
                "operation": "join",
                "condition": "EnglishLanguages.countrycode = EuropeanCountries.code",
                "left": {
                  "operation": "selection",
                  "condition": "isofficial = 'T'",
                  "input": {
                    "operation": "selection",
                    "condition": "language = 'English'",
                    "input": {
                      "type": "table",
                      "name": "countrylanguage"
                    }
                  }
                },
                "right": {
                  "operation": "selection",
                  "condition": "continent = 'Europe'",
                  "input": {
                    "type": "table",
                    "name": "country"
                  }
                }
              }
            }
          }
        }
      },
      "input": {
        "type": "table",
        "name": "city"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "city.name"
    ],
    "input": {
      "operation": "difference",
      "left": {
        "operation": "projection",
        "attributes": [
          "city.name"
        ],
        "input": {
          "operation": "join",
          "condition": "city.countrycode = country.code",
          "left": {
            "type": "table",
            "name": "city"
          },
          "right": {
            "operation": "projection",
            "attributes": [
              "name",
              "code"
            ],
            "input": {
              "operation": "selection",
              "condition": "continent = 'Europe'",
              "input": {
                "type": "table",
                "name": "country"
              }
            }
          }
        }
      },
      "right": {
        "operation": "projection",
        "attributes": [
          "city.name"
        ],
        "input": {
          "operation": "join",
          "condition": "city.countrycode = countrycode",
          "left": {
            "operation": "projection",
            "attributes": [
              "city.name",
              "city.countrycode"
            ],
            "input": {
              "operation": "join",
              "condition": "city.countrycode = country.code",
              "left": {
                "type": "table",
                "name": "city"
              },
              "right": {
                "operation": "projection",
                "attributes": [
                  "name",
                  "code"
                ],
                "input": {
                  "operation": "selection",
                  "condition": "continent = 'Europe'",
                  "input": {
                    "type": "table",
                    "name": "country"
                  }
                }
              }
            }
          },
          "right": {
            "operation": "projection",
            "attributes": [
              "countrycode"
            ],
            "input": {
              "operation": "selection",
              "condition": "language = 'English'",
              "input": {
                "type": "table",
                "name": "countrylanguage"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "city.name"
    ],
    "input": {
      "operation": "join",
      "condition": "city.countrycode = country.code",
      "left": {
        "operation": "join",
        "condition": "country.code = countrylanguage.countrycode",
        "left": {
          "operation": "selection",
          "condition": "continent = 'Asia'",
          "input": {
            "type": "table",
            "name": "country"
          }
        },
        "right": {
          "operation": "selection",
          "condition": "language = 'Chinese' AND isofficial = 'True'",
          "input": {
            "type": "table",
            "name": "countrylanguage"
          }
        }
      },
      "right": {
        "type": "table",
        "name": "city"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "city.countrycode = countrylanguage.countrycode",
      "left": {
        "operation": "projection",
        "attributes": [
          "name",
          "countrycode"
        ],
        "input": {
          "type": "table",
          "name": "city"
        }
      },
      "right": {
        "operation": "selection",
        "condition": "language = 'Chinese' AND isofficial = 'T'",
        "input": {
          "type": "table",
          "name": "countrylanguage"
        }
      }
    },
    "distinct": true
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "indepyear",
      "surfacearea"
    ],
    "input": {
      "operation": "selection",
      "condition": "population = MIN_POPULATION",
      "input": {
        "operation": "rename",
        "name": "MIN_POPULATION",
        "input": {
          "operation": "aggregation",
          "aggregates": [
            {
              "type": "min",
              "field": "population"
            }
          ],
          "input": {
            "type": "table",
            "name": "country"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "indepyear",
      "surfacearea"
    ],
    "input": {
      "operation": "selection",
      "condition": "population = MinPop",
      "input": {
        "operation": "aggregation",
        "group_by": [],
        "aggregates": [
          {
            "type": "min",
            "field": "population"
          }
        ],
        "input": {
          "type": "table",
          "name": "country"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "population",
      "name",
      "headofstate"
    ],
    "input": {
      "operation": "selection",
      "condition": "surfacearea = MAX(temp1.surfacearea)",
      "input": {
        "operation": "rename",
        "new_name": "temp1",
        "input": {
          "operation": "projection",
          "attributes": [
            "surfacearea"
          ],
          "input": {
            "type": "table",
            "name": "country"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "population",
      "headofstate"
    ],
    "input": {
      "operation": "selection",
      "condition": "surfacearea = max(surfacearea)",
      "input": {
        "operation": "rename",
        "new_name": "surfacearea",
        "input": {
          "operation": "projection",
          "attributes": [
            "surfacearea"
          ],
          "input": {
            "type": "table",
            "name": "country"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "languagecount"
    ],
    "input": {
      "operation": "selection",
      "condition": "languagecount >= 3",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "name"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "language",
            "alias": "languagecount"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "name",
            "language"
          ],
          "input": {
            "operation": "selection",
            "condition": "country.code = countrylanguage.countrycode",
            "input": {
              "operation": "cartesian_product",
              "left": {
                "type": "table",
                "name": "country"
              },
              "right": {
                "type": "table",
                "name": "countrylanguage"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "C.name",
      "num_languages"
    ],
    "input": {
      "operation": "selection",
      "condition": "num_languages > 2",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "C.name",
          "CL.countrycode"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "CL.language",
            "as": "num_languages"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "C.name",
            "CL.countrycode",
            "CL.language"
          ],
          "input": {
            "operation": "join",
            "condition": "CL.countrycode = C.code",
            "left": {
              "type": "table",
              "name": "CL"
            },
            "right": {
              "type": "table",
              "name": "C"
            }
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "district"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "id",
        "alias": "numCities"
      }
    ],
    "input": {
      "operation": "selection",
      "condition": "population > avgPop",
      "input": {
        "operation": "table",
        "name": "City"
      }
    },
    "pre_computed": {
      "avgPop": {
        "operation": "extension",
        "attributes": [
          {
            "type": "avg",
            "field": "population",
            "alias": "avgPop"
          }
        ],
        "input": {
          "operation": "table",
          "name": "City"
        }
      }
    }
  },
  [
    {
      "operation": "projection",
      "attributes": [
        "population"
      ],
      "input": {
        "type": "table",
        "name": "city"
      },
      "alias": "AvgPopulation"
    },
    {
      "operation": "aggregation",
      "group_by": [],
      "aggregates": [
        {
          "type": "sum",
          "field": "population",
          "alias": "TotalPopulation"
        }
      ],
      "input": {
        "operation": "projection",
        "attributes": [
          "population"
        ],
        "input": {
          "type": "table",
          "name": "city"
        }
      }
    },
    {
      "operation": "aggregation",
      "group_by": [],
      "aggregates": [
        {
          "type": "count",
          "field": "*",
          "alias": "CityCount"
        }
      ],
      "input": {
        "type": "table",
        "name": "city"
      }
    },
    {
      "operation": "extension",
      "calculate": {
        "attributes": [
          "TotalPopulation / CityCount"
        ],
        "alias": "AveragePopulation"
      },
      "input": {}
    },
    {
      "operation": "selection",
      "condition": "population > AveragePopulation",
      "input": {
        "type": "table",
        "name": "city"
      },
      "alias": "AboveAvgCities"
    },
    {
      "operation": "aggregation",
      "group_by": [
        "district"
      ],
      "aggregates": [
        {
          "type": "count",
          "field": "name",
          "alias": "num_cities"
        }
      ],
      "input": {
        "type": "alias",
        "name": "AboveAvgCities"
      },
      "alias": "CitiesPerDistrict"
    }
  ],
  {
    "operation": "projection",
    "attributes": [
      "T.governmentform",
      "P.total_population"
    ],
    "input": {
      "operation": "join",
      "condition": "T.governmentform = P.governmentform",
      "left": {
        "operation": "rename",
        "alias": "T",
        "input": {
          "operation": "selection",
          "condition": "average_lifeexpectancy > 72",
          "input": {
            "operation": "aggregation",
            "group_by": [
              "governmentform"
            ],
            "aggregates": [
              {
                "type": "avg",
                "field": "lifeexpectancy",
                "alias": "average_lifeexpectancy"
              }
            ],
            "input": {
              "type": "table",
              "name": "Country"
            }
          }
        }
      },
      "right": {
        "operation": "rename",
        "alias": "P",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "governmentform"
          ],
          "aggregates": [
            {
              "type": "sum",
              "field": "population",
              "alias": "total_population"
            }
          ],
          "input": {
            "type": "table",
            "name": "Country"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "governmentform",
      "total_population"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "governmentform"
      ],
      "aggregates": [
        {
          "type": "sum",
          "field": "population",
          "alias": "total_population"
        }
      ],
      "input": {
        "operation": "selection",
        "condition": "lifeexpectancy > 72",
        "input": {
          "type": "table",
          "name": "country"
        }
      }
    }
  },
  {
    "operation": "selection",
    "condition": "ave_lifeexp < 72",
    "input": {
      "operation": "aggregation",
      "group_by": [
        "continent"
      ],
      "aggregates": [
        {
          "type": "avg",
          "field": "lifeexpectancy",
          "alias": "ave_lifeexp"
        },
        {
          "type": "sum",
          "field": "population",
          "alias": "total_pop"
        }
      ],
      "input": {
        "type": "table",
        "name": "country"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "continent",
      "TotalPopulation",
      "AvgLifeExpectancy"
    ],
    "input": {
      "operation": "selection",
      "condition": "AvgLifeExpectancy < 72",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "continent"
        ],
        "aggregates": [
          {
            "type": "sum",
            "field": "population",
            "alias": "TotalPopulation"
          },
          {
            "type": "avg",
            "field": "lifeexpectancy",
            "alias": "AvgLifeExpectancy"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "continent",
            "population",
            "lifeexpectancy"
          ],
          "input": {
            "type": "table",
            "name": "country"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "surfacearea"
    ],
    "input": {
      "operation": "selection",
      "condition": "head(5)",
      "input": {
        "operation": "extension",
        "order_by": {
          "attributes": [
            "surfacearea"
          ],
          "order": "desc"
        },
        "input": {
          "type": "table",
          "name": "country"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "surfacearea"
    ],
    "input": {
      "operation": "selection",
      "condition": "rank <= 5",
      "input": {
        "operation": "extension",
        "order_by": {
          "attributes": [
            "surfacearea"
          ],
          "order": "desc"
        },
        "input": {
          "operation": "rename",
          "target": "rank",
          "source": {
            "operation": "extension",
            "attributes": {
              "surfacearea": "rank"
            },
            "input": {
              "type": "table",
              "name": "country"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "attribute": "rank",
        "operator": "<=",
        "value": 3
      },
      "input": {
        "operation": "extension",
        "order_by": {
          "attributes": [
            "population"
          ],
          "order": "desc"
        },
        "input": {
          "type": "table",
          "name": "country"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "union",
      "inputs": [
        {
          "operation": "projection",
          "attributes": [
            "population",
            "name"
          ],
          "input": {
            "operation": "rename",
            "new_name": "R",
            "input": {
              "operation": "extension",
              "order_by": {
                "attributes": [
                  "population"
                ],
                "order": "desc"
              },
              "input": {
                "operation": "selection",
                "condition": "index = 1",
                "input": {
                  "type": "table",
                  "name": "country"
                }
              }
            }
          }
        },
        {
          "operation": "projection",
          "attributes": [
            "population",
            "name"
          ],
          "input": {
            "operation": "rename",
            "new_name": "R",
            "input": {
              "operation": "extension",
              "order_by": {
                "attributes": [
                  "population"
                ],
                "order": "desc"
              },
              "input": {
                "operation": "selection",
                "condition": "index = 2",
                "input": {
                  "type": "table",
                  "name": "country"
                }
              }
            }
          }
        },
        {
          "operation": "projection",
          "attributes": [
            "population",
            "name"
          ],
          "input": {
            "operation": "rename",
            "new_name": "R",
            "input": {
              "operation": "extension",
              "order_by": {
                "attributes": [
                  "population"
                ],
                "order": "desc"
              },
              "input": {
                "operation": "selection",
                "condition": "index = 3",
                "input": {
                  "type": "table",
                  "name": "country"
                }
              }
            }
          }
        }
      ]
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "row <= 3",
      "input": {
        "operation": "rename",
        "new_attributes": [
          "row",
          "population",
          "name"
        ],
        "input": {
          "operation": "extension",
          "order_by": {
            "attributes": [
              "population"
            ],
            "order": "asc"
          },
          "input": {
            "operation": "projection",
            "attributes": [
              "name",
              "population"
            ],
            "input": {
              "operation": "table",
              "name": "country"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "population"
    ],
    "input": {
      "operation": "extension",
      "order_by": {
        "attributes": [
          "population"
        ],
        "order": "asc"
      },
      "input": {
        "operation": "extension",
        "limit": 3,
        "input": {
          "operation": "table",
          "name": "country"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "code"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "code"
      ],
      "input": {
        "operation": "selection",
        "condition": "continent = 'Asia'",
        "input": {
          "type": "table",
          "name": "country"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "code"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "code"
      ],
      "input": {
        "operation": "selection",
        "condition": "continent = 'Asia'",
        "input": {
          "type": "table",
          "name": "country"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "continent = 'Europe' AND population = 80000",
      "input": {
        "type": "table",
        "name": "country"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "and": [
          {
            "attribute": "continent",
            "value": "Europe"
          },
          {
            "attribute": "population",
            "value": 80000
          }
        ]
      },
      "input": {
        "type": "table",
        "name": "country"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "sum",
        "field": "population",
        "alias": "TotalPopulation"
      },
      {
        "type": "avg",
        "field": "surfacearea",
        "alias": "AverageArea"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "population",
        "surfacearea"
      ],
      "input": {
        "operation": "selection",
        "condition": "continent = 'North America' AND surfacearea > 3000",
        "input": {
          "type": "table",
          "name": "Country"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "sum",
        "field": "population"
      },
      {
        "type": "avg",
        "field": "surfacearea"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "population",
        "surfacearea"
      ],
      "input": {
        "operation": "selection",
        "condition": {
          "and": [
            {
              "field": "continent",
              "op": "=",
              "value": "North America"
            },
            {
              "field": "surfacearea",
              "op": ">",
              "value": 3000
            }
          ]
        },
        "input": {
          "type": "table",
          "name": "country"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "population >= 160000 AND population <= 900000",
      "input": {
        "type": "table",
        "name": "city"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "160000 <= population <= 900000",
      "input": {
        "type": "table",
        "name": "City"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "language"
    ],
    "input": {
      "operation": "selection",
      "condition": "num_countries = MaxCount",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "language"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "countrycode",
            "alias": "num_countries"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "language",
            "countrycode"
          ],
          "input": {
            "type": "table",
            "name": "countrylanguage"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "language"
    ],
    "input": {
      "operation": "selection",
      "condition": "country_count = MAX_COUNTRY_COUNT.country_count",
      "input": {
        "operation": "cartesian_product",
        "left": {
          "operation": "aggregation",
          "group_by": [
            "language"
          ],
          "aggregates": [
            {
              "type": "count_distinct",
              "field": "countrycode",
              "alias": "country_count"
            }
          ],
          "input": {
            "type": "table",
            "name": "countrylanguage"
          }
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "MAX(country_count)"
          ],
          "input": {
            "operation": "aggregation",
            "group_by": [],
            "aggregates": [
              {
                "type": "max",
                "field": "country_count"
              }
            ],
            "input": {
              "operation": "aggregation",
              "group_by": [
                "language"
              ],
              "aggregates": [
                {
                  "type": "count_distinct",
                  "field": "countrycode",
                  "alias": "country_count"
                }
              ],
              "input": {
                "type": "table",
                "name": "countrylanguage"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "country.name",
      "country.code",
      "countrylanguage.language",
      "MAX_PERC_PER_COUNTRY.lang_perc"
    ],
    "input": {
      "operation": "join",
      "condition": "MAX_PERC_PER_COUNTRY.countrycode = country.code",
      "left": {
        "operation": "join",
        "condition": "MAX_PERC_PER_COUNTRY.countrycode = countrylanguage.countrycode AND MAX_PERC_PER_COUNTRY.language = countrylanguage.language",
        "left": {
          "operation": "selection",
          "condition": "lang_perc = max_lang_perc",
          "input": {
            "operation": "aggregation",
            "group_by": [
              "countrycode"
            ],
            "aggregates": [
              {
                "type": "max",
                "field": "lang_perc"
              }
            ],
            "input": {
              "operation": "projection",
              "attributes": [
                "language",
                "countrycode",
                "(population / country.population) as lang_perc"
              ],
              "input": {
                "operation": "join",
                "condition": "language_population.countrycode = country.code",
                "left": {
                  "type": "table",
                  "name": "language_population"
                },
                "right": {
                  "type": "table",
                  "name": "country"
                }
              }
            }
          }
        },
        "right": {
          "type": "table",
          "name": "countrylanguage"
        }
      },
      "right": {
        "type": "table",
        "name": "country"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "countrycode",
      "language"
    ],
    "input": {
      "operation": "selection",
      "condition": "countrylanguage.percentage = MaxPercentage.max_percentage",
      "input": {
        "operation": "join",
        "condition": "countrylanguage.countrycode = MaxPercentage.countrycode",
        "left": {
          "type": "table",
          "name": "countrylanguage"
        },
        "right": {
          "operation": "aggregation",
          "group_by": [
            "countrycode"
          ],
          "aggregates": [
            {
              "type": "max",
              "field": "percentage",
              "alias": "max_percentage"
            }
          ],
          "input": {
            "type": "table",
            "name": "countrylanguage"
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "countrycode"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "countrycode"
      ],
      "input": {
        "operation": "join",
        "condition": "CL_spanish.percentage = MaxPercentage.max(percentage)",
        "left": {
          "operation": "selection",
          "condition": "language = 'Spanish'",
          "input": {
            "type": "table",
            "name": "countrylanguage"
          }
        },
        "right": {
          "operation": "aggregation",
          "group_by": [],
          "aggregates": [
            {
              "type": "max",
              "field": "percentage"
            }
          ],
          "input": {
            "operation": "selection",
            "condition": "language = 'Spanish'",
            "input": {
              "type": "table",
              "name": "countrylanguage"
            }
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "countrycode"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "countrycode"
      ],
      "input": {
        "operation": "selection",
        "condition": "language = 'Spanish' AND isofficial = 'T' AND percentage > 50",
        "input": {
          "type": "table",
          "name": "countrylanguage"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "countrycode"
    ],
    "input": {
      "operation": "selection",
      "condition": "percentage = MaxSpanishPercentage",
      "input": {
        "operation": "selection",
        "condition": "language = 'Spanish'",
        "input": {
          "operation": "table",
          "name": "countrylanguage"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "countrycode"
    ],
    "input": {
      "operation": "selection",
      "condition": "A.percentage = B.max_percentage",
      "input": {
        "operation": "cartesian_product",
        "left": {
          "operation": "rename",
          "new_name": "A",
          "input": {
            "operation": "projection",
            "attributes": [
              "countrycode",
              "percentage"
            ],
            "input": {
              "operation": "selection",
              "condition": "language = 'Spanish'",
              "input": {
                "type": "table",
                "name": "countrylanguage"
              }
            }
          }
        },
        "right": {
          "operation": "rename",
          "new_name": "B",
          "input": {
            "operation": "aggregation",
            "group_by": [
              "countrycode"
            ],
            "aggregates": [
              {
                "type": "max",
                "field": "percentage",
                "alias": "max_percentage"
              }
            ],
            "input": {
              "type": "table",
              "name": "countrylanguage"
            }
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "conductor_id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "conductor_id"
      ],
      "input": {
        "operation": "table",
        "name": "conductor"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "conductor_id"
      }
    ],
    "input": {
      "type": "table",
      "name": "conductor"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "extension",
      "order_by": {
        "attributes": [
          "age"
        ],
        "order": "asc"
      },
      "input": {
        "operation": "selection",
        "condition": "true",
        "input": {
          "type": "table",
          "name": "conductor"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "extension",
      "order_by": {
        "attributes": [
          "age"
        ],
        "order": "asc"
      },
      "input": {
        "operation": "selection",
        "condition": "true",
        "input": {
          "type": "table",
          "name": "Conductor"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "nationality != 'USA'",
      "input": {
        "type": "table",
        "name": "conductor"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "nationality != 'USA'",
      "input": {
        "type": "table",
        "name": "conductor"
      }
    }
  },
  {
    "operation": "extension",
    "order_by": {
      "attributes": [
        "year_founded"
      ],
      "order": "desc"
    },
    "input": {
      "operation": "projection",
      "attributes": [
        "record_company"
      ],
      "input": {
        "operation": "projection",
        "attributes": [
          "orchestra_id",
          "record_company",
          "year_founded"
        ],
        "input": {
          "operation": "join",
          "condition": "orchestra.record_company = record_company.record_company",
          "left": {
            "type": "table",
            "name": "orchestra"
          },
          "right": {
            "type": "table",
            "name": "record_company"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "record_company"
    ],
    "input": {
      "operation": "extension",
      "order_by": {
        "attributes": [
          "founded_year"
        ],
        "order": "desc"
      },
      "input": {
        "operation": "selection",
        "condition": "true",
        "input": {
          "type": "table",
          "name": "orchestra"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "avg",
        "field": "attendance"
      }
    ],
    "input": {
      "type": "table",
      "name": "show"
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "avg",
        "field": "attendance"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "attendance"
      ],
      "input": {
        "type": "table",
        "name": "show"
      }
    }
  },
  {
    "operation": "union",
    "input1": {
      "operation": "projection",
      "attributes": [
        "max(share) AS MaxShare"
      ],
      "input": {
        "operation": "aggregation",
        "aggregates": [
          {
            "type": "max",
            "field": "share"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "share"
          ],
          "input": {
            "operation": "selection",
            "condition": "type != 'Live final'",
            "input": {
              "type": "table",
              "name": "performance"
            }
          }
        }
      }
    },
    "input2": {
      "operation": "projection",
      "attributes": [
        "min(share) AS MinShare"
      ],
      "input": {
        "operation": "aggregation",
        "aggregates": [
          {
            "type": "min",
            "field": "share"
          }
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "share"
          ],
          "input": {
            "operation": "selection",
            "condition": "type != 'Live final'",
            "input": {
              "type": "table",
              "name": "performance"
            }
          }
        }
      }
    }
  },
  [
    {
      "operation": "selection",
      "condition": "type != 'Live final'",
      "input": {
        "type": "table",
        "name": "performance"
      }
    },
    {
      "operation": "projection",
      "attributes": [
        "share"
      ],
      "input": {
        "operation": "selection",
        "condition": "type != 'Live final'",
        "input": {
          "type": "table",
          "name": "performance"
        }
      }
    },
    {
      "operation": "aggregation",
      "group_by": [],
      "aggregates": [
        {
          "type": "max",
          "field": "share"
        }
      ],
      "input": {
        "operation": "projection",
        "attributes": [
          "share"
        ],
        "input": {
          "operation": "selection",
          "condition": "type != 'Live final'",
          "input": {
            "type": "table",
            "name": "performance"
          }
        }
      }
    },
    {
      "operation": "aggregation",
      "group_by": [],
      "aggregates": [
        {
          "type": "min",
          "field": "share"
        }
      ],
      "input": {
        "operation": "projection",
        "attributes": [
          "share"
        ],
        "input": {
          "operation": "selection",
          "condition": "type != 'Live final'",
          "input": {
            "type": "table",
            "name": "performance"
          }
        }
      }
    }
  ],
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "nationality"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "nationality"
      ],
      "input": {
        "operation": "selection",
        "distinct": true,
        "input": {
          "type": "table",
          "name": "conductor"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "*"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "nationality"
      ],
      "input": {
        "type": "table",
        "name": "conductor"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "extension",
      "order_by": {
        "attributes": [
          "years_of_work"
        ],
        "order": "desc"
      },
      "input": {
        "operation": "rename",
        "new_name": "conductor_id_years_of_work",
        "input": {
          "operation": "projection",
          "attributes": [
            "conductor_id"
          ],
          "input": {
            "operation": "aggregation",
            "group_by": [
              "conductor_id"
            ],
            "aggregates": [
              {
                "type": "max_min_difference",
                "field": "date",
                "alias": "years_of_work"
              }
            ],
            "input": {
              "operation": "selection",
              "condition": "if_first_show = 'yes'",
              "input": {
                "operation": "join",
                "condition": "",
                "left": {
                  "operation": "join",
                  "condition": "",
                  "left": {
                    "type": "table",
                    "name": "show"
                  },
                  "right": {
                    "type": "table",
                    "name": "performance"
                  }
                },
                "right": {
                  "type": "table",
                  "name": "orchestra"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "union",
      "left": {
        "operation": "join",
        "condition": "conductor.conductor_id = orchestra.conductor_id",
        "left": {
          "operation": "selection",
          "condition": "true",
          "input": {
            "type": "table",
            "name": "conductor"
          }
        },
        "right": {
          "operation": "join",
          "condition": "orchestra.orchestra_id = performance.orchestra_id",
          "left": {
            "operation": "selection",
            "condition": "true",
            "input": {
              "type": "table",
              "name": "orchestra"
            }
          },
          "right": {
            "operation": "join",
            "condition": "performance.performance_id = show.performance_id",
            "left": {
              "operation": "selection",
              "condition": "true",
              "input": {
                "type": "table",
                "name": "performance"
              }
            },
            "right": {
              "operation": "selection",
              "condition": "true",
              "input": {
                "type": "table",
                "name": "show"
              }
            }
          }
        }
      },
      "right": {
        "operation": "join",
        "condition": "conductor.conductor_id = orchestra.conductor_id",
        "left": {
          "operation": "selection",
          "condition": "true",
          "input": {
            "type": "table",
            "name": "conductor"
          }
        },
        "right": {
          "operation": "join",
          "condition": "orchestra.orchestra_id = performance.orchestra_id",
          "left": {
            "operation": "selection",
            "condition": "true",
            "input": {
              "type": "table",
              "name": "orchestra"
            }
          },
          "right": {
            "operation": "join",
            "condition": "performance.performance_id = show.performance_id",
            "left": {
              "operation": "selection",
              "condition": "true",
              "input": {
                "type": "table",
                "name": "performance"
              }
            },
            "right": {
              "operation": "selection",
              "condition": "true",
              "input": {
                "type": "table",
                "name": "show"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "years_in_work = max_years",
      "input": {
        "operation": "join",
        "condition": "conductor_id = conductor_id",
        "left": {
          "operation": "aggregation",
          "group_by": [
            "conductor_id"
          ],
          "aggregates": [
            {
              "type": "max",
              "field": "year_of_founded",
              "alias": "max_years"
            }
          ],
          "input": {
            "operation": "join",
            "condition": "performance_id = performance_id",
            "left": {
              "operation": "join",
              "condition": "orchestra_id = orchestra_id",
              "left": {
                "type": "table",
                "name": "conductor"
              },
              "right": {
                "type": "table",
                "name": "orchestra"
              }
            },
            "right": {
              "type": "table",
              "name": "performance"
            }
          }
        },
        "right": {
          "type": "table",
          "name": "conductor"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "result.conductor_id = conductor.conductor_id",
      "left": {
        "operation": "selection",
        "condition": "years = max_years",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "conductor_id"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "show_id",
              "alias": "years"
            }
          ],
          "input": {
            "operation": "join",
            "condition": "show.performance_id = performance.performance_id AND performance.orchestra_id = orchestra.orchestra_id",
            "left": {
              "type": "table",
              "name": "show"
            },
            "right": {
              "operation": "join",
              "condition": "orchestra.conductor_id = conductor.conductor_id",
              "left": {
                "type": "table",
                "name": "performance"
              },
              "right": {
                "operation": "projection",
                "attributes": [
                  "conductor_id",
                  "orchestra_id"
                ],
                "input": {
                  "operation": "join",
                  "condition": "orchestra.conductor_id = conductor.conductor_id",
                  "left": {
                    "type": "table",
                    "name": "orchestra"
                  },
                  "right": {
                    "type": "table",
                    "name": "conductor"
                  }
                }
              }
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "conductor"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "conductor.name",
      "orchestra.orchestra"
    ],
    "input": {
      "operation": "join",
      "condition": "conductor.conductor_id = orchestra.conductor_id",
      "left": {
        "type": "table",
        "name": "conductor"
      },
      "right": {
        "type": "table",
        "name": "orchestra"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "orchestra"
    ],
    "input": {
      "operation": "join",
      "condition": "conductor.conductor_id = orchestra.conductor_id",
      "left": {
        "type": "table",
        "name": "conductor"
      },
      "right": {
        "type": "table",
        "name": "orchestra"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "conductor_id",
      "left": {
        "operation": "selection",
        "condition": "count > 1",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "conductor_id"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "*"
            }
          ],
          "input": {
            "type": "table",
            "name": "orchestra"
          }
        }
      },
      "right": {
        "type": "table",
        "name": "conductor"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "count > 1",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "conductor_id",
          "name"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "orchestra_id",
            "alias": "count"
          }
        ],
        "input": {
          "operation": "join",
          "condition": "orchestra.conductor_id = conductor.conductor_id",
          "left": {
            "type": "table",
            "name": "orchestra"
          },
          "right": {
            "type": "table",
            "name": "conductor"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "conductor_id = conducted_most",
      "input": {
        "operation": "join",
        "condition": null,
        "left": {
          "operation": "rename",
          "new_name": "conducted_most",
          "input": {
            "operation": "projection",
            "attributes": [
              "conductor_id"
            ],
            "input": {
              "operation": "selection",
              "condition": "max_count = \u03b3_max(count_orchestra_id)",
              "input": {
                "operation": "aggregation",
                "group_by": [
                  "conductor_id"
                ],
                "aggregates": [
                  {
                    "type": "count",
                    "field": "orchestra_id",
                    "alias": "count_orchestra_id"
                  }
                ],
                "input": {
                  "operation": "selection",
                  "condition": "conductor_id \u2260 NULL",
                  "input": {
                    "operation": "rename",
                    "new_name": "orchestra_conductor",
                    "input": {
                      "operation": "projection",
                      "attributes": [
                        "conductor_id"
                      ],
                      "input": {
                        "type": "table",
                        "name": "orchestra"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "right": {
          "type": "table",
          "name": "conductor"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "conductor_id = conductor_id_most",
      "left": {
        "operation": "rename",
        "new_names": {
          "conductor_id_most": "conductor_id"
        },
        "input": {
          "operation": "division",
          "left": {
            "operation": "aggregation",
            "group_by": [
              "conductor_id"
            ],
            "aggregates": [
              {
                "type": "count",
                "field": "orchestra_id",
                "alias": "num_orchestras"
              }
            ],
            "input": {
              "type": "table",
              "name": "orchestra"
            }
          },
          "right": {
            "operation": "aggregation",
            "group_by": [
              "conductor_id"
            ],
            "aggregates": [
              {
                "type": "max",
                "field": "num_orchestras"
              }
            ],
            "input": {
              "operation": "aggregation",
              "group_by": [
                "conductor_id"
              ],
              "aggregates": [
                {
                  "type": "count",
                  "field": "orchestra_id",
                  "alias": "num_orchestras"
                }
              ],
              "input": {
                "type": "table",
                "name": "orchestra"
              }
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "conductor"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "year_of_work > 2008",
      "input": {
        "operation": "join",
        "left": {
          "type": "table",
          "name": "orchestra"
        },
        "right": {
          "type": "table",
          "name": "conductor"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "year_of_founded > 2008",
      "input": {
        "operation": "join",
        "condition": "orchestra.conductor_id = conductor.conductor_id",
        "left": {
          "type": "table",
          "name": "orchestra"
        },
        "right": {
          "type": "table",
          "name": "conductor"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "record_company",
      "COUNT(orchestra_id) \u2192 num_orchestras"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "record_company"
      ],
      "aggregates": [
        {
          "type": "count",
          "field": "orchestra_id"
        }
      ],
      "input": {
        "type": "table",
        "name": "orchestra"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "record_company"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "orchestra_id"
      }
    ],
    "input": {
      "operation": "table",
      "name": "orchestra"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "orchestra",
      "count"
    ],
    "input": {
      "operation": "join",
      "condition": "orchestra.orchestra_id = P1.orchestra_id",
      "left": {
        "operation": "join",
        "condition": "orchestra.orchestra_id = P.performance_id",
        "left": {
          "type": "table",
          "name": "orchestra"
        },
        "right": {
          "operation": "rename",
          "new_name": "P",
          "input": {
            "operation": "projection",
            "attributes": [
              "performance_id"
            ],
            "input": {
              "type": "table",
              "name": "orchestra"
            }
          }
        }
      },
      "right": {
        "operation": "rename",
        "new_name": "P1",
        "input": {
          "operation": "join",
          "condition": "performance.performance_id = show.performance_id",
          "left": {
            "operation": "projection",
            "attributes": [
              "orchestra_id"
            ],
            "input": {
              "type": "table",
              "name": "performance"
            }
          },
          "right": {
            "operation": "projection",
            "attributes": [
              "orchestra_id"
            ],
            "input": {
              "type": "table",
              "name": "show"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "major_record_format",
      "count_orchestra_id"
    ],
    "input": {
      "operation": "extension",
      "order_by": {
        "attributes": [
          "count_orchestra_id"
        ],
        "order": "desc"
      },
      "input": {
        "operation": "join",
        "condition": null,
        "left": {
          "operation": "aggregation",
          "group_by": [
            "major_record_format"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "orchestra_id",
              "alias": "count_orchestra_id"
            }
          ],
          "input": {
            "type": "table",
            "name": "orchestra"
          }
        },
        "right": {
          "operation": "rename",
          "alias": "temp",
          "input": {
            "operation": "projection",
            "attributes": [
              "major_record_format",
              "count_orchestra_id"
            ],
            "input": {
              "operation": "aggregation",
              "group_by": [
                "major_record_format"
              ],
              "aggregates": [
                {
                  "type": "count",
                  "field": "orchestra_id",
                  "alias": "count_orchestra_id"
                }
              ],
              "input": {
                "type": "table",
                "name": "orchestra"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "record_company"
    ],
    "input": {
      "operation": "selection",
      "condition": "count = max(count)",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "record_company"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "*",
            "as": "count"
          }
        ],
        "input": {
          "type": "table",
          "name": "orchestra"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "record_company"
    ],
    "input": {
      "operation": "selection",
      "condition": "n = max(n)",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "record_company"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "orchestra_id",
            "alias": "n"
          }
        ],
        "input": {
          "operation": "table",
          "name": "orchestra"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "orchestra_name"
    ],
    "input": {
      "operation": "selection",
      "condition": "orchestra_id NOT IN (\u03c0_orchestra_id performance)",
      "input": {
        "operation": "projection",
        "attributes": [
          "orchestra_id"
        ],
        "input": {
          "type": "table",
          "name": "orchestra"
        }
      }
    }
  },
  {
    "operation": "difference",
    "left": {
      "operation": "projection",
      "attributes": [
        "orchestra_id"
      ],
      "input": {
        "type": "table",
        "name": "orchestra"
      }
    },
    "right": {
      "operation": "projection",
      "attributes": [
        "orchestra_id"
      ],
      "input": {
        "type": "table",
        "name": "performance"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "record_company"
    ],
    "input": {
      "operation": "intersection",
      "left": {
        "operation": "join",
        "condition": "true",
        "left": {
          "operation": "selection",
          "condition": "date<2003",
          "input": {
            "type": "table",
            "name": "performance"
          }
        },
        "right": {
          "type": "table",
          "name": "orchestra"
        }
      },
      "right": {
        "operation": "join",
        "condition": "true",
        "left": {
          "operation": "selection",
          "condition": "date>=2003",
          "input": {
            "type": "table",
            "name": "performance"
          }
        },
        "right": {
          "type": "table",
          "name": "orchestra"
        }
      }
    }
  },
  {
    "operation": "selection",
    "condition": "record_company IS NOT NULL",
    "input": {
      "operation": "intersection",
      "left": {
        "operation": "projection",
        "attributes": [
          "record_company"
        ],
        "input": {
          "operation": "selection",
          "condition": "year_of_founded < 2003",
          "input": {
            "type": "table",
            "name": "orchestra"
          }
        }
      },
      "right": {
        "operation": "projection",
        "attributes": [
          "record_company"
        ],
        "input": {
          "operation": "selection",
          "condition": "year_of_founded > 2003",
          "input": {
            "type": "table",
            "name": "orchestra"
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "orchestra_id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "orchestra_id"
      ],
      "input": {
        "operation": "selection",
        "condition": "major_record_format = 'CD' OR major_record_format = 'DVD'",
        "input": {
          "type": "table",
          "name": "orchestra"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "orchestra"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "orchestra"
      }
    ],
    "input": {
      "operation": "selection",
      "condition": "major_record_format IN ('CD', 'DVD')",
      "input": {
        "type": "table",
        "name": "orchestra"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "year_of_founded"
    ],
    "input": {
      "operation": "selection",
      "condition": "_count_performance_id > 1",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "orchestra_id"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "performance_id",
            "as": "_count_performance_id"
          }
        ],
        "input": {
          "operation": "join",
          "condition": "performance.orchestra_id = orchestra.orchestra_id",
          "left": {
            "type": "table",
            "name": "performance"
          },
          "right": {
            "type": "table",
            "name": "orchestra"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "year_of_founded"
    ],
    "input": {
      "operation": "selection",
      "condition": "performance_count > 1",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "orchestra_id"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "performance_id",
            "alias": "performance_count"
          }
        ],
        "input": {
          "operation": "rename",
          "alias": "TMP",
          "input": {
            "operation": "projection",
            "attributes": [
              "orchestra_id",
              "performance_id"
            ],
            "input": {
              "type": "table",
              "name": "performance"
            }
          }
        }
      }
    },
    "join": {
      "type": "join",
      "condition": "TMP.orchestra_id = orchestra.orchestra_id",
      "left": {
        "type": "subquery",
        "name": "TMP"
      },
      "right": {
        "type": "table",
        "name": "orchestra"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": "*",
    "input": {
      "operation": "selection",
      "condition": "True",
      "input": {
        "type": "table",
        "name": "highschooler"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "id",
        "alias": "num_highschoolers"
      }
    ],
    "input": {
      "type": "table",
      "name": "highschooler"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "grade"
    ],
    "input": {
      "type": "table",
      "name": "highschooler"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "grade"
    ],
    "input": {
      "type": "table",
      "name": "highschooler"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "grade"
    ],
    "input": {
      "type": "table",
      "name": "highschooler"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "grade"
    ],
    "input": {
      "type": "table",
      "name": "highschooler"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "grade"
    ],
    "input": {
      "operation": "selection",
      "condition": "name = 'Kyle'",
      "input": {
        "type": "table",
        "name": "highschooler"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "grade"
    ],
    "input": {
      "operation": "selection",
      "condition": "name = 'Kyle'",
      "input": {
        "type": "table",
        "name": "highschooler"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "grade = 10",
      "input": {
        "type": "table",
        "name": "highschooler"
      }
    }
  },
  {
    "operation": "selection",
    "condition": "grade=10",
    "input": {
      "operation": "projection",
      "attributes": [
        "name"
      ],
      "input": {
        "type": "table",
        "name": "highschooler"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "id"
    ],
    "input": {
      "operation": "selection",
      "condition": "name = 'Kyle'",
      "input": {
        "type": "table",
        "name": "highschooler"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "id"
    ],
    "input": {
      "operation": "selection",
      "condition": "name='Kyle'",
      "input": {
        "type": "table",
        "name": "highschooler"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "*"
      }
    ],
    "input": {
      "operation": "selection",
      "condition": "grade = 9 OR grade = 10",
      "input": {
        "type": "table",
        "name": "highschooler"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "*"
      }
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "or": [
          {
            "equals": [
              "grade",
              9
            ]
          },
          {
            "equals": [
              "grade",
              10
            ]
          }
        ]
      },
      "input": {
        "type": "table",
        "name": "highschooler"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "grade"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "id",
        "alias": "num_highschoolers"
      }
    ],
    "input": {
      "type": "table",
      "name": "highschooler"
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "grade"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "id",
        "as": "num_highschoolers"
      }
    ],
    "input": {
      "type": "table",
      "name": "highschooler"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "grade"
    ],
    "input": {
      "operation": "selection",
      "condition": "count = max_count",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "grade"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "id",
            "alias": "count"
          }
        ],
        "input": {
          "type": "table",
          "name": "highschooler"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "grade"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [],
      "aggregates": [
        {
          "type": "max",
          "field": "num_highschoolers"
        }
      ],
      "input": {
        "operation": "aggregation",
        "group_by": [
          "grade"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "id",
            "alias": "num_highschoolers"
          }
        ],
        "input": {
          "operation": "table",
          "name": "highschooler"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "grade"
    ],
    "input": {
      "operation": "selection",
      "condition": "cnt >= 4",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "grade"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "id",
            "alias": "cnt"
          }
        ],
        "input": {
          "type": "table",
          "name": "highschooler"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "grade"
    ],
    "input": {
      "operation": "selection",
      "condition": "count >= 4",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "grade"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "id",
            "as": "count"
          }
        ],
        "input": {
          "type": "table",
          "name": "highschooler"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "student_id",
      "number_of_friends"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "student_id"
      ],
      "aggregates": [
        {
          "type": "count",
          "field": "friend_id",
          "as": "number_of_friends"
        }
      ],
      "input": {
        "type": "table",
        "name": "friend"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "student_id",
      "friend_count"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "student_id"
      ],
      "aggregates": [
        {
          "type": "count",
          "field": "friend_id",
          "alias": "friend_count"
        }
      ],
      "input": {
        "operation": "table",
        "name": "friend"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "COUNT(friend_id)"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "name"
      ],
      "aggregates": [
        {
          "type": "count",
          "field": "friend_id"
        }
      ],
      "input": {
        "operation": "selection",
        "condition": "highschooler.id = student_id",
        "input": {
          "operation": "join",
          "condition": "highschooler.id = student_id",
          "left": {
            "type": "table",
            "name": "highschooler"
          },
          "right": {
            "type": "table",
            "name": "friend"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "COUNT(friend_id)"
    ],
    "input": {
      "operation": "join",
      "condition": "highschooler.id=student_id",
      "left": {
        "operation": "table",
        "name": "highschooler"
      },
      "right": {
        "operation": "rename",
        "new_name": "H",
        "input": {
          "operation": "join",
          "condition": "H.id=student_id",
          "left": {
            "operation": "projection",
            "attributes": [
              "name",
              "id"
            ],
            "input": {
              "operation": "table",
              "name": "highschooler"
            }
          },
          "right": {
            "operation": "table",
            "name": "friend"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "id",
      "left": {
        "operation": "selection",
        "condition": "id",
        "input": {
          "operation": "projection",
          "attributes": [
            "student_id"
          ],
          "input": {
            "operation": "join",
            "condition": "max_count",
            "left": {
              "operation": "aggregation",
              "group_by": [
                "student_id"
              ],
              "aggregates": [
                {
                  "type": "count",
                  "field": "*",
                  "as": "friend_count"
                }
              ],
              "input": {
                "type": "table",
                "name": "friend"
              }
            },
            "right": {
              "operation": "aggregation",
              "group_by": [
                "max_count"
              ],
              "aggregates": [
                {
                  "type": "max",
                  "field": "friend_count"
                }
              ],
              "input": {
                "operation": "aggregation",
                "group_by": [
                  "student_id"
                ],
                "aggregates": [
                  {
                    "type": "count",
                    "field": "*",
                    "as": "friend_count"
                  }
                ],
                "input": {
                  "type": "table",
                  "name": "friend"
                }
              }
            }
          }
        }
      },
      "right": {
        "operation": "rename",
        "alias": "highschooler",
        "input": {
          "type": "table",
          "name": "highschooler"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "count = max(count)",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "name"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "*",
            "as": "count"
          }
        ],
        "input": {
          "operation": "join",
          "condition": "highschooler.id = friend.student_id",
          "left": {
            "type": "table",
            "name": "highschooler"
          },
          "right": {
            "type": "table",
            "name": "friend"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "num_friends \u2265 3",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "id"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "friend_id",
            "alias": "num_friends"
          }
        ],
        "input": {
          "operation": "join",
          "condition": "highschooler.id = friend.student_id",
          "left": {
            "type": "table",
            "name": "highschooler"
          },
          "right": {
            "type": "table",
            "name": "friend"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "count >= 3",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "student_id"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "friend_id",
            "alias": "count"
          }
        ],
        "input": {
          "operation": "join",
          "left": {
            "type": "table",
            "name": "friend"
          },
          "right": {
            "type": "table",
            "name": "highschooler"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "highschooler.id = friend.friend_id",
      "input": {
        "operation": "projection",
        "attributes": [
          "friend.friend_id"
        ],
        "input": {
          "operation": "selection",
          "condition": "highschooler.name = 'Kyle'",
          "input": {
            "operation": "join",
            "condition": "highschooler.id = friend.student_id",
            "left": {
              "type": "table",
              "name": "highschooler"
            },
            "right": {
              "type": "table",
              "name": "friend"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "join",
      "left": {
        "operation": "join",
        "left": {
          "operation": "projection",
          "attributes": [
            "friend_id"
          ],
          "input": {
            "operation": "join",
            "left": {
              "operation": "selection",
              "condition": {
                "field": "name",
                "operator": "=",
                "value": "Kyle"
              },
              "input": {
                "type": "table",
                "name": "highschooler"
              }
            },
            "right": {
              "operation": "selection",
              "condition": {
                "field": "student_id",
                "operator": "=",
                "field2": "id"
              },
              "input": {
                "type": "table",
                "name": "friend"
              }
            },
            "condition": "highschooler.id = friend.student_id"
          }
        }
      },
      "right": {
        "type": "table",
        "name": "highschooler"
      },
      "condition": "highschooler.id = friend.friend_id"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "id"
    ],
    "input": {
      "operation": "join",
      "condition": "highschooler.id = friend.student_id",
      "left": {
        "operation": "selection",
        "condition": "name = 'Kyle'",
        "input": {
          "type": "table",
          "name": "highschooler"
        }
      },
      "right": {
        "type": "table",
        "name": "friend"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "student_id"
    ],
    "input": {
      "operation": "join",
      "left": {
        "operation": "selection",
        "condition": {
          "attribute": "name",
          "value": "Kyle"
        },
        "input": {
          "type": "table",
          "name": "highschooler"
        }
      },
      "right": {
        "type": "table",
        "name": "friend"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "id"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "type": "not_in",
        "field": "id",
        "set": {
          "operation": "union",
          "left": {
            "operation": "projection",
            "attributes": [
              "student_id"
            ],
            "input": {
              "type": "table",
              "name": "friend"
            }
          },
          "right": {
            "operation": "projection",
            "attributes": [
              "friend_id"
            ],
            "input": {
              "type": "table",
              "name": "friend"
            }
          }
        }
      },
      "input": {
        "type": "table",
        "name": "highschooler"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "id"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "and": [
          {
            "not_in": [
              {
                "field": "id"
              },
              {
                "operation": "projection",
                "attributes": [
                  "student_id"
                ],
                "input": {
                  "type": "table",
                  "name": "friend"
                }
              }
            ]
          },
          {
            "not_in": [
              {
                "field": "id"
              },
              {
                "operation": "projection",
                "attributes": [
                  "friend_id"
                ],
                "input": {
                  "type": "table",
                  "name": "friend"
                }
              }
            ]
          }
        ]
      },
      "input": {
        "type": "table",
        "name": "highschooler"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "id NOT IN (\u03c0_student_id(friend)) AND id NOT IN (\u03c0_friend_id(friend))",
      "input": {
        "type": "table",
        "name": "highschooler"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "field": "id",
        "operator": "notin",
        "value": {
          "operation": "union",
          "input_left": {
            "operation": "projection",
            "attributes": [
              "student_id"
            ],
            "input": {
              "type": "table",
              "name": "friend"
            }
          },
          "input_right": {
            "operation": "projection",
            "attributes": [
              "friend_id"
            ],
            "input": {
              "type": "table",
              "name": "friend"
            }
          }
        }
      },
      "input": {
        "type": "table",
        "name": "highschooler"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "id"
    ],
    "input": {
      "operation": "selection",
      "condition": "id IN (\u03c0_student_id(friend) \u2229 \u03c0_liked_id(likes))",
      "input": {
        "type": "table",
        "name": "highschooler"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "id"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "operation": "intersection",
        "left": {
          "operation": "projection",
          "attributes": [
            "student_id"
          ],
          "input": {
            "operation": "table",
            "name": "friend"
          }
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "student_id"
          ],
          "input": {
            "operation": "table",
            "name": "likes"
          }
        }
      },
      "input": {
        "operation": "table",
        "name": "highschooler"
      }
    }
  },
  {
    "operation": "intersection",
    "input": [
      {
        "operation": "projection",
        "attributes": [
          "name"
        ],
        "input": {
          "operation": "selection",
          "condition": "student_id = id",
          "input": {
            "operation": "join",
            "left": {
              "type": "table",
              "name": "highschooler"
            },
            "right": {
              "operation": "projection",
              "attributes": [
                "student_id"
              ],
              "input": {
                "type": "table",
                "name": "friend"
              }
            }
          }
        }
      },
      {
        "operation": "projection",
        "attributes": [
          "name"
        ],
        "input": {
          "operation": "selection",
          "condition": "liked_id = id",
          "input": {
            "operation": "join",
            "left": {
              "type": "table",
              "name": "highschooler"
            },
            "right": {
              "operation": "projection",
              "attributes": [
                "liked_id"
              ],
              "input": {
                "type": "table",
                "name": "likes"
              }
            }
          }
        }
      }
    ]
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "attribute": "id",
        "operator": "in",
        "value": {
          "operation": "intersection",
          "left": {
            "operation": "projection",
            "attributes": [
              "student_id"
            ],
            "input": {
              "type": "table",
              "name": "friend"
            }
          },
          "right": {
            "operation": "projection",
            "attributes": [
              "liked_id"
            ],
            "input": {
              "type": "table",
              "name": "likes"
            }
          }
        }
      },
      "input": {
        "type": "table",
        "name": "highschooler"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "student_id"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "liked_id",
        "alias": "like_count"
      }
    ],
    "input": {
      "operation": "rename",
      "new_name": "likes",
      "input": {
        "type": "table",
        "name": "likes"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "student_id",
      "count(*)"
    ],
    "input": {
      "operation": "rename",
      "new_name": "L",
      "input": {
        "operation": "division",
        "numerator": {
          "type": "table",
          "name": "likes"
        },
        "denominator": [
          "student_id"
        ]
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "count_likes"
    ],
    "input": {
      "operation": "join",
      "condition": "id = student_id",
      "left": {
        "operation": "rename",
        "new_names": [
          "name",
          "id"
        ],
        "input": {
          "type": "table",
          "name": "highschooler"
        }
      },
      "right": {
        "operation": "aggregation",
        "group_by": [
          "student_id"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "liked_id",
            "alias": "count_likes"
          }
        ],
        "input": {
          "type": "table",
          "name": "likes"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "count(liked_id)"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "name"
      ],
      "aggregates": [
        {
          "type": "count",
          "field": "liked_id"
        }
      ],
      "input": {
        "operation": "join",
        "condition": "highschooler.id = likes.student_id",
        "left": {
          "type": "table",
          "name": "highschooler"
        },
        "right": {
          "type": "table",
          "name": "likes"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "likes_count = MAX(likes_count)",
      "input": {
        "operation": "rename",
        "newName": "likes_count",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "id",
            "name"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "student_id",
              "newName": "likes_count"
            }
          ],
          "input": {
            "operation": "selection",
            "condition": "highschooler.id = likes.liked_id",
            "input": {
              "operation": "join",
              "left": {
                "type": "table",
                "name": "highschooler"
              },
              "right": {
                "type": "table",
                "name": "likes"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "cnt = (max(cnt))",
      "input": {
        "operation": "rename",
        "new_name": "cnt",
        "old_name": "count(student_id)",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "name"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "student_id"
            }
          ],
          "input": {
            "operation": "rename",
            "new_name": "H",
            "old_name": "(likes \u2a1d (likes.student_id = highschooler.id) \u2a1d (likes.liked_id = highschooler.id) (highschooler))",
            "input": {
              "operation": "join",
              "condition": "likes.student_id = highschooler.id",
              "left": {
                "operation": "join",
                "condition": "likes.liked_id = highschooler.id",
                "left": {
                  "type": "table",
                  "name": "likes"
                },
                "right": {
                  "operation": "selection",
                  "condition": "likes.liked_id = highschooler.id",
                  "input": {
                    "type": "table",
                    "name": "highschooler"
                  }
                }
              },
              "right": {
                "type": "table",
                "name": "highschooler"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "count >= 2",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "student_id"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "liked_id",
            "alias": "count"
          }
        ],
        "input": {
          "operation": "join",
          "condition": "student_id = id",
          "left": {
            "operation": "table",
            "name": "likes"
          },
          "right": {
            "operation": "table",
            "name": "highschooler"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "like_count >= 2",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "student_id"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "liked_id",
            "alias": "like_count"
          }
        ],
        "input": {
          "operation": "join",
          "condition": "likes.student_id = highschooler.id",
          "left": {
            "type": "table",
            "name": "likes"
          },
          "right": {
            "type": "table",
            "name": "highschooler"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "join",
      "left": {
        "operation": "selection",
        "condition": "grade > 5",
        "input": {
          "operation": "rename",
          "new_name": "S",
          "input": {
            "type": "table",
            "name": "highschooler"
          }
        }
      },
      "right": {
        "operation": "selection",
        "condition": "count(friend_id) >= 2",
        "input": {
          "operation": "division",
          "left": {
            "operation": "rename",
            "new_name": "F",
            "input": {
              "type": "table",
              "name": "friend"
            }
          },
          "right": {
            "operation": "rename",
            "new_name": "S",
            "input": {
              "operation": "projection",
              "attributes": [
                "id"
              ],
              "input": {
                "type": "table",
                "name": "highschooler"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "join",
      "left": {
        "operation": "selection",
        "condition": "grade > 5",
        "input": {
          "type": "table",
          "name": "highschooler"
        }
      },
      "right": {
        "operation": "selection",
        "condition": "count >= 2",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "student_id"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "friend_id",
              "alias": "count"
            }
          ],
          "input": {
            "type": "table",
            "name": "friend"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "count(*)"
    ],
    "input": {
      "operation": "selection",
      "condition": "name = 'Kyle'",
      "input": {
        "operation": "join",
        "condition": "highschooler.id = likes.liked_id",
        "left": {
          "type": "table",
          "name": "highschooler"
        },
        "right": {
          "type": "table",
          "name": "likes"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "liked_id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "liked_id"
      ],
      "input": {
        "operation": "join",
        "condition": "highschooler.id=likes.liked_id",
        "left": {
          "operation": "selection",
          "condition": "name='Kyle'",
          "input": {
            "type": "table",
            "name": "highschooler"
          }
        },
        "right": {
          "type": "table",
          "name": "likes"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "avg(grade)"
    ],
    "input": {
      "operation": "selection",
      "condition": "exists (\u03c0_id (\u03c1_H(highschooler) \u2a1d (H.id = F.friend_id) \u03c1_F(friend)) = student_id)",
      "input": {
        "operation": "table",
        "name": "highschooler"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "grade"
    ],
    "input": {
      "operation": "join",
      "left": {
        "type": "table",
        "name": "highschooler"
      },
      "right": {
        "type": "table",
        "name": "friend"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "min_grade"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "and": [
          {
            "not_in": [
              "id",
              {
                "operation": "projection",
                "attributes": [
                  "student_id"
                ],
                "input": {
                  "type": "table",
                  "name": "friend"
                }
              }
            ]
          },
          {
            "not_in": [
              "id",
              {
                "operation": "projection",
                "attributes": [
                  "friend_id"
                ],
                "input": {
                  "type": "table",
                  "name": "friend"
                }
              }
            ]
          }
        ]
      },
      "input": {
        "type": "table",
        "name": "highschooler"
      }
    }
  },
  {
    "operation": "join",
    "left": {
      "operation": "projection",
      "attributes": [
        "grade"
      ],
      "input": {
        "operation": "selection",
        "condition": "id \u2209 (\u03c0_student_id(friend)(highschooler))",
        "input": {
          "type": "table",
          "name": "highschooler"
        }
      }
    },
    "right": {
      "operation": "aggregation",
      "group_by": [],
      "aggregates": [
        {
          "type": "min",
          "field": "grade"
        }
      ],
      "input": {
        "type": "table",
        "name": "highschooler"
      }
    }
  },
  {
    "operation": "intersection",
    "left": {
      "operation": "projection",
      "attributes": [
        "state"
      ],
      "input": {
        "type": "table",
        "name": "owners"
      }
    },
    "right": {
      "operation": "projection",
      "attributes": [
        "state"
      ],
      "input": {
        "type": "table",
        "name": "professionals"
      }
    }
  },
  {
    "operation": "intersection",
    "input1": {
      "operation": "projection",
      "attributes": [
        "state"
      ],
      "input": {
        "type": "table",
        "name": "owners"
      }
    },
    "input2": {
      "operation": "projection",
      "attributes": [
        "state"
      ],
      "input": {
        "type": "table",
        "name": "professionals"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "avg(age)"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "field": "dog_id",
        "in": {
          "operation": "projection",
          "attributes": [
            "dog_id"
          ],
          "input": {
            "type": "table",
            "name": "treatments"
          }
        }
      },
      "input": {
        "type": "table",
        "name": "dogs"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "avg(age)"
    ],
    "input": {
      "operation": "selection",
      "condition": "treatments.dog_id = dogs.dog_id",
      "input": {
        "operation": "join",
        "left": {
          "type": "table",
          "name": "dogs"
        },
        "right": {
          "type": "table",
          "name": "treatments"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "professional_id",
      "last_name",
      "cell_number"
    ],
    "input": {
      "operation": "union",
      "left": {
        "operation": "selection",
        "condition": "state='Indiana'",
        "input": {
          "type": "table",
          "name": "professionals"
        }
      },
      "right": {
        "operation": "projection",
        "attributes": [
          "professional_id",
          "last_name",
          "cell_number"
        ],
        "input": {
          "operation": "join",
          "condition": "treatments.professional_id = treatment_count.professional_id",
          "left": {
            "operation": "aggregation",
            "group_by": [
              "professional_id"
            ],
            "aggregates": [
              {
                "type": "count",
                "field": "treatment_id",
                "as": "treatment_count"
              }
            ],
            "input": {
              "type": "table",
              "name": "treatments"
            }
          },
          "right": {
            "operation": "join",
            "condition": "treatments.professional_id = treatment_count.professional_id",
            "left": {
              "operation": "selection",
              "condition": "treatment_count > 2",
              "input": {
                "operation": "aggregation",
                "group_by": [
                  "professional_id"
                ],
                "aggregates": [
                  {
                    "type": "count",
                    "field": "treatment_id",
                    "as": "treatment_count"
                  }
                ],
                "input": {
                  "type": "table",
                  "name": "treatments"
                }
              }
            },
            "right": {
              "type": "table",
              "name": "professionals"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "professional_id",
      "last_name",
      "cell_number"
    ],
    "input": {
      "operation": "union",
      "left": {
        "operation": "selection",
        "condition": "state='Indiana'",
        "input": {
          "type": "table",
          "name": "professionals"
        }
      },
      "right": {
        "operation": "projection",
        "attributes": [
          "professional_id",
          "last_name",
          "cell_number"
        ],
        "input": {
          "operation": "selection",
          "condition": "treatment_count > 2",
          "input": {
            "operation": "aggregation",
            "group_by": [
              "professional_id",
              "last_name",
              "cell_number"
            ],
            "aggregates": [
              {
                "type": "count",
                "field": "treatment_id",
                "as": "treatment_count"
              }
            ],
            "input": {
              "operation": "join",
              "condition": "professionals.professional_id = treatments.professional_id",
              "left": {
                "type": "table",
                "name": "professionals"
              },
              "right": {
                "type": "table",
                "name": "treatments"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "treatment_cost <= 1000",
      "input": {
        "operation": "join",
        "condition": "dogs.dog_id = treatments.dog_id",
        "left": {
          "type": "table",
          "name": "dogs"
        },
        "right": {
          "operation": "join",
          "condition": "treatments.charge_id = charges.charge_id",
          "input": {
            "operation": "selection",
            "condition": "charge_type = 'treatment'",
            "input": {
              "type": "table",
              "name": "charges"
            }
          },
          "left": {
            "type": "table",
            "name": "treatments"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "total_cost <= 1000",
      "input": {
        "operation": "division",
        "left": {
          "operation": "aggregation",
          "group_by": [
            "dog_id"
          ],
          "aggregates": [
            {
              "type": "sum",
              "field": "cost",
              "alias": "total_cost"
            }
          ],
          "input": {
            "operation": "join",
            "condition": "treatments.treatment_type_id = treatment_types.id",
            "left": {
              "type": "table",
              "name": "treatments"
            },
            "right": {
              "type": "table",
              "name": "treatment_types"
            }
          }
        },
        "right": {
          "type": "table",
          "name": "dogs"
        }
      }
    }
  },
  {
    "operation": "difference",
    "input": {
      "operation": "union",
      "inputs": [
        {
          "operation": "projection",
          "attributes": [
            "first_name"
          ],
          "input": {
            "type": "table",
            "name": "professionals"
          }
        },
        {
          "operation": "projection",
          "attributes": [
            "first_name"
          ],
          "input": {
            "type": "table",
            "name": "owners"
          }
        }
      ]
    },
    "right": {
      "operation": "projection",
      "attributes": [
        "name"
      ],
      "input": {
        "type": "table",
        "name": "dogs"
      }
    }
  },
  {
    "operation": "difference",
    "left": {
      "operation": "union",
      "left": {
        "operation": "projection",
        "attributes": [
          "first_name"
        ],
        "input": {
          "type": "table",
          "name": "professionals"
        }
      },
      "right": {
        "operation": "projection",
        "attributes": [
          "first_name"
        ],
        "input": {
          "type": "table",
          "name": "owners"
        }
      }
    },
    "right": {
      "operation": "projection",
      "attributes": [
        "name"
      ],
      "input": {
        "type": "table",
        "name": "dogs"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "professional_id",
      "role_code",
      "email_address"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "operation": "not_in",
        "attribute": "professional_id",
        "values": {
          "operation": "projection",
          "attributes": [
            "professional_id"
          ],
          "input": {
            "operation": "selection",
            "condition": {
              "attribute": "dog_id",
              "operator": "is_not_null"
            },
            "input": {
              "type": "table",
              "name": "treatments"
            }
          }
        }
      },
      "input": {
        "type": "table",
        "name": "professionals"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "professional_id",
      "role_code",
      "email_address"
    ],
    "input": {
      "operation": "selection",
      "condition": "professional_id NOT IN (SELECT professional_id FROM (SELECT dog_id FROM dogs) AS tempDogs INNER JOIN treatments ON tempDogs.dog_id = treatments.dog_id)",
      "input": {
        "type": "table",
        "name": "professionals"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "owner_id",
      "first_name",
      "last_name"
    ],
    "input": {
      "operation": "join",
      "conditions": "",
      "left": {
        "operation": "selection",
        "condition": "owner_id = max_owner_id",
        "input": {
          "operation": "rename",
          "attributes": [
            {
              "owner_dog_count": "\u03b3_owner_id; count(dog_id)\u2192dog_count (dogs)"
            }
          ],
          "input": {
            "operation": "join",
            "conditions": "",
            "left": {
              "operation": "aggregation",
              "group_by": [
                "owner_id"
              ],
              "aggregates": [
                {
                  "type": "count",
                  "field": "dog_id",
                  "output_field": "dog_count"
                }
              ],
              "input": {
                "type": "table",
                "name": "dogs"
              }
            },
            "right": {
              "operation": "rename",
              "attributes": [
                {
                  "max_count": "\u03b3_max(dog_count)\u2192max_dog_count"
                }
              ],
              "input": {
                "operation": "aggregation",
                "group_by": [],
                "aggregates": [
                  {
                    "type": "max",
                    "field": "dog_count",
                    "output_field": "max_dog_count"
                  }
                ],
                "input": {
                  "operation": "rename",
                  "attributes": [
                    {
                      "count": "dog_count"
                    }
                  ],
                  "input": {
                    "operation": "aggregation",
                    "group_by": [
                      "owner_id"
                    ],
                    "aggregates": [
                      {
                        "type": "count",
                        "field": "dog_id",
                        "output_field": "dog_count"
                      }
                    ],
                    "input": {
                      "type": "table",
                      "name": "dogs"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "right": {
        "type": "table",
        "name": "owners"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "owner_id",
      "first_name",
      "last_name"
    ],
    "input": {
      "operation": "join",
      "condition": null,
      "left": {
        "operation": "selection",
        "condition": "cnt = (\u03c0cnt(owners) (dogs \u22c8 owners))",
        "input": {
          "operation": "join",
          "condition": null,
          "left": {
            "type": "table",
            "name": "dogs"
          },
          "right": {
            "type": "table",
            "name": "owners"
          }
        }
      },
      "right": {
        "operation": "aggregation",
        "group_by": [
          "owner_id"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "dog_id",
            "alias": "cnt"
          }
        ],
        "input": {
          "type": "table",
          "name": "dogs"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "professional_id",
      "role_code",
      "first_name"
    ],
    "input": {
      "operation": "selection",
      "condition": "count >= 2",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "professional_id",
          "role_code",
          "first_name"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "treatment_id",
            "alias": "count"
          }
        ],
        "input": {
          "operation": "join",
          "condition": "treatments.professional_id = professionals.professional_id",
          "left": {
            "type": "table",
            "name": "professionals"
          },
          "right": {
            "type": "table",
            "name": "treatments"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "professional_id",
      "role_code",
      "first_name"
    ],
    "input": {
      "operation": "selection",
      "condition": "count_treatment_type_code >= 2",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "professional_id",
          "role_code",
          "first_name"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "treatment_type_code",
            "alias": "count_treatment_type_code"
          }
        ],
        "input": {
          "operation": "join",
          "condition": "<implicit join condition>",
          "left": {
            "type": "table",
            "name": "professionals"
          },
          "right": {
            "type": "table",
            "name": "treatments"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "breed_name"
    ],
    "input": {
      "operation": "selection",
      "condition": "count = max(count)",
      "input": {
        "operation": "projection",
        "attributes": [
          "breed_name",
          "count"
        ],
        "input": {
          "operation": "projection",
          "attributes": [
            "breed_name"
          ],
          "input": {
            "operation": "projection",
            "attributes": [
              "breed_code"
            ],
            "input": {
              "operation": "aggregation",
              "group_by": [
                "breed_code"
              ],
              "aggregates": [
                {
                  "type": "count",
                  "field": "dog_id",
                  "as": "count"
                }
              ],
              "input": {
                "type": "table",
                "name": "dogs"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "breed_name"
    ],
    "input": {
      "operation": "selection",
      "condition": "dog_count = max_count",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "breed_code",
          "breed_name"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "dog_id",
            "alias": "dog_count"
          },
          {
            "type": "max",
            "field": "dog_count",
            "alias": "max_count"
          }
        ],
        "input": {
          "operation": "join",
          "condition": "dogs.breed_code = breeds.breed_code",
          "left": {
            "type": "table",
            "name": "dogs"
          },
          "right": {
            "type": "table",
            "name": "breeds"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "owner_id",
      "last_name"
    ],
    "input": {
      "operation": "join",
      "condition": "owners.owner_id = dogs.owner_id",
      "left": {
        "operation": "table",
        "name": "owners"
      },
      "right": {
        "operation": "join",
        "condition": "dogs.dog_id = treatments.dog_id",
        "left": {
          "operation": "table",
          "name": "dogs"
        },
        "right": {
          "operation": "join",
          "condition": "\u03b3_owner_id.count(treatment_id) = max_treatment_count",
          "left": {
            "operation": "aggregation",
            "group_by": [
              "owner_id"
            ],
            "aggregates": [
              {
                "type": "count",
                "field": "treatment_id",
                "as": "treatment_count"
              }
            ],
            "input": {
              "operation": "projection",
              "attributes": [
                "owner_id",
                "treatment_id"
              ],
              "input": {
                "operation": "join",
                "condition": "dogs.owner_id = owners.owner_id",
                "left": {
                  "operation": "table",
                  "name": "dogs"
                },
                "right": {
                  "operation": "join",
                  "condition": "dogs.dog_id = treatments.dog_id",
                  "left": {
                    "operation": "table",
                    "name": "dogs"
                  },
                  "right": {
                    "operation": "table",
                    "name": "treatments"
                  }
                }
              }
            }
          },
          "right": {
            "operation": "aggregation",
            "group_by": [],
            "aggregates": [
              {
                "type": "max",
                "field": "treatment_count",
                "as": "max_treatment_count"
              }
            ],
            "input": {
              "operation": "projection",
              "attributes": [
                "treatment_count"
              ],
              "input": {
                "operation": "aggregation",
                "group_by": [
                  "owner_id"
                ],
                "aggregates": [
                  {
                    "type": "count",
                    "field": "treatment_id",
                    "as": "treatment_count"
                  }
                ],
                "input": {
                  "operation": "projection",
                  "attributes": [
                    "owner_id",
                    "treatment_id"
                  ],
                  "input": {
                    "operation": "join",
                    "condition": "dogs.owner_id = owners.owner_id",
                    "left": {
                      "operation": "table",
                      "name": "dogs"
                    },
                    "right": {
                      "operation": "join",
                      "condition": "dogs.dog_id = treatments.dog_id",
                      "left": {
                        "operation": "table",
                        "name": "dogs"
                      },
                      "right": {
                        "operation": "table",
                        "name": "treatments"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "owner_id",
      "last_name"
    ],
    "input": {
      "operation": "selection",
      "condition": "total_cost = max_total",
      "input": {
        "operation": "join",
        "condition": null,
        "left": {
          "operation": "aggregation",
          "group_by": [
            "owner_id"
          ],
          "aggregates": [
            {
              "type": "sum",
              "field": "cost_of_treatment",
              "as": "total_cost"
            }
          ],
          "input": {
            "operation": "join",
            "condition": null,
            "left": {
              "operation": "join",
              "condition": null,
              "left": {
                "type": "table",
                "name": "owners"
              },
              "right": {
                "type": "table",
                "name": "dogs"
              }
            },
            "right": {
              "type": "table",
              "name": "treatments"
            }
          }
        },
        "right": {
          "operation": "rename",
          "new_name": "max_total",
          "input": {
            "operation": "aggregation",
            "group_by": [
              "owner_id"
            ],
            "aggregates": [
              {
                "type": "max",
                "field": "total_cost",
                "as": "max_total"
              }
            ],
            "input": {
              "operation": "aggregation",
              "group_by": [
                "owner_id"
              ],
              "aggregates": [
                {
                  "type": "sum",
                  "field": "cost_of_treatment",
                  "as": "total_cost"
                }
              ],
              "input": {
                "operation": "join",
                "condition": null,
                "left": {
                  "operation": "join",
                  "condition": null,
                  "left": {
                    "type": "table",
                    "name": "owners"
                  },
                  "right": {
                    "type": "table",
                    "name": "dogs"
                  }
                },
                "right": {
                  "type": "table",
                  "name": "treatments"
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "treatment_type_description"
    ],
    "input": {
      "operation": "selection",
      "condition": "total_cost = (SELECT SUM(cost_of_treatment) FROM treatments GROUP BY treatment_type_code)",
      "input": {
        "operation": "difference",
        "left": {
          "operation": "aggregation",
          "group_by": [
            "treatment_type_code"
          ],
          "aggregates": [
            {
              "type": "sum",
              "field": "cost_of_treatment",
              "alias": "total_cost"
            }
          ],
          "input": {
            "type": "table",
            "name": "treatments"
          }
        },
        "right": {
          "operation": "rename",
          "new_names": [
            "treatment_types"
          ],
          "input": {
            "type": "table",
            "name": "treatment_types"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "treatment_type_description"
    ],
    "input": {
      "operation": "join",
      "left": {
        "operation": "selection",
        "condition": "cost_of_treatment = min_cost_of_treatment",
        "input": {
          "operation": "join",
          "condition": "min_cost_of_treatment = cost_of_treatment",
          "left": {
            "operation": "projection",
            "attributes": [
              "min_cost_of_treatment"
            ],
            "input": {
              "operation": "aggregation",
              "aggregates": [
                {
                  "type": "min",
                  "field": "cost_of_treatment",
                  "alias": "min_cost_of_treatment"
                }
              ],
              "group_by": [],
              "input": {
                "type": "table",
                "name": "treatments"
              }
            }
          },
          "right": {
            "type": "table",
            "name": "treatments"
          }
        }
      },
      "right": {
        "type": "table",
        "name": "treatment_types"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "owner_id",
      "zip_code"
    ],
    "input": {
      "operation": "selection",
      "condition": "total_amount = max(total_amount)",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "owner_id",
          "zip_code"
        ],
        "aggregates": [
          {
            "type": "sum",
            "field": "amount",
            "as": "total_amount"
          }
        ],
        "input": {
          "operation": "join",
          "condition": "owners.owner_id = dogs.owner_id",
          "left": {
            "type": "table",
            "name": "owners"
          },
          "right": {
            "operation": "join",
            "condition": "dogs.dog_id = treatments.dog_id",
            "left": {
              "type": "table",
              "name": "dogs"
            },
            "right": {
              "type": "table",
              "name": "treatments"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "owner_id",
      "zip_code"
    ],
    "input": {
      "operation": "selection",
      "condition": "total_spent = max_total_spent",
      "input": {
        "operation": "rename",
        "new_name": "temp_owners",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "owner_id"
          ],
          "aggregates": [
            {
              "type": "sum",
              "field": "charge_amount",
              "as": "total_spent"
            }
          ],
          "input": {
            "operation": "join",
            "condition": "true",
            "left": {
              "operation": "join",
              "condition": "true",
              "left": {
                "operation": "join",
                "condition": "true",
                "left": {
                  "type": "table",
                  "name": "charges"
                },
                "right": {
                  "type": "table",
                  "name": "treatments"
                }
              },
              "right": {
                "type": "table",
                "name": "dogs"
              }
            },
            "right": {
              "type": "table",
              "name": "owners"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "professional_id",
      "cell_number"
    ],
    "input": {
      "operation": "selection",
      "condition": "count >= 2",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "professional_id",
          "cell_number"
        ],
        "aggregates": [],
        "input": {
          "operation": "aggregation",
          "group_by": [
            "professional_id",
            "treatment_type_code"
          ],
          "aggregates": [],
          "input": {
            "operation": "join",
            "condition": "",
            "left": {
              "type": "table",
              "name": "treatments"
            },
            "right": {
              "type": "table",
              "name": "professionals"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "professional_id",
      "cell_number"
    ],
    "input": {
      "operation": "selection",
      "condition": "count_treatment_types >= 2",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "professional_id"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "treatment_type_code",
            "alias": "count_treatment_types"
          }
        ],
        "input": {
          "operation": "join",
          "condition": "treatments.professional_id = professionals.professional_id",
          "left": {
            "type": "table",
            "name": "treatments"
          },
          "right": {
            "type": "table",
            "name": "professionals"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "last_name"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "operation": "in",
        "attribute": "professional_id",
        "values": {
          "operation": "projection",
          "attributes": [
            "professional_id",
            "treatment_id"
          ],
          "input": {
            "operation": "selection",
            "condition": {
              "operation": "less_than",
              "attribute": "charge_amount",
              "value": {
                "operation": "aggregation",
                "type": "avg",
                "field": "charge_amount",
                "input": {
                  "operation": "projection",
                  "attributes": [
                    "charge_amount"
                  ],
                  "input": {
                    "operation": "join",
                    "condition": "treatments.professional_id = charges.professional_id",
                    "left": {
                      "type": "table",
                      "name": "treatments"
                    },
                    "right": {
                      "type": "table",
                      "name": "charges"
                    }
                  }
                }
              }
            },
            "input": {
              "operation": "join",
              "condition": "treatments.professional_id = charges.professional_id",
              "left": {
                "type": "table",
                "name": "treatments"
              },
              "right": {
                "type": "table",
                "name": "charges"
              }
            }
          }
        }
      },
      "input": {
        "type": "table",
        "name": "treatments"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "last_name"
    ],
    "input": {
      "operation": "selection",
      "condition": "cost_of_treatment < GAVG(cost_of_treatment, treatments)",
      "input": {
        "operation": "aggregation",
        "group_by": [],
        "aggregates": [
          {
            "type": "avg",
            "field": "cost_of_treatment"
          }
        ],
        "input": {
          "operation": "join",
          "condition": "treatments.professional_id = professionals.professional_id",
          "left": {
            "type": "table",
            "name": "professionals"
          },
          "right": {
            "type": "table",
            "name": "treatments"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "date_of_treatment",
      "first_name"
    ],
    "input": {
      "operation": "join",
      "condition": "treatments.professional_id = professionals.professional_id",
      "left": {
        "operation": "projection",
        "attributes": [
          "date_of_treatment",
          "professional_id"
        ],
        "input": {
          "type": "table",
          "name": "treatments"
        }
      },
      "right": {
        "operation": "projection",
        "attributes": [
          "professional_id",
          "first_name"
        ],
        "input": {
          "type": "table",
          "name": "professionals"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "date_of_treatment",
      "first_name"
    ],
    "input": {
      "operation": "selection",
      "condition": "treatments.professional_id = professionals.professional_id",
      "input": {
        "operation": "join",
        "left": {
          "type": "table",
          "name": "treatments"
        },
        "right": {
          "type": "table",
          "name": "professionals"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "cost_of_treatment",
      "treatment_type_description"
    ],
    "input": {
      "operation": "selection",
      "condition": "treatments.treatment_type_code = treatment_types.treatment_type_code",
      "input": {
        "operation": "join",
        "left": {
          "type": "table",
          "name": "treatments"
        },
        "right": {
          "type": "table",
          "name": "treatment_types"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "cost_of_treatment",
      "treatment_type_description"
    ],
    "input": {
      "operation": "join",
      "condition": "treatments.treatment_type_code = treatment_types.treatment_type_code",
      "left": {
        "type": "table",
        "name": "treatments"
      },
      "right": {
        "type": "table",
        "name": "treatment_types"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "last_name",
      "size_description"
    ],
    "input": {
      "operation": "join",
      "left": {
        "operation": "join",
        "left": {
          "type": "table",
          "name": "owners"
        },
        "right": {
          "type": "table",
          "name": "dogs"
        }
      },
      "right": {
        "type": "table",
        "name": "sizes"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "last_name",
      "size_code"
    ],
    "input": {
      "operation": "selection",
      "condition": "dogs.owner_id = owners.owner_id",
      "input": {
        "operation": "join",
        "left": {
          "type": "table",
          "name": "owners"
        },
        "right": {
          "type": "table",
          "name": "dogs"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "name"
    ],
    "input": {
      "operation": "join",
      "left": {
        "type": "table",
        "name": "owners"
      },
      "right": {
        "type": "table",
        "name": "dogs"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "owners.owner_id = dogs.owner_id",
      "left": {
        "type": "table",
        "name": "owners"
      },
      "right": {
        "type": "table",
        "name": "dogs"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "d.name",
      "t.date_of_treatment"
    ],
    "input": {
      "operation": "selection",
      "condition": "b.breed_code == rarest_breed.breed_code",
      "input": {
        "operation": "join",
        "condition": "d.breed_code = b.breed_code",
        "left": {
          "operation": "join",
          "condition": "",
          "left": {
            "type": "table",
            "name": "breeds"
          },
          "right": {
            "operation": "join",
            "condition": "",
            "left": {
              "type": "table",
              "name": "dogs"
            },
            "right": {
              "type": "table",
              "name": "treatments"
            }
          }
        },
        "right": {
          "operation": "subquery",
          "subquery": {
            "operation": "projection",
            "attributes": [
              "breed_code"
            ],
            "input": {
              "operation": "extension",
              "order_by": {
                "attributes": [
                  "count_dogs"
                ],
                "order": "asc"
              },
              "input": {
                "operation": "aggregation",
                "group_by": [
                  "breed_code"
                ],
                "aggregates": [
                  {
                    "type": "count",
                    "field": "dog_id",
                    "alias": "count_dogs"
                  }
                ],
                "input": {
                  "type": "table",
                  "name": "dogs"
                }
              }
            }
          },
          "limit": 1
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "date_of_treatment"
    ],
    "input": {
      "operation": "join",
      "conditions": [],
      "left": {
        "operation": "join",
        "conditions": [],
        "left": {
          "operation": "selection",
          "condition": "breed_code = breed_code",
          "input": {
            "operation": "join",
            "conditions": [],
            "left": {
              "operation": "aggregation",
              "group_by": [
                "breed_code"
              ],
              "aggregates": [
                {
                  "type": "count",
                  "field": "breed_code",
                  "alias": "breed_count"
                }
              ],
              "input": {
                "type": "table",
                "name": "dogs"
              }
            },
            "right": {
              "operation": "selection",
              "condition": "breed_count = MIN(breed_count)",
              "input": {
                "operation": "aggregation",
                "group_by": [
                  "breed_code"
                ],
                "aggregates": [
                  {
                    "type": "count",
                    "field": "breed_code",
                    "alias": "breed_count"
                  }
                ],
                "input": {
                  "type": "table",
                  "name": "dogs"
                }
              }
            }
          }
        },
        "right": {
          "type": "table",
          "name": "breeds"
        }
      },
      "right": {
        "type": "table",
        "name": "treatments"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "owners.owner_id = dogs.owner_id",
      "left": {
        "operation": "selection",
        "condition": "state = 'Virginia'",
        "input": {
          "type": "table",
          "name": "owners"
        }
      },
      "right": {
        "type": "table",
        "name": "dogs"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "name"
    ],
    "input": {
      "operation": "join",
      "condition": "owners.owner_id = dogs.owner_id",
      "left": {
        "operation": "selection",
        "condition": "street='Virginia'",
        "input": {
          "type": "table",
          "name": "owners"
        }
      },
      "right": {
        "type": "table",
        "name": "dogs"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "date_arrived",
      "date_departed"
    ],
    "input": {
      "operation": "join",
      "condition": "dogs.dog_id = treatments.dog_id",
      "left": {
        "type": "table",
        "name": "dogs"
      },
      "right": {
        "type": "table",
        "name": "treatments"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "date_arrived",
      "date_departed"
    ],
    "input": {
      "operation": "selection",
      "condition": "treatments.dog_id = dogs.dog_id",
      "input": {
        "operation": "join",
        "left": {
          "type": "table",
          "name": "dogs"
        },
        "right": {
          "type": "table",
          "name": "treatments"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "last_name"
    ],
    "input": {
      "operation": "join",
      "left": {
        "operation": "selection",
        "condition": "age = MIN(age)",
        "input": {
          "operation": "projection",
          "attributes": [
            "age"
          ],
          "input": {
            "type": "table",
            "name": "dogs"
          }
        }
      },
      "right": {
        "type": "table",
        "name": "owners"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "last_name"
    ],
    "input": {
      "operation": "selection",
      "condition": "age = min_age",
      "input": {
        "operation": "join",
        "left": {
          "operation": "join",
          "left": {
            "operation": "rename",
            "new_name": "min_age",
            "input": {
              "operation": "projection",
              "attributes": [
                "min(age)"
              ],
              "input": {
                "operation": "table",
                "name": "dogs"
              }
            }
          },
          "right": {
            "operation": "table",
            "name": "dogs"
          }
        },
        "right": {
          "operation": "table",
          "name": "owners"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "email_address"
    ],
    "input": {
      "operation": "selection",
      "condition": "state = 'Hawaii' OR state = 'Wisconsin'",
      "input": {
        "type": "table",
        "name": "professionals"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "email_address"
    ],
    "input": {
      "operation": "selection",
      "condition": "state = 'Hawaii' OR state = 'Wisconsin'",
      "input": {
        "type": "table",
        "name": "professionals"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "date_arrived",
      "date_departed"
    ],
    "input": {
      "type": "table",
      "name": "dogs"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "date_arrived",
      "date_departed"
    ],
    "input": {
      "type": "table",
      "name": "dogs"
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "dog_id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "dog_id"
      ],
      "input": {
        "type": "table",
        "name": "treatments"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "count",
        "field": "dog_id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "dog_id"
      ],
      "input": {
        "type": "table",
        "name": "treatments"
      }
    }
  },
  {
    "operation": "division",
    "dividend": {
      "operation": "projection",
      "attributes": [
        "professional_id"
      ],
      "input": {
        "operation": "join",
        "condition": "professionals.professional_id = treatments.professional_id",
        "left": {
          "type": "table",
          "name": "professionals"
        },
        "right": {
          "operation": "selection",
          "condition": {
            "operation": "projection",
            "attributes": [
              "dog_id"
            ],
            "input": {
              "operation": "join",
              "condition": "dogs.dog_id = treatments.dog_id",
              "left": {
                "type": "table",
                "name": "dogs"
              },
              "right": {
                "type": "table",
                "name": "treatments"
              }
            }
          }
        }
      }
    },
    "divisor": {
      "operation": "projection",
      "attributes": [
        "dog_id"
      ],
      "input": {
        "type": "table",
        "name": "treatments"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "count(professional_id)"
    ],
    "input": {
      "operation": "join",
      "left": {
        "operation": "join",
        "left": {
          "type": "table",
          "name": "treatments"
        },
        "right": {
          "type": "table",
          "name": "professionals"
        }
      },
      "right": {
        "type": "table",
        "name": "dogs"
      }
    }
  },
  {
    "operation": "selection",
    "condition": "city LIKE '%West%'",
    "input": {
      "operation": "projection",
      "attributes": [
        "role_code",
        "street",
        "city",
        "state"
      ],
      "input": {
        "type": "table",
        "name": "professionals"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "role_code",
      "street",
      "city",
      "state"
    ],
    "input": {
      "operation": "selection",
      "condition": "city LIKE '%West%'",
      "input": {
        "type": "table",
        "name": "professionals"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "last_name",
      "email_address"
    ],
    "input": {
      "operation": "selection",
      "condition": "state like '%North%'",
      "input": {
        "type": "table",
        "name": "owners"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "last_name",
      "email_address"
    ],
    "input": {
      "operation": "selection",
      "condition": "state LIKE '%North%'",
      "input": {
        "type": "table",
        "name": "owners"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "count_dogs"
    ],
    "input": {
      "operation": "aggregation",
      "aggregates": [
        {
          "type": "count",
          "field": "dog_id"
        }
      ],
      "input": {
        "operation": "selection",
        "condition": "age < AverageAge.avg_age",
        "input": {
          "operation": "cartesian_product",
          "left": {
            "type": "table",
            "name": "dogs"
          },
          "right": {
            "operation": "projection",
            "attributes": [
              "avg_age"
            ],
            "input": {
              "operation": "aggregation",
              "aggregates": [
                {
                  "type": "avg",
                  "field": "age",
                  "as": "avg_age"
                }
              ],
              "input": {
                "type": "table",
                "name": "dogs"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "join",
    "input": {
      "operation": "aggregation",
      "group_by": [],
      "aggregates": [
        {
          "type": "avg",
          "field": "age",
          "result_name": "A"
        }
      ],
      "input": {
        "operation": "selection",
        "condition": "abandoned_yn = 'N'",
        "input": {
          "type": "table",
          "name": "dogs"
        }
      }
    },
    "right": {
      "operation": "aggregation",
      "group_by": [],
      "aggregates": [
        {
          "type": "count",
          "field": "dog_id"
        }
      ],
      "input": {
        "operation": "projection",
        "attributes": [
          "dog_id"
        ],
        "input": {
          "operation": "selection",
          "condition": "age < A AND abandoned_yn = 'N'",
          "input": {
            "type": "table",
            "name": "dogs"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "cost_of_treatment"
    ],
    "input": {
      "operation": "selection",
      "condition": "date_of_treatment = (\u03c0_max(date_of_treatment)(treatments))",
      "input": {
        "type": "table",
        "name": "treatments"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "cost_of_treatment"
    ],
    "input": {
      "operation": "selection",
      "condition": "date_of_treatment = (max(date_of_treatment))",
      "input": {
        "type": "table",
        "name": "treatments"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "dog_id"
      }
    ],
    "input": {
      "operation": "rename",
      "new_name": "DogsWithoutTreatmentTemp(dog_id)",
      "input": {
        "operation": "difference",
        "left": {
          "operation": "projection",
          "attributes": [
            "dog_id"
          ],
          "input": {
            "type": "table",
            "name": "dogs"
          }
        },
        "right": {
          "operation": "projection",
          "attributes": [
            "dog_id"
          ],
          "input": {
            "type": "table",
            "name": "treatments"
          }
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "dog_id"
      }
    ],
    "input": {
      "operation": "difference",
      "left": {
        "operation": "projection",
        "attributes": [
          "dog_id"
        ],
        "input": {
          "type": "table",
          "name": "dogs"
        }
      },
      "right": {
        "operation": "projection",
        "attributes": [
          "dog_id"
        ],
        "input": {
          "type": "table",
          "name": "treatments"
        }
      }
    }
  },
  {
    "operation": "difference",
    "left": {
      "operation": "projection",
      "attributes": [
        "owner_id"
      ],
      "input": {
        "type": "table",
        "name": "owners"
      }
    },
    "right": {
      "operation": "projection",
      "attributes": [
        "owner_id"
      ],
      "input": {
        "type": "table",
        "name": "dogs"
      }
    }
  },
  {
    "operation": "difference",
    "left": {
      "operation": "projection",
      "attributes": [
        "owner_id"
      ],
      "input": {
        "type": "table",
        "name": "owners"
      }
    },
    "right": {
      "operation": "projection",
      "attributes": [
        "owner_id"
      ],
      "input": {
        "operation": "selection",
        "condition": "abandoned_yn='N'",
        "input": {
          "type": "table",
          "name": "dogs"
        }
      }
    }
  },
  {
    "operation": "difference",
    "left": {
      "operation": "projection",
      "attributes": [
        "professional_id"
      ],
      "input": {
        "operation": "selection",
        "condition": "role_code = 'professional'",
        "input": {
          "type": "table",
          "name": "professionals"
        }
      }
    },
    "right": {
      "operation": "projection",
      "attributes": [
        "professional_id"
      ],
      "input": {
        "operation": "selection",
        "condition": "treatment_type_code = 'dog'",
        "input": {
          "type": "table",
          "name": "treatments"
        }
      }
    }
  },
  {
    "operation": "difference",
    "left": {
      "operation": "projection",
      "attributes": [
        "professional_id"
      ],
      "input": {
        "type": "table",
        "name": "Professionals"
      }
    },
    "right": {
      "operation": "projection",
      "attributes": [
        "professional_id"
      ],
      "input": {
        "type": "table",
        "name": "Treatments"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "age",
      "weight"
    ],
    "input": {
      "operation": "selection",
      "condition": "abandoned_yn = 1",
      "input": {
        "type": "table",
        "name": "dogs"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "age",
      "weight"
    ],
    "input": {
      "operation": "selection",
      "condition": "abandoned_yn = 1",
      "input": {
        "type": "table",
        "name": "dogs"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "avg(age)"
    ],
    "input": {
      "operation": "rename",
      "new_name": "age",
      "input": {
        "type": "table",
        "name": "dogs"
      }
    }
  },
  {
    "operation": "aggregation",
    "aggregates": [
      {
        "type": "avg",
        "field": "age"
      }
    ],
    "input": {
      "type": "table",
      "name": "dogs"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "max(age)"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "attribute": "age"
      },
      "input": {
        "type": "table",
        "name": "dogs"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "age"
    ],
    "input": {
      "operation": "selection",
      "condition": "age = max_age",
      "input": {
        "operation": "join",
        "condition": "",
        "left": {
          "type": "table",
          "name": "dogs"
        },
        "right": {
          "operation": "rename",
          "new_name": "max_age",
          "input": {
            "operation": "aggregation",
            "group_by": [],
            "aggregates": [
              {
                "type": "max",
                "field": "age"
              }
            ],
            "input": {
              "type": "table",
              "name": "dogs"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "charge_type",
      "charge_amount"
    ],
    "input": {
      "type": "table",
      "name": "charges"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "charge_type",
      "charge_amount"
    ],
    "input": {
      "type": "table",
      "name": "charges"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "charge_amount"
    ],
    "input": {
      "operation": "selection",
      "condition": {
        "charge_amount": {
          "$eq": {
            "operation": "aggregation",
            "group_by": [],
            "aggregates": [
              {
                "type": "max",
                "field": "charge_amount"
              }
            ],
            "input": {
              "operation": "projection",
              "attributes": [
                "charge_amount"
              ],
              "input": {
                "type": "table",
                "name": "charges"
              }
            }
          }
        }
      },
      "input": {
        "type": "table",
        "name": "charges"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "charge_amount"
    ],
    "input": {
      "operation": "selection",
      "condition": "charge_amount=MAX(t1.charge_amount)",
      "input": {
        "operation": "rename",
        "new_name": "t1",
        "attributes": [
          "charge_amount"
        ],
        "input": {
          "type": "table",
          "name": "charges"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "email_address",
      "cell_number",
      "home_phone"
    ],
    "input": {
      "type": "table",
      "name": "professionals"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "email_address",
      "cell_number",
      "home_phone"
    ],
    "input": {
      "operation": "table",
      "name": "professionals"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "breed_code",
      "size_code"
    ],
    "input": {
      "type": "table",
      "name": "dogs"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "breed_name",
      "size_description"
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "breed_code",
        "size_code"
      ],
      "input": {
        "operation": "join",
        "condition": "dogs.breed_code = breeds.breed_code",
        "left": {
          "operation": "table",
          "name": "dogs"
        },
        "right": {
          "operation": "join",
          "condition": "dogs.size_code = sizes.size_code",
          "left": {
            "operation": "table",
            "name": "dogs"
          },
          "right": {
            "operation": "table",
            "name": "sizes"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "treatment_type_description"
    ],
    "input": {
      "operation": "selection",
      "condition": "(treatments.professional_id = professionals.professional_id AND treatments.treatment_type_code = treatment_types.treatment_type_code)",
      "input": {
        "operation": "cartesian_product",
        "left": {
          "operation": "cartesian_product",
          "left": {
            "type": "table",
            "name": "treatments"
          },
          "right": {
            "type": "table",
            "name": "professionals"
          }
        },
        "right": {
          "type": "table",
          "name": "treatment_types"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "first_name",
      "treatment_type_description"
    ],
    "input": {
      "operation": "join",
      "condition": "professionals.professional_id = treatments.professional_id AND treatments.treatment_type_code = treatment_types.treatment_type_code",
      "left": {
        "operation": "join",
        "condition": "professionals.professional_id = treatments.professional_id",
        "left": {
          "type": "table",
          "name": "professionals"
        },
        "right": {
          "type": "table",
          "name": "treatments"
        }
      },
      "right": {
        "type": "table",
        "name": "treatment_types"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "singer_id"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "singer_id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "singer_id"
      ],
      "input": {
        "type": "table",
        "name": "singer"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [],
    "aggregates": [
      {
        "type": "count",
        "field": "singer_id"
      }
    ],
    "input": {
      "type": "table",
      "name": "singer"
    }
  },
  {
    "operation": "join",
    "left": {
      "operation": "projection",
      "attributes": [
        "name"
      ],
      "input": {
        "operation": "join",
        "condition": "song.singer_id = singer.singer_id",
        "left": {
          "operation": "selection",
          "condition": "singer",
          "input": {
            "type": "table",
            "name": "singer"
          }
        },
        "right": {
          "operation": "selection",
          "condition": "song.singer_id = singer.singer_id",
          "input": {
            "type": "table",
            "name": "song"
          }
        }
      }
    },
    "right": {
      "operation": "division",
      "dividend": {
        "operation": "join",
        "left": {
          "operation": "projection",
          "attributes": [
            "net_worth_millions"
          ],
          "input": {
            "operation": "selection",
            "condition": "singer",
            "input": {
              "type": "table",
              "name": "singer"
            }
          }
        },
        "right": {
          "operation": "selection",
          "condition": "1=1",
          "input": {
            "type": "table",
            "name": "singer"
          }
        }
      },
      "divisor": {
        "operation": "projection",
        "attributes": [
          "name"
        ],
        "input": {
          "operation": "rename",
          "new_name": "singer",
          "input": {
            "operation": "projection",
            "attributes": [
              "singer"
            ],
            "input": {
              "operation": "rename",
              "new_name": "singer",
              "input": {
                "type": "table",
                "name": "singer"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "extension",
      "order_by": {
        "attributes": [
          "net_worth_millions"
        ],
        "order": "asc"
      },
      "input": {
        "operation": "selection",
        "condition": "1=1",
        "input": {
          "operation": "join",
          "condition": "name=net_worth_millions",
          "left": {
            "operation": "rename",
            "new_name": "temp",
            "input": {
              "operation": "projection",
              "attributes": [
                "name",
                "net_worth_millions"
              ],
              "input": {
                "type": "table",
                "name": "singer"
              }
            }
          },
          "right": {
            "operation": "rename",
            "new_name": "net_worth_millions",
            "input": {
              "operation": "projection",
              "attributes": [
                "net_worth_millions"
              ],
              "input": {
                "type": "table",
                "name": "net_worth_millions"
              }
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "birth_year",
      "citizenship"
    ],
    "input": {
      "operation": "selection",
      "condition": "song.singer_id = singer.singer_id",
      "input": {
        "operation": "join",
        "left": {
          "type": "table",
          "name": "song"
        },
        "right": {
          "type": "table",
          "name": "singer"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "birth_year",
      "citizenship"
    ],
    "input": {
      "type": "table",
      "name": "singer"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "citizenship != 'France'",
      "input": {
        "type": "table",
        "name": "singer"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "citizenship != 'French'",
      "input": {
        "type": "table",
        "name": "singer"
      }
    }
  },
  {
    "operation": "selection",
    "condition": "birth_year = 1948 OR birth_year = 1949",
    "input": {
      "operation": "projection",
      "attributes": [
        "name"
      ],
      "input": {
        "operation": "table",
        "name": "singer"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "birth_year=1948 OR birth_year=1949",
      "input": {
        "type": "table",
        "name": "singer"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "net_worth_millions = MAX(net_worth_millions)",
      "input": {
        "type": "table",
        "name": "singer"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "net_worth_millions = (MAX (net_worth_millions))",
      "input": {
        "operation": "aggregation",
        "aggregates": [
          {
            "type": "max",
            "field": "net_worth_millions"
          }
        ],
        "input": {
          "operation": "table",
          "name": "singer"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "citizenship",
      "num_singers"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "citizenship"
      ],
      "aggregates": [
        {
          "type": "count",
          "field": "singer_id",
          "alias": "num_singers"
        }
      ],
      "input": {
        "operation": "selection",
        "condition": "true",
        "input": {
          "type": "table",
          "name": "singer"
        }
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "citizenship"
    ],
    "aggregates": [
      {
        "type": "count",
        "field": "singer_id"
      }
    ],
    "input": {
      "operation": "projection",
      "attributes": [
        "citizenship",
        "singer_id"
      ],
      "input": {
        "type": "table",
        "name": "singer"
      }
    }
  },
  {
    "operation": "join",
    "left": {
      "operation": "projection",
      "attributes": [
        "citizenship"
      ],
      "input": {
        "operation": "aggregation",
        "group_by": [
          "citizenship"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "singer_id",
            "alias": "count"
          }
        ],
        "input": {
          "operation": "selection",
          "condition": "singer_id=singer_id",
          "input": {
            "type": "table",
            "name": "singer"
          }
        }
      }
    },
    "right": {
      "operation": "projection",
      "attributes": [
        "citizenship"
      ],
      "input": {
        "operation": "selection",
        "condition": "count = MAX(count)",
        "input": {
          "operation": "aggregation",
          "group_by": [
            "citizenship"
          ],
          "aggregates": [
            {
              "type": "count",
              "field": "singer_id",
              "alias": "count"
            }
          ],
          "input": {
            "operation": "selection",
            "condition": "singer_id=singer_id",
            "input": {
              "type": "table",
              "name": "singer"
            }
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "citizenship"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "citizenship"
      ],
      "aggregates": [
        {
          "type": "max",
          "field": "count"
        }
      ],
      "input": {
        "operation": "aggregation",
        "group_by": [
          "citizenship"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "*",
            "as": "count"
          }
        ],
        "input": {
          "type": "table",
          "name": "singer"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "citizenship",
      "max_net_worth_millions"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "citizenship"
      ],
      "aggregates": [
        {
          "type": "max",
          "field": "net_worth_millions"
        }
      ],
      "input": {
        "type": "table",
        "name": "singer"
      }
    }
  },
  {
    "operation": "aggregation",
    "group_by": [
      "citizenship"
    ],
    "aggregates": [
      {
        "type": "max",
        "field": "net_worth_millions"
      }
    ],
    "input": {
      "type": "table",
      "name": "singer"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "title",
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "song.singer_id = singer.singer_id",
      "input": {
        "operation": "join",
        "left": {
          "type": "table",
          "name": "song"
        },
        "right": {
          "type": "table",
          "name": "singer"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "title",
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "song.singer_id = singer.singer_id",
      "input": {
        "operation": "join",
        "left": {
          "operation": "table",
          "name": "song"
        },
        "right": {
          "operation": "table",
          "name": "singer"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "sales > 300000",
      "input": {
        "operation": "join",
        "condition": "song.singer_id = singer.singer_id",
        "left": {
          "type": "table",
          "name": "song"
        },
        "right": {
          "type": "table",
          "name": "singer"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "join",
      "left": {
        "operation": "selection",
        "predicate": "sales > 300000",
        "input": {
          "type": "table",
          "name": "song"
        }
      },
      "right": {
        "type": "table",
        "name": "singer"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "song_count > 1",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "singer_id"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "song_id",
            "as": "song_count"
          }
        ],
        "input": {
          "operation": "join",
          "condition": null,
          "left": {
            "type": "table",
            "name": "song"
          },
          "right": {
            "type": "table",
            "name": "singer"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "count > 1",
      "input": {
        "operation": "aggregation",
        "group_by": [
          "name"
        ],
        "aggregates": [
          {
            "type": "count",
            "field": "song_id",
            "alias": "count"
          }
        ],
        "input": {
          "operation": "join",
          "condition": "singer.singer_id = song.singer_id",
          "left": {
            "type": "table",
            "name": "singer"
          },
          "right": {
            "type": "table",
            "name": "song"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "total_sales"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "name"
      ],
      "aggregates": [
        {
          "type": "SUM",
          "field": "sales",
          "alias": "total_sales"
        }
      ],
      "input": {
        "operation": "projection",
        "attributes": [
          "name",
          "sales"
        ],
        "input": {
          "operation": "join",
          "condition": "singer.singer_id = song.singer_id",
          "left": {
            "type": "table",
            "name": "singer"
          },
          "right": {
            "type": "table",
            "name": "song"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name",
      "SUM(sales)"
    ],
    "input": {
      "operation": "aggregation",
      "group_by": [
        "name"
      ],
      "input": {
        "operation": "selection",
        "condition": "singer_id=singer_id",
        "input": {
          "operation": "join",
          "left": {
            "type": "table",
            "name": "singer"
          },
          "right": {
            "type": "table",
            "name": "song"
          }
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "singer_id NOT IN (SELECT singer_id FROM song)",
      "input": {
        "type": "table",
        "name": "singer"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "name"
    ],
    "input": {
      "operation": "selection",
      "condition": "singer_id NOT IN (song.singer_id)",
      "input": {
        "type": "table",
        "name": "singer"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "citizenship"
    ],
    "input": {
      "operation": "intersection",
      "left": {
        "operation": "selection",
        "condition": "birth_year < 1945",
        "input": {
          "type": "table",
          "name": "singer"
        }
      },
      "right": {
        "operation": "selection",
        "condition": "birth_year > 1955",
        "input": {
          "type": "table",
          "name": "singer"
        }
      }
    }
  },
  {
    "operation": "intersection",
    "left": {
      "operation": "projection",
      "attributes": [
        "citizenship"
      ],
      "input": {
        "operation": "selection",
        "condition": "birth_year < 1945",
        "input": {
          "type": "table",
          "name": "singer"
        }
      }
    },
    "right": {
      "operation": "projection",
      "attributes": [
        "citizenship"
      ],
      "input": {
        "operation": "selection",
        "condition": "birth_year > 1955",
        "input": {
          "type": "table",
          "name": "singer"
        }
      }
    }
  },
  {
    "operation": "selection",
    "condition": {
      "attribute": "tau",
      "value": "#"
    },
    "input": {
      "type": "table",
      "name": "other_available_features"
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "feature_type_code"
    ],
    "input": {
      "operation": "join",
      "condition": "other_available_features.feature_type_code = ref_feature_types.feature_type_code",
      "left": {
        "operation": "join",
        "condition": "properties.property_id = other_property_features.property_id",
        "left": {
          "operation": "selection",
          "condition": "apt_feature_1 = 'AirCon' \u2228 apt_feature_2 = 'AirCon' \u2228 apt_feature_3 = 'AirCon' \u2228 fld_feature_1 = 'AirCon'",
          "input": {
            "type": "table",
            "name": "properties"
          }
        },
        "right": {
          "operation": "join",
          "condition": "other_property_features.feature_id = other_available_features.feature_id",
          "left": {
            "type": "table",
            "name": "other_property_features"
          },
          "right": {
            "type": "table",
            "name": "other_available_features"
          }
        }
      },
      "right": {
        "type": "table",
        "name": "ref_feature_types"
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "property_type_description"
    ],
    "input": {
      "operation": "selection",
      "condition": "property_type_code='desired_code'",
      "input": {
        "operation": "join",
        "condition": "properties.property_type_code=ref_property_types.property_type_code",
        "left": {
          "type": "table",
          "name": "properties"
        },
        "right": {
          "type": "table",
          "name": "ref_property_types"
        }
      }
    }
  },
  {
    "operation": "projection",
    "attributes": [
      "property_name"
    ],
    "input": {
      "operation": "selection",
      "condition": "room_count > 1 AND (property_type_code = 'Apartment' OR property_type_code = 'House')",
      "input": {
        "type": "table",
        "name": "properties"
      }
    }
  }
]